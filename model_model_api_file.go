/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIFile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIFile{}

// ModelAPIFile struct for ModelAPIFile
type ModelAPIFile struct {
	ContentType *string `json:"content_type,omitempty"`
	// When true, these artifacts are excluded from reproduction
	IgnoreForFetch *bool `json:"ignore_for_fetch,omitempty"`
	// Human-readable name of the file
	Name *string `json:"name,omitempty"`
	// Link to the file
	Url *string `json:"url,omitempty"`
	UrlParsley *string `json:"url_parsley,omitempty"`
	// Determines who can see the file in the UI
	Visibility *string `json:"visibility,omitempty"`
}

// NewModelAPIFile instantiates a new ModelAPIFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIFile() *ModelAPIFile {
	this := ModelAPIFile{}
	return &this
}

// NewModelAPIFileWithDefaults instantiates a new ModelAPIFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIFileWithDefaults() *ModelAPIFile {
	this := ModelAPIFile{}
	return &this
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *ModelAPIFile) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIFile) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *ModelAPIFile) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *ModelAPIFile) SetContentType(v string) {
	o.ContentType = &v
}

// GetIgnoreForFetch returns the IgnoreForFetch field value if set, zero value otherwise.
func (o *ModelAPIFile) GetIgnoreForFetch() bool {
	if o == nil || IsNil(o.IgnoreForFetch) {
		var ret bool
		return ret
	}
	return *o.IgnoreForFetch
}

// GetIgnoreForFetchOk returns a tuple with the IgnoreForFetch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIFile) GetIgnoreForFetchOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnoreForFetch) {
		return nil, false
	}
	return o.IgnoreForFetch, true
}

// HasIgnoreForFetch returns a boolean if a field has been set.
func (o *ModelAPIFile) HasIgnoreForFetch() bool {
	if o != nil && !IsNil(o.IgnoreForFetch) {
		return true
	}

	return false
}

// SetIgnoreForFetch gets a reference to the given bool and assigns it to the IgnoreForFetch field.
func (o *ModelAPIFile) SetIgnoreForFetch(v bool) {
	o.IgnoreForFetch = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelAPIFile) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIFile) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelAPIFile) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelAPIFile) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ModelAPIFile) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIFile) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ModelAPIFile) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ModelAPIFile) SetUrl(v string) {
	o.Url = &v
}

// GetUrlParsley returns the UrlParsley field value if set, zero value otherwise.
func (o *ModelAPIFile) GetUrlParsley() string {
	if o == nil || IsNil(o.UrlParsley) {
		var ret string
		return ret
	}
	return *o.UrlParsley
}

// GetUrlParsleyOk returns a tuple with the UrlParsley field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIFile) GetUrlParsleyOk() (*string, bool) {
	if o == nil || IsNil(o.UrlParsley) {
		return nil, false
	}
	return o.UrlParsley, true
}

// HasUrlParsley returns a boolean if a field has been set.
func (o *ModelAPIFile) HasUrlParsley() bool {
	if o != nil && !IsNil(o.UrlParsley) {
		return true
	}

	return false
}

// SetUrlParsley gets a reference to the given string and assigns it to the UrlParsley field.
func (o *ModelAPIFile) SetUrlParsley(v string) {
	o.UrlParsley = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *ModelAPIFile) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIFile) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *ModelAPIFile) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *ModelAPIFile) SetVisibility(v string) {
	o.Visibility = &v
}

func (o ModelAPIFile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIFile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContentType) {
		toSerialize["content_type"] = o.ContentType
	}
	if !IsNil(o.IgnoreForFetch) {
		toSerialize["ignore_for_fetch"] = o.IgnoreForFetch
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.UrlParsley) {
		toSerialize["url_parsley"] = o.UrlParsley
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	return toSerialize, nil
}

type NullableModelAPIFile struct {
	value *ModelAPIFile
	isSet bool
}

func (v NullableModelAPIFile) Get() *ModelAPIFile {
	return v.value
}

func (v *NullableModelAPIFile) Set(val *ModelAPIFile) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIFile) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIFile(val *ModelAPIFile) *NullableModelAPIFile {
	return &NullableModelAPIFile{value: val, isSet: true}
}

func (v NullableModelAPIFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


