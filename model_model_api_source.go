/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPISource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPISource{}

// ModelAPISource struct for ModelAPISource
type ModelAPISource struct {
	// The author of the edit
	Author *string `json:"author,omitempty"`
	// The source of the request (api or ui)
	Requester *string `json:"requester,omitempty"`
	// The time of the edit
	Time *string `json:"time,omitempty"`
}

// NewModelAPISource instantiates a new ModelAPISource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPISource() *ModelAPISource {
	this := ModelAPISource{}
	return &this
}

// NewModelAPISourceWithDefaults instantiates a new ModelAPISource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPISourceWithDefaults() *ModelAPISource {
	this := ModelAPISource{}
	return &this
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *ModelAPISource) GetAuthor() string {
	if o == nil || IsNil(o.Author) {
		var ret string
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPISource) GetAuthorOk() (*string, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *ModelAPISource) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given string and assigns it to the Author field.
func (o *ModelAPISource) SetAuthor(v string) {
	o.Author = &v
}

// GetRequester returns the Requester field value if set, zero value otherwise.
func (o *ModelAPISource) GetRequester() string {
	if o == nil || IsNil(o.Requester) {
		var ret string
		return ret
	}
	return *o.Requester
}

// GetRequesterOk returns a tuple with the Requester field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPISource) GetRequesterOk() (*string, bool) {
	if o == nil || IsNil(o.Requester) {
		return nil, false
	}
	return o.Requester, true
}

// HasRequester returns a boolean if a field has been set.
func (o *ModelAPISource) HasRequester() bool {
	if o != nil && !IsNil(o.Requester) {
		return true
	}

	return false
}

// SetRequester gets a reference to the given string and assigns it to the Requester field.
func (o *ModelAPISource) SetRequester(v string) {
	o.Requester = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *ModelAPISource) GetTime() string {
	if o == nil || IsNil(o.Time) {
		var ret string
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPISource) GetTimeOk() (*string, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *ModelAPISource) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given string and assigns it to the Time field.
func (o *ModelAPISource) SetTime(v string) {
	o.Time = &v
}

func (o ModelAPISource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPISource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.Requester) {
		toSerialize["requester"] = o.Requester
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	return toSerialize, nil
}

type NullableModelAPISource struct {
	value *ModelAPISource
	isSet bool
}

func (v NullableModelAPISource) Get() *ModelAPISource {
	return v.value
}

func (v *NullableModelAPISource) Set(val *ModelAPISource) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPISource) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPISource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPISource(val *ModelAPISource) *NullableModelAPISource {
	return &NullableModelAPISource{value: val, isSet: true}
}

func (v NullableModelAPISource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPISource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


