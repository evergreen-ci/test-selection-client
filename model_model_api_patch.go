/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIPatch{}

// ModelAPIPatch struct for ModelAPIPatch
type ModelAPIPatch struct {
	// Whether the patch has been finalized and activated
	Activated *bool `json:"activated,omitempty"`
	Alias *string `json:"alias,omitempty"`
	// Author of the patch
	Author *string `json:"author,omitempty"`
	// The branch on which the patch was initiated
	Branch *string `json:"branch,omitempty"`
	// List of identifiers of builds to run for this patch
	Builds []string `json:"builds,omitempty"`
	ChildPatchAliases []ModelAPIChildPatchAlias `json:"child_patch_aliases,omitempty"`
	ChildPatches []ModelAPIPatch `json:"child_patches,omitempty"`
	// Time patch was created
	CreateTime *string `json:"create_time,omitempty"`
	// Description of the patch
	Description *string `json:"description,omitempty"`
	DownstreamTasks []ModelDownstreamTasks `json:"downstream_tasks,omitempty"`
	// Time at patch completion
	FinishTime *string `json:"finish_time,omitempty"`
	// Hash of commit off which the patch was initiated
	GitHash *string `json:"git_hash,omitempty"`
	GithubPatchData *ModelGithubPatch `json:"github_patch_data,omitempty"`
	Hidden *bool `json:"hidden,omitempty"`
	MergedFrom *string `json:"merged_from,omitempty"`
	ModuleCodeChanges []ModelAPIModulePatch `json:"module_code_changes,omitempty"`
	Parameters []ModelAPIParameter `json:"parameters,omitempty"`
	// Unique identifier of a specific patch
	PatchId *string `json:"patch_id,omitempty"`
	// Incrementing counter of user's patches
	PatchNumber *int32 `json:"patch_number,omitempty"`
	// Name of the project
	ProjectId *string `json:"project_id,omitempty"`
	ProjectIdentifier *string `json:"project_identifier,omitempty"`
	ProjectStorageMethod *string `json:"project_storage_method,omitempty"`
	Requester *string `json:"requester,omitempty"`
	// Time patch started to run
	StartTime *string `json:"start_time,omitempty"`
	// Status of patch (possible values are \"created\", \"started\", \"success\", or \"failed\")
	Status *string `json:"status,omitempty"`
	// List of identifiers of tasks used in this patch
	Tasks []string `json:"tasks,omitempty"`
	// List of documents of available tasks and associated build variant
	VariantsTasks []ModelVariantTask `json:"variants_tasks,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewModelAPIPatch instantiates a new ModelAPIPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIPatch() *ModelAPIPatch {
	this := ModelAPIPatch{}
	return &this
}

// NewModelAPIPatchWithDefaults instantiates a new ModelAPIPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIPatchWithDefaults() *ModelAPIPatch {
	this := ModelAPIPatch{}
	return &this
}

// GetActivated returns the Activated field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetActivated() bool {
	if o == nil || IsNil(o.Activated) {
		var ret bool
		return ret
	}
	return *o.Activated
}

// GetActivatedOk returns a tuple with the Activated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetActivatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Activated) {
		return nil, false
	}
	return o.Activated, true
}

// HasActivated returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasActivated() bool {
	if o != nil && !IsNil(o.Activated) {
		return true
	}

	return false
}

// SetActivated gets a reference to the given bool and assigns it to the Activated field.
func (o *ModelAPIPatch) SetActivated(v bool) {
	o.Activated = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *ModelAPIPatch) SetAlias(v string) {
	o.Alias = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetAuthor() string {
	if o == nil || IsNil(o.Author) {
		var ret string
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetAuthorOk() (*string, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given string and assigns it to the Author field.
func (o *ModelAPIPatch) SetAuthor(v string) {
	o.Author = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetBranch() string {
	if o == nil || IsNil(o.Branch) {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetBranchOk() (*string, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *ModelAPIPatch) SetBranch(v string) {
	o.Branch = &v
}

// GetBuilds returns the Builds field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetBuilds() []string {
	if o == nil || IsNil(o.Builds) {
		var ret []string
		return ret
	}
	return o.Builds
}

// GetBuildsOk returns a tuple with the Builds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetBuildsOk() ([]string, bool) {
	if o == nil || IsNil(o.Builds) {
		return nil, false
	}
	return o.Builds, true
}

// HasBuilds returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasBuilds() bool {
	if o != nil && !IsNil(o.Builds) {
		return true
	}

	return false
}

// SetBuilds gets a reference to the given []string and assigns it to the Builds field.
func (o *ModelAPIPatch) SetBuilds(v []string) {
	o.Builds = v
}

// GetChildPatchAliases returns the ChildPatchAliases field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetChildPatchAliases() []ModelAPIChildPatchAlias {
	if o == nil || IsNil(o.ChildPatchAliases) {
		var ret []ModelAPIChildPatchAlias
		return ret
	}
	return o.ChildPatchAliases
}

// GetChildPatchAliasesOk returns a tuple with the ChildPatchAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetChildPatchAliasesOk() ([]ModelAPIChildPatchAlias, bool) {
	if o == nil || IsNil(o.ChildPatchAliases) {
		return nil, false
	}
	return o.ChildPatchAliases, true
}

// HasChildPatchAliases returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasChildPatchAliases() bool {
	if o != nil && !IsNil(o.ChildPatchAliases) {
		return true
	}

	return false
}

// SetChildPatchAliases gets a reference to the given []ModelAPIChildPatchAlias and assigns it to the ChildPatchAliases field.
func (o *ModelAPIPatch) SetChildPatchAliases(v []ModelAPIChildPatchAlias) {
	o.ChildPatchAliases = v
}

// GetChildPatches returns the ChildPatches field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetChildPatches() []ModelAPIPatch {
	if o == nil || IsNil(o.ChildPatches) {
		var ret []ModelAPIPatch
		return ret
	}
	return o.ChildPatches
}

// GetChildPatchesOk returns a tuple with the ChildPatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetChildPatchesOk() ([]ModelAPIPatch, bool) {
	if o == nil || IsNil(o.ChildPatches) {
		return nil, false
	}
	return o.ChildPatches, true
}

// HasChildPatches returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasChildPatches() bool {
	if o != nil && !IsNil(o.ChildPatches) {
		return true
	}

	return false
}

// SetChildPatches gets a reference to the given []ModelAPIPatch and assigns it to the ChildPatches field.
func (o *ModelAPIPatch) SetChildPatches(v []ModelAPIPatch) {
	o.ChildPatches = v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime) {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *ModelAPIPatch) SetCreateTime(v string) {
	o.CreateTime = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelAPIPatch) SetDescription(v string) {
	o.Description = &v
}

// GetDownstreamTasks returns the DownstreamTasks field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetDownstreamTasks() []ModelDownstreamTasks {
	if o == nil || IsNil(o.DownstreamTasks) {
		var ret []ModelDownstreamTasks
		return ret
	}
	return o.DownstreamTasks
}

// GetDownstreamTasksOk returns a tuple with the DownstreamTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetDownstreamTasksOk() ([]ModelDownstreamTasks, bool) {
	if o == nil || IsNil(o.DownstreamTasks) {
		return nil, false
	}
	return o.DownstreamTasks, true
}

// HasDownstreamTasks returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasDownstreamTasks() bool {
	if o != nil && !IsNil(o.DownstreamTasks) {
		return true
	}

	return false
}

// SetDownstreamTasks gets a reference to the given []ModelDownstreamTasks and assigns it to the DownstreamTasks field.
func (o *ModelAPIPatch) SetDownstreamTasks(v []ModelDownstreamTasks) {
	o.DownstreamTasks = v
}

// GetFinishTime returns the FinishTime field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetFinishTime() string {
	if o == nil || IsNil(o.FinishTime) {
		var ret string
		return ret
	}
	return *o.FinishTime
}

// GetFinishTimeOk returns a tuple with the FinishTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetFinishTimeOk() (*string, bool) {
	if o == nil || IsNil(o.FinishTime) {
		return nil, false
	}
	return o.FinishTime, true
}

// HasFinishTime returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasFinishTime() bool {
	if o != nil && !IsNil(o.FinishTime) {
		return true
	}

	return false
}

// SetFinishTime gets a reference to the given string and assigns it to the FinishTime field.
func (o *ModelAPIPatch) SetFinishTime(v string) {
	o.FinishTime = &v
}

// GetGitHash returns the GitHash field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetGitHash() string {
	if o == nil || IsNil(o.GitHash) {
		var ret string
		return ret
	}
	return *o.GitHash
}

// GetGitHashOk returns a tuple with the GitHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetGitHashOk() (*string, bool) {
	if o == nil || IsNil(o.GitHash) {
		return nil, false
	}
	return o.GitHash, true
}

// HasGitHash returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasGitHash() bool {
	if o != nil && !IsNil(o.GitHash) {
		return true
	}

	return false
}

// SetGitHash gets a reference to the given string and assigns it to the GitHash field.
func (o *ModelAPIPatch) SetGitHash(v string) {
	o.GitHash = &v
}

// GetGithubPatchData returns the GithubPatchData field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetGithubPatchData() ModelGithubPatch {
	if o == nil || IsNil(o.GithubPatchData) {
		var ret ModelGithubPatch
		return ret
	}
	return *o.GithubPatchData
}

// GetGithubPatchDataOk returns a tuple with the GithubPatchData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetGithubPatchDataOk() (*ModelGithubPatch, bool) {
	if o == nil || IsNil(o.GithubPatchData) {
		return nil, false
	}
	return o.GithubPatchData, true
}

// HasGithubPatchData returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasGithubPatchData() bool {
	if o != nil && !IsNil(o.GithubPatchData) {
		return true
	}

	return false
}

// SetGithubPatchData gets a reference to the given ModelGithubPatch and assigns it to the GithubPatchData field.
func (o *ModelAPIPatch) SetGithubPatchData(v ModelGithubPatch) {
	o.GithubPatchData = &v
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetHidden() bool {
	if o == nil || IsNil(o.Hidden) {
		var ret bool
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.Hidden) {
		return nil, false
	}
	return o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasHidden() bool {
	if o != nil && !IsNil(o.Hidden) {
		return true
	}

	return false
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *ModelAPIPatch) SetHidden(v bool) {
	o.Hidden = &v
}

// GetMergedFrom returns the MergedFrom field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetMergedFrom() string {
	if o == nil || IsNil(o.MergedFrom) {
		var ret string
		return ret
	}
	return *o.MergedFrom
}

// GetMergedFromOk returns a tuple with the MergedFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetMergedFromOk() (*string, bool) {
	if o == nil || IsNil(o.MergedFrom) {
		return nil, false
	}
	return o.MergedFrom, true
}

// HasMergedFrom returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasMergedFrom() bool {
	if o != nil && !IsNil(o.MergedFrom) {
		return true
	}

	return false
}

// SetMergedFrom gets a reference to the given string and assigns it to the MergedFrom field.
func (o *ModelAPIPatch) SetMergedFrom(v string) {
	o.MergedFrom = &v
}

// GetModuleCodeChanges returns the ModuleCodeChanges field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetModuleCodeChanges() []ModelAPIModulePatch {
	if o == nil || IsNil(o.ModuleCodeChanges) {
		var ret []ModelAPIModulePatch
		return ret
	}
	return o.ModuleCodeChanges
}

// GetModuleCodeChangesOk returns a tuple with the ModuleCodeChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetModuleCodeChangesOk() ([]ModelAPIModulePatch, bool) {
	if o == nil || IsNil(o.ModuleCodeChanges) {
		return nil, false
	}
	return o.ModuleCodeChanges, true
}

// HasModuleCodeChanges returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasModuleCodeChanges() bool {
	if o != nil && !IsNil(o.ModuleCodeChanges) {
		return true
	}

	return false
}

// SetModuleCodeChanges gets a reference to the given []ModelAPIModulePatch and assigns it to the ModuleCodeChanges field.
func (o *ModelAPIPatch) SetModuleCodeChanges(v []ModelAPIModulePatch) {
	o.ModuleCodeChanges = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetParameters() []ModelAPIParameter {
	if o == nil || IsNil(o.Parameters) {
		var ret []ModelAPIParameter
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetParametersOk() ([]ModelAPIParameter, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []ModelAPIParameter and assigns it to the Parameters field.
func (o *ModelAPIPatch) SetParameters(v []ModelAPIParameter) {
	o.Parameters = v
}

// GetPatchId returns the PatchId field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetPatchId() string {
	if o == nil || IsNil(o.PatchId) {
		var ret string
		return ret
	}
	return *o.PatchId
}

// GetPatchIdOk returns a tuple with the PatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetPatchIdOk() (*string, bool) {
	if o == nil || IsNil(o.PatchId) {
		return nil, false
	}
	return o.PatchId, true
}

// HasPatchId returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasPatchId() bool {
	if o != nil && !IsNil(o.PatchId) {
		return true
	}

	return false
}

// SetPatchId gets a reference to the given string and assigns it to the PatchId field.
func (o *ModelAPIPatch) SetPatchId(v string) {
	o.PatchId = &v
}

// GetPatchNumber returns the PatchNumber field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetPatchNumber() int32 {
	if o == nil || IsNil(o.PatchNumber) {
		var ret int32
		return ret
	}
	return *o.PatchNumber
}

// GetPatchNumberOk returns a tuple with the PatchNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetPatchNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.PatchNumber) {
		return nil, false
	}
	return o.PatchNumber, true
}

// HasPatchNumber returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasPatchNumber() bool {
	if o != nil && !IsNil(o.PatchNumber) {
		return true
	}

	return false
}

// SetPatchNumber gets a reference to the given int32 and assigns it to the PatchNumber field.
func (o *ModelAPIPatch) SetPatchNumber(v int32) {
	o.PatchNumber = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *ModelAPIPatch) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetProjectIdentifier returns the ProjectIdentifier field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetProjectIdentifier() string {
	if o == nil || IsNil(o.ProjectIdentifier) {
		var ret string
		return ret
	}
	return *o.ProjectIdentifier
}

// GetProjectIdentifierOk returns a tuple with the ProjectIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetProjectIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectIdentifier) {
		return nil, false
	}
	return o.ProjectIdentifier, true
}

// HasProjectIdentifier returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasProjectIdentifier() bool {
	if o != nil && !IsNil(o.ProjectIdentifier) {
		return true
	}

	return false
}

// SetProjectIdentifier gets a reference to the given string and assigns it to the ProjectIdentifier field.
func (o *ModelAPIPatch) SetProjectIdentifier(v string) {
	o.ProjectIdentifier = &v
}

// GetProjectStorageMethod returns the ProjectStorageMethod field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetProjectStorageMethod() string {
	if o == nil || IsNil(o.ProjectStorageMethod) {
		var ret string
		return ret
	}
	return *o.ProjectStorageMethod
}

// GetProjectStorageMethodOk returns a tuple with the ProjectStorageMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetProjectStorageMethodOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectStorageMethod) {
		return nil, false
	}
	return o.ProjectStorageMethod, true
}

// HasProjectStorageMethod returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasProjectStorageMethod() bool {
	if o != nil && !IsNil(o.ProjectStorageMethod) {
		return true
	}

	return false
}

// SetProjectStorageMethod gets a reference to the given string and assigns it to the ProjectStorageMethod field.
func (o *ModelAPIPatch) SetProjectStorageMethod(v string) {
	o.ProjectStorageMethod = &v
}

// GetRequester returns the Requester field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetRequester() string {
	if o == nil || IsNil(o.Requester) {
		var ret string
		return ret
	}
	return *o.Requester
}

// GetRequesterOk returns a tuple with the Requester field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetRequesterOk() (*string, bool) {
	if o == nil || IsNil(o.Requester) {
		return nil, false
	}
	return o.Requester, true
}

// HasRequester returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasRequester() bool {
	if o != nil && !IsNil(o.Requester) {
		return true
	}

	return false
}

// SetRequester gets a reference to the given string and assigns it to the Requester field.
func (o *ModelAPIPatch) SetRequester(v string) {
	o.Requester = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *ModelAPIPatch) SetStartTime(v string) {
	o.StartTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ModelAPIPatch) SetStatus(v string) {
	o.Status = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetTasks() []string {
	if o == nil || IsNil(o.Tasks) {
		var ret []string
		return ret
	}
	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetTasksOk() ([]string, bool) {
	if o == nil || IsNil(o.Tasks) {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasTasks() bool {
	if o != nil && !IsNil(o.Tasks) {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []string and assigns it to the Tasks field.
func (o *ModelAPIPatch) SetTasks(v []string) {
	o.Tasks = v
}

// GetVariantsTasks returns the VariantsTasks field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetVariantsTasks() []ModelVariantTask {
	if o == nil || IsNil(o.VariantsTasks) {
		var ret []ModelVariantTask
		return ret
	}
	return o.VariantsTasks
}

// GetVariantsTasksOk returns a tuple with the VariantsTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetVariantsTasksOk() ([]ModelVariantTask, bool) {
	if o == nil || IsNil(o.VariantsTasks) {
		return nil, false
	}
	return o.VariantsTasks, true
}

// HasVariantsTasks returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasVariantsTasks() bool {
	if o != nil && !IsNil(o.VariantsTasks) {
		return true
	}

	return false
}

// SetVariantsTasks gets a reference to the given []ModelVariantTask and assigns it to the VariantsTasks field.
func (o *ModelAPIPatch) SetVariantsTasks(v []ModelVariantTask) {
	o.VariantsTasks = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ModelAPIPatch) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPatch) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ModelAPIPatch) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ModelAPIPatch) SetVersion(v string) {
	o.Version = &v
}

func (o ModelAPIPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Activated) {
		toSerialize["activated"] = o.Activated
	}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	if !IsNil(o.Builds) {
		toSerialize["builds"] = o.Builds
	}
	if !IsNil(o.ChildPatchAliases) {
		toSerialize["child_patch_aliases"] = o.ChildPatchAliases
	}
	if !IsNil(o.ChildPatches) {
		toSerialize["child_patches"] = o.ChildPatches
	}
	if !IsNil(o.CreateTime) {
		toSerialize["create_time"] = o.CreateTime
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DownstreamTasks) {
		toSerialize["downstream_tasks"] = o.DownstreamTasks
	}
	if !IsNil(o.FinishTime) {
		toSerialize["finish_time"] = o.FinishTime
	}
	if !IsNil(o.GitHash) {
		toSerialize["git_hash"] = o.GitHash
	}
	if !IsNil(o.GithubPatchData) {
		toSerialize["github_patch_data"] = o.GithubPatchData
	}
	if !IsNil(o.Hidden) {
		toSerialize["hidden"] = o.Hidden
	}
	if !IsNil(o.MergedFrom) {
		toSerialize["merged_from"] = o.MergedFrom
	}
	if !IsNil(o.ModuleCodeChanges) {
		toSerialize["module_code_changes"] = o.ModuleCodeChanges
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.PatchId) {
		toSerialize["patch_id"] = o.PatchId
	}
	if !IsNil(o.PatchNumber) {
		toSerialize["patch_number"] = o.PatchNumber
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	if !IsNil(o.ProjectIdentifier) {
		toSerialize["project_identifier"] = o.ProjectIdentifier
	}
	if !IsNil(o.ProjectStorageMethod) {
		toSerialize["project_storage_method"] = o.ProjectStorageMethod
	}
	if !IsNil(o.Requester) {
		toSerialize["requester"] = o.Requester
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Tasks) {
		toSerialize["tasks"] = o.Tasks
	}
	if !IsNil(o.VariantsTasks) {
		toSerialize["variants_tasks"] = o.VariantsTasks
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableModelAPIPatch struct {
	value *ModelAPIPatch
	isSet bool
}

func (v NullableModelAPIPatch) Get() *ModelAPIPatch {
	return v.value
}

func (v *NullableModelAPIPatch) Set(val *ModelAPIPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIPatch(val *ModelAPIPatch) *NullableModelAPIPatch {
	return &NullableModelAPIPatch{value: val, isSet: true}
}

func (v NullableModelAPIPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


