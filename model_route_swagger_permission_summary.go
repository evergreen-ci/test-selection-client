/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RouteSwaggerPermissionSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RouteSwaggerPermissionSummary{}

// RouteSwaggerPermissionSummary struct for RouteSwaggerPermissionSummary
type RouteSwaggerPermissionSummary struct {
	// permissions - an object whose keys are the resources for which the user has   permissions. Note that these objects will often have many keys, since   logged-in users have basic permissions to every project and distro. The   values in the keys are objects representing the permissions that the user   has for that resource, identical to the format of the permissions field in   the POST /users/\\<user_id\\>/permissions API.
	Permissions *map[string]map[string]int32 `json:"permissions,omitempty"`
	// type - the type of resources for which the listed permissions apply.   Will be \"project\", \"distro\", or \"superuser\"
	Type *string `json:"type,omitempty"`
}

// NewRouteSwaggerPermissionSummary instantiates a new RouteSwaggerPermissionSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRouteSwaggerPermissionSummary() *RouteSwaggerPermissionSummary {
	this := RouteSwaggerPermissionSummary{}
	return &this
}

// NewRouteSwaggerPermissionSummaryWithDefaults instantiates a new RouteSwaggerPermissionSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteSwaggerPermissionSummaryWithDefaults() *RouteSwaggerPermissionSummary {
	this := RouteSwaggerPermissionSummary{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *RouteSwaggerPermissionSummary) GetPermissions() map[string]map[string]int32 {
	if o == nil || IsNil(o.Permissions) {
		var ret map[string]map[string]int32
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteSwaggerPermissionSummary) GetPermissionsOk() (*map[string]map[string]int32, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *RouteSwaggerPermissionSummary) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given map[string]map[string]int32 and assigns it to the Permissions field.
func (o *RouteSwaggerPermissionSummary) SetPermissions(v map[string]map[string]int32) {
	o.Permissions = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RouteSwaggerPermissionSummary) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteSwaggerPermissionSummary) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RouteSwaggerPermissionSummary) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RouteSwaggerPermissionSummary) SetType(v string) {
	o.Type = &v
}

func (o RouteSwaggerPermissionSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RouteSwaggerPermissionSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableRouteSwaggerPermissionSummary struct {
	value *RouteSwaggerPermissionSummary
	isSet bool
}

func (v NullableRouteSwaggerPermissionSummary) Get() *RouteSwaggerPermissionSummary {
	return v.value
}

func (v *NullableRouteSwaggerPermissionSummary) Set(val *RouteSwaggerPermissionSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteSwaggerPermissionSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteSwaggerPermissionSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteSwaggerPermissionSummary(val *RouteSwaggerPermissionSummary) *NullableRouteSwaggerPermissionSummary {
	return &NullableRouteSwaggerPermissionSummary{value: val, isSet: true}
}

func (v NullableRouteSwaggerPermissionSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteSwaggerPermissionSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


