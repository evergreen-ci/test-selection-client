/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIPreconditionScript type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIPreconditionScript{}

// ModelAPIPreconditionScript struct for ModelAPIPreconditionScript
type ModelAPIPreconditionScript struct {
	Path *string `json:"path,omitempty"`
	Script *string `json:"script,omitempty"`
}

// NewModelAPIPreconditionScript instantiates a new ModelAPIPreconditionScript object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIPreconditionScript() *ModelAPIPreconditionScript {
	this := ModelAPIPreconditionScript{}
	return &this
}

// NewModelAPIPreconditionScriptWithDefaults instantiates a new ModelAPIPreconditionScript object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIPreconditionScriptWithDefaults() *ModelAPIPreconditionScript {
	this := ModelAPIPreconditionScript{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ModelAPIPreconditionScript) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPreconditionScript) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ModelAPIPreconditionScript) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ModelAPIPreconditionScript) SetPath(v string) {
	o.Path = &v
}

// GetScript returns the Script field value if set, zero value otherwise.
func (o *ModelAPIPreconditionScript) GetScript() string {
	if o == nil || IsNil(o.Script) {
		var ret string
		return ret
	}
	return *o.Script
}

// GetScriptOk returns a tuple with the Script field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPreconditionScript) GetScriptOk() (*string, bool) {
	if o == nil || IsNil(o.Script) {
		return nil, false
	}
	return o.Script, true
}

// HasScript returns a boolean if a field has been set.
func (o *ModelAPIPreconditionScript) HasScript() bool {
	if o != nil && !IsNil(o.Script) {
		return true
	}

	return false
}

// SetScript gets a reference to the given string and assigns it to the Script field.
func (o *ModelAPIPreconditionScript) SetScript(v string) {
	o.Script = &v
}

func (o ModelAPIPreconditionScript) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIPreconditionScript) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Script) {
		toSerialize["script"] = o.Script
	}
	return toSerialize, nil
}

type NullableModelAPIPreconditionScript struct {
	value *ModelAPIPreconditionScript
	isSet bool
}

func (v NullableModelAPIPreconditionScript) Get() *ModelAPIPreconditionScript {
	return v.value
}

func (v *NullableModelAPIPreconditionScript) Set(val *ModelAPIPreconditionScript) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIPreconditionScript) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIPreconditionScript) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIPreconditionScript(val *ModelAPIPreconditionScript) *NullableModelAPIPreconditionScript {
	return &NullableModelAPIPreconditionScript{value: val, isSet: true}
}

func (v NullableModelAPIPreconditionScript) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIPreconditionScript) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


