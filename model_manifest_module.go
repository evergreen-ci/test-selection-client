/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ManifestModule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManifestModule{}

// ManifestModule struct for ManifestModule
type ManifestModule struct {
	// The branch of the repository.
	Branch *string `json:"branch,omitempty"`
	// The owner of the repository.
	Owner *string `json:"owner,omitempty"`
	// The name of the repository.
	Repo *string `json:"repo,omitempty"`
	// The revision of the head of the branch.
	Revision *string `json:"revision,omitempty"`
	// The url to the GitHub API call to that specific commit.
	Url *string `json:"url,omitempty"`
}

// NewManifestModule instantiates a new ManifestModule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManifestModule() *ManifestModule {
	this := ManifestModule{}
	return &this
}

// NewManifestModuleWithDefaults instantiates a new ManifestModule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManifestModuleWithDefaults() *ManifestModule {
	this := ManifestModule{}
	return &this
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *ManifestModule) GetBranch() string {
	if o == nil || IsNil(o.Branch) {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManifestModule) GetBranchOk() (*string, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *ManifestModule) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *ManifestModule) SetBranch(v string) {
	o.Branch = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *ManifestModule) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManifestModule) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *ManifestModule) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *ManifestModule) SetOwner(v string) {
	o.Owner = &v
}

// GetRepo returns the Repo field value if set, zero value otherwise.
func (o *ManifestModule) GetRepo() string {
	if o == nil || IsNil(o.Repo) {
		var ret string
		return ret
	}
	return *o.Repo
}

// GetRepoOk returns a tuple with the Repo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManifestModule) GetRepoOk() (*string, bool) {
	if o == nil || IsNil(o.Repo) {
		return nil, false
	}
	return o.Repo, true
}

// HasRepo returns a boolean if a field has been set.
func (o *ManifestModule) HasRepo() bool {
	if o != nil && !IsNil(o.Repo) {
		return true
	}

	return false
}

// SetRepo gets a reference to the given string and assigns it to the Repo field.
func (o *ManifestModule) SetRepo(v string) {
	o.Repo = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *ManifestModule) GetRevision() string {
	if o == nil || IsNil(o.Revision) {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManifestModule) GetRevisionOk() (*string, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *ManifestModule) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *ManifestModule) SetRevision(v string) {
	o.Revision = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ManifestModule) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManifestModule) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ManifestModule) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ManifestModule) SetUrl(v string) {
	o.Url = &v
}

func (o ManifestModule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManifestModule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Repo) {
		toSerialize["repo"] = o.Repo
	}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableManifestModule struct {
	value *ManifestModule
	isSet bool
}

func (v NullableManifestModule) Get() *ManifestModule {
	return v.value
}

func (v *NullableManifestModule) Set(val *ManifestModule) {
	v.value = val
	v.isSet = true
}

func (v NullableManifestModule) IsSet() bool {
	return v.isSet
}

func (v *NullableManifestModule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManifestModule(val *ManifestModule) *NullableManifestModule {
	return &NullableManifestModule{value: val, isSet: true}
}

func (v NullableManifestModule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManifestModule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


