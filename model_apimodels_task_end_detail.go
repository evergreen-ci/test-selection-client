/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApimodelsTaskEndDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApimodelsTaskEndDetail{}

// ApimodelsTaskEndDetail struct for ApimodelsTaskEndDetail
type ApimodelsTaskEndDetail struct {
	Desc *string `json:"desc,omitempty"`
	DiskDevices []string `json:"disk_devices,omitempty"`
	FailingCommand *string `json:"failing_command,omitempty"`
	// FailureMetadataTags are user metadata tags associated with the command that caused the task to fail.
	FailureMetadataTags []string `json:"failure_metadata_tags,omitempty"`
	Modules *ApimodelsModuleCloneInfo `json:"modules,omitempty"`
	OomKiller *ApimodelsOOMTrackerInfo `json:"oom_killer,omitempty"`
	// OtherFailingCommands contains information about commands that failed while the task was running but did not cause the task to fail.
	OtherFailingCommands []ApimodelsFailingCommand `json:"other_failing_commands,omitempty"`
	PostErrored *bool `json:"post_errored,omitempty"`
	Status *string `json:"status,omitempty"`
	TimedOut *bool `json:"timed_out,omitempty"`
	TimeoutDuration *int32 `json:"timeout_duration,omitempty"`
	TimeoutType *string `json:"timeout_type,omitempty"`
	TraceId *string `json:"trace_id,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewApimodelsTaskEndDetail instantiates a new ApimodelsTaskEndDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApimodelsTaskEndDetail() *ApimodelsTaskEndDetail {
	this := ApimodelsTaskEndDetail{}
	return &this
}

// NewApimodelsTaskEndDetailWithDefaults instantiates a new ApimodelsTaskEndDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApimodelsTaskEndDetailWithDefaults() *ApimodelsTaskEndDetail {
	this := ApimodelsTaskEndDetail{}
	return &this
}

// GetDesc returns the Desc field value if set, zero value otherwise.
func (o *ApimodelsTaskEndDetail) GetDesc() string {
	if o == nil || IsNil(o.Desc) {
		var ret string
		return ret
	}
	return *o.Desc
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsTaskEndDetail) GetDescOk() (*string, bool) {
	if o == nil || IsNil(o.Desc) {
		return nil, false
	}
	return o.Desc, true
}

// HasDesc returns a boolean if a field has been set.
func (o *ApimodelsTaskEndDetail) HasDesc() bool {
	if o != nil && !IsNil(o.Desc) {
		return true
	}

	return false
}

// SetDesc gets a reference to the given string and assigns it to the Desc field.
func (o *ApimodelsTaskEndDetail) SetDesc(v string) {
	o.Desc = &v
}

// GetDiskDevices returns the DiskDevices field value if set, zero value otherwise.
func (o *ApimodelsTaskEndDetail) GetDiskDevices() []string {
	if o == nil || IsNil(o.DiskDevices) {
		var ret []string
		return ret
	}
	return o.DiskDevices
}

// GetDiskDevicesOk returns a tuple with the DiskDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsTaskEndDetail) GetDiskDevicesOk() ([]string, bool) {
	if o == nil || IsNil(o.DiskDevices) {
		return nil, false
	}
	return o.DiskDevices, true
}

// HasDiskDevices returns a boolean if a field has been set.
func (o *ApimodelsTaskEndDetail) HasDiskDevices() bool {
	if o != nil && !IsNil(o.DiskDevices) {
		return true
	}

	return false
}

// SetDiskDevices gets a reference to the given []string and assigns it to the DiskDevices field.
func (o *ApimodelsTaskEndDetail) SetDiskDevices(v []string) {
	o.DiskDevices = v
}

// GetFailingCommand returns the FailingCommand field value if set, zero value otherwise.
func (o *ApimodelsTaskEndDetail) GetFailingCommand() string {
	if o == nil || IsNil(o.FailingCommand) {
		var ret string
		return ret
	}
	return *o.FailingCommand
}

// GetFailingCommandOk returns a tuple with the FailingCommand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsTaskEndDetail) GetFailingCommandOk() (*string, bool) {
	if o == nil || IsNil(o.FailingCommand) {
		return nil, false
	}
	return o.FailingCommand, true
}

// HasFailingCommand returns a boolean if a field has been set.
func (o *ApimodelsTaskEndDetail) HasFailingCommand() bool {
	if o != nil && !IsNil(o.FailingCommand) {
		return true
	}

	return false
}

// SetFailingCommand gets a reference to the given string and assigns it to the FailingCommand field.
func (o *ApimodelsTaskEndDetail) SetFailingCommand(v string) {
	o.FailingCommand = &v
}

// GetFailureMetadataTags returns the FailureMetadataTags field value if set, zero value otherwise.
func (o *ApimodelsTaskEndDetail) GetFailureMetadataTags() []string {
	if o == nil || IsNil(o.FailureMetadataTags) {
		var ret []string
		return ret
	}
	return o.FailureMetadataTags
}

// GetFailureMetadataTagsOk returns a tuple with the FailureMetadataTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsTaskEndDetail) GetFailureMetadataTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.FailureMetadataTags) {
		return nil, false
	}
	return o.FailureMetadataTags, true
}

// HasFailureMetadataTags returns a boolean if a field has been set.
func (o *ApimodelsTaskEndDetail) HasFailureMetadataTags() bool {
	if o != nil && !IsNil(o.FailureMetadataTags) {
		return true
	}

	return false
}

// SetFailureMetadataTags gets a reference to the given []string and assigns it to the FailureMetadataTags field.
func (o *ApimodelsTaskEndDetail) SetFailureMetadataTags(v []string) {
	o.FailureMetadataTags = v
}

// GetModules returns the Modules field value if set, zero value otherwise.
func (o *ApimodelsTaskEndDetail) GetModules() ApimodelsModuleCloneInfo {
	if o == nil || IsNil(o.Modules) {
		var ret ApimodelsModuleCloneInfo
		return ret
	}
	return *o.Modules
}

// GetModulesOk returns a tuple with the Modules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsTaskEndDetail) GetModulesOk() (*ApimodelsModuleCloneInfo, bool) {
	if o == nil || IsNil(o.Modules) {
		return nil, false
	}
	return o.Modules, true
}

// HasModules returns a boolean if a field has been set.
func (o *ApimodelsTaskEndDetail) HasModules() bool {
	if o != nil && !IsNil(o.Modules) {
		return true
	}

	return false
}

// SetModules gets a reference to the given ApimodelsModuleCloneInfo and assigns it to the Modules field.
func (o *ApimodelsTaskEndDetail) SetModules(v ApimodelsModuleCloneInfo) {
	o.Modules = &v
}

// GetOomKiller returns the OomKiller field value if set, zero value otherwise.
func (o *ApimodelsTaskEndDetail) GetOomKiller() ApimodelsOOMTrackerInfo {
	if o == nil || IsNil(o.OomKiller) {
		var ret ApimodelsOOMTrackerInfo
		return ret
	}
	return *o.OomKiller
}

// GetOomKillerOk returns a tuple with the OomKiller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsTaskEndDetail) GetOomKillerOk() (*ApimodelsOOMTrackerInfo, bool) {
	if o == nil || IsNil(o.OomKiller) {
		return nil, false
	}
	return o.OomKiller, true
}

// HasOomKiller returns a boolean if a field has been set.
func (o *ApimodelsTaskEndDetail) HasOomKiller() bool {
	if o != nil && !IsNil(o.OomKiller) {
		return true
	}

	return false
}

// SetOomKiller gets a reference to the given ApimodelsOOMTrackerInfo and assigns it to the OomKiller field.
func (o *ApimodelsTaskEndDetail) SetOomKiller(v ApimodelsOOMTrackerInfo) {
	o.OomKiller = &v
}

// GetOtherFailingCommands returns the OtherFailingCommands field value if set, zero value otherwise.
func (o *ApimodelsTaskEndDetail) GetOtherFailingCommands() []ApimodelsFailingCommand {
	if o == nil || IsNil(o.OtherFailingCommands) {
		var ret []ApimodelsFailingCommand
		return ret
	}
	return o.OtherFailingCommands
}

// GetOtherFailingCommandsOk returns a tuple with the OtherFailingCommands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsTaskEndDetail) GetOtherFailingCommandsOk() ([]ApimodelsFailingCommand, bool) {
	if o == nil || IsNil(o.OtherFailingCommands) {
		return nil, false
	}
	return o.OtherFailingCommands, true
}

// HasOtherFailingCommands returns a boolean if a field has been set.
func (o *ApimodelsTaskEndDetail) HasOtherFailingCommands() bool {
	if o != nil && !IsNil(o.OtherFailingCommands) {
		return true
	}

	return false
}

// SetOtherFailingCommands gets a reference to the given []ApimodelsFailingCommand and assigns it to the OtherFailingCommands field.
func (o *ApimodelsTaskEndDetail) SetOtherFailingCommands(v []ApimodelsFailingCommand) {
	o.OtherFailingCommands = v
}

// GetPostErrored returns the PostErrored field value if set, zero value otherwise.
func (o *ApimodelsTaskEndDetail) GetPostErrored() bool {
	if o == nil || IsNil(o.PostErrored) {
		var ret bool
		return ret
	}
	return *o.PostErrored
}

// GetPostErroredOk returns a tuple with the PostErrored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsTaskEndDetail) GetPostErroredOk() (*bool, bool) {
	if o == nil || IsNil(o.PostErrored) {
		return nil, false
	}
	return o.PostErrored, true
}

// HasPostErrored returns a boolean if a field has been set.
func (o *ApimodelsTaskEndDetail) HasPostErrored() bool {
	if o != nil && !IsNil(o.PostErrored) {
		return true
	}

	return false
}

// SetPostErrored gets a reference to the given bool and assigns it to the PostErrored field.
func (o *ApimodelsTaskEndDetail) SetPostErrored(v bool) {
	o.PostErrored = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApimodelsTaskEndDetail) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsTaskEndDetail) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApimodelsTaskEndDetail) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApimodelsTaskEndDetail) SetStatus(v string) {
	o.Status = &v
}

// GetTimedOut returns the TimedOut field value if set, zero value otherwise.
func (o *ApimodelsTaskEndDetail) GetTimedOut() bool {
	if o == nil || IsNil(o.TimedOut) {
		var ret bool
		return ret
	}
	return *o.TimedOut
}

// GetTimedOutOk returns a tuple with the TimedOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsTaskEndDetail) GetTimedOutOk() (*bool, bool) {
	if o == nil || IsNil(o.TimedOut) {
		return nil, false
	}
	return o.TimedOut, true
}

// HasTimedOut returns a boolean if a field has been set.
func (o *ApimodelsTaskEndDetail) HasTimedOut() bool {
	if o != nil && !IsNil(o.TimedOut) {
		return true
	}

	return false
}

// SetTimedOut gets a reference to the given bool and assigns it to the TimedOut field.
func (o *ApimodelsTaskEndDetail) SetTimedOut(v bool) {
	o.TimedOut = &v
}

// GetTimeoutDuration returns the TimeoutDuration field value if set, zero value otherwise.
func (o *ApimodelsTaskEndDetail) GetTimeoutDuration() int32 {
	if o == nil || IsNil(o.TimeoutDuration) {
		var ret int32
		return ret
	}
	return *o.TimeoutDuration
}

// GetTimeoutDurationOk returns a tuple with the TimeoutDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsTaskEndDetail) GetTimeoutDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeoutDuration) {
		return nil, false
	}
	return o.TimeoutDuration, true
}

// HasTimeoutDuration returns a boolean if a field has been set.
func (o *ApimodelsTaskEndDetail) HasTimeoutDuration() bool {
	if o != nil && !IsNil(o.TimeoutDuration) {
		return true
	}

	return false
}

// SetTimeoutDuration gets a reference to the given int32 and assigns it to the TimeoutDuration field.
func (o *ApimodelsTaskEndDetail) SetTimeoutDuration(v int32) {
	o.TimeoutDuration = &v
}

// GetTimeoutType returns the TimeoutType field value if set, zero value otherwise.
func (o *ApimodelsTaskEndDetail) GetTimeoutType() string {
	if o == nil || IsNil(o.TimeoutType) {
		var ret string
		return ret
	}
	return *o.TimeoutType
}

// GetTimeoutTypeOk returns a tuple with the TimeoutType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsTaskEndDetail) GetTimeoutTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TimeoutType) {
		return nil, false
	}
	return o.TimeoutType, true
}

// HasTimeoutType returns a boolean if a field has been set.
func (o *ApimodelsTaskEndDetail) HasTimeoutType() bool {
	if o != nil && !IsNil(o.TimeoutType) {
		return true
	}

	return false
}

// SetTimeoutType gets a reference to the given string and assigns it to the TimeoutType field.
func (o *ApimodelsTaskEndDetail) SetTimeoutType(v string) {
	o.TimeoutType = &v
}

// GetTraceId returns the TraceId field value if set, zero value otherwise.
func (o *ApimodelsTaskEndDetail) GetTraceId() string {
	if o == nil || IsNil(o.TraceId) {
		var ret string
		return ret
	}
	return *o.TraceId
}

// GetTraceIdOk returns a tuple with the TraceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsTaskEndDetail) GetTraceIdOk() (*string, bool) {
	if o == nil || IsNil(o.TraceId) {
		return nil, false
	}
	return o.TraceId, true
}

// HasTraceId returns a boolean if a field has been set.
func (o *ApimodelsTaskEndDetail) HasTraceId() bool {
	if o != nil && !IsNil(o.TraceId) {
		return true
	}

	return false
}

// SetTraceId gets a reference to the given string and assigns it to the TraceId field.
func (o *ApimodelsTaskEndDetail) SetTraceId(v string) {
	o.TraceId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApimodelsTaskEndDetail) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsTaskEndDetail) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApimodelsTaskEndDetail) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ApimodelsTaskEndDetail) SetType(v string) {
	o.Type = &v
}

func (o ApimodelsTaskEndDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApimodelsTaskEndDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Desc) {
		toSerialize["desc"] = o.Desc
	}
	if !IsNil(o.DiskDevices) {
		toSerialize["disk_devices"] = o.DiskDevices
	}
	if !IsNil(o.FailingCommand) {
		toSerialize["failing_command"] = o.FailingCommand
	}
	if !IsNil(o.FailureMetadataTags) {
		toSerialize["failure_metadata_tags"] = o.FailureMetadataTags
	}
	if !IsNil(o.Modules) {
		toSerialize["modules"] = o.Modules
	}
	if !IsNil(o.OomKiller) {
		toSerialize["oom_killer"] = o.OomKiller
	}
	if !IsNil(o.OtherFailingCommands) {
		toSerialize["other_failing_commands"] = o.OtherFailingCommands
	}
	if !IsNil(o.PostErrored) {
		toSerialize["post_errored"] = o.PostErrored
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TimedOut) {
		toSerialize["timed_out"] = o.TimedOut
	}
	if !IsNil(o.TimeoutDuration) {
		toSerialize["timeout_duration"] = o.TimeoutDuration
	}
	if !IsNil(o.TimeoutType) {
		toSerialize["timeout_type"] = o.TimeoutType
	}
	if !IsNil(o.TraceId) {
		toSerialize["trace_id"] = o.TraceId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableApimodelsTaskEndDetail struct {
	value *ApimodelsTaskEndDetail
	isSet bool
}

func (v NullableApimodelsTaskEndDetail) Get() *ApimodelsTaskEndDetail {
	return v.value
}

func (v *NullableApimodelsTaskEndDetail) Set(val *ApimodelsTaskEndDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableApimodelsTaskEndDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableApimodelsTaskEndDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApimodelsTaskEndDetail(val *ApimodelsTaskEndDetail) *NullableApimodelsTaskEndDetail {
	return &NullableApimodelsTaskEndDetail{value: val, isSet: true}
}

func (v NullableApimodelsTaskEndDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApimodelsTaskEndDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


