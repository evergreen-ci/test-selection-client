/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIRawPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIRawPatch{}

// ModelAPIRawPatch struct for ModelAPIRawPatch
type ModelAPIRawPatch struct {
	// The main patch
	Patch *ModelAPIRawModule `json:"patch,omitempty"`
	// The list of module diffs
	RawModules []ModelAPIRawModule `json:"raw_modules,omitempty"`
}

// NewModelAPIRawPatch instantiates a new ModelAPIRawPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIRawPatch() *ModelAPIRawPatch {
	this := ModelAPIRawPatch{}
	return &this
}

// NewModelAPIRawPatchWithDefaults instantiates a new ModelAPIRawPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIRawPatchWithDefaults() *ModelAPIRawPatch {
	this := ModelAPIRawPatch{}
	return &this
}

// GetPatch returns the Patch field value if set, zero value otherwise.
func (o *ModelAPIRawPatch) GetPatch() ModelAPIRawModule {
	if o == nil || IsNil(o.Patch) {
		var ret ModelAPIRawModule
		return ret
	}
	return *o.Patch
}

// GetPatchOk returns a tuple with the Patch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIRawPatch) GetPatchOk() (*ModelAPIRawModule, bool) {
	if o == nil || IsNil(o.Patch) {
		return nil, false
	}
	return o.Patch, true
}

// HasPatch returns a boolean if a field has been set.
func (o *ModelAPIRawPatch) HasPatch() bool {
	if o != nil && !IsNil(o.Patch) {
		return true
	}

	return false
}

// SetPatch gets a reference to the given ModelAPIRawModule and assigns it to the Patch field.
func (o *ModelAPIRawPatch) SetPatch(v ModelAPIRawModule) {
	o.Patch = &v
}

// GetRawModules returns the RawModules field value if set, zero value otherwise.
func (o *ModelAPIRawPatch) GetRawModules() []ModelAPIRawModule {
	if o == nil || IsNil(o.RawModules) {
		var ret []ModelAPIRawModule
		return ret
	}
	return o.RawModules
}

// GetRawModulesOk returns a tuple with the RawModules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIRawPatch) GetRawModulesOk() ([]ModelAPIRawModule, bool) {
	if o == nil || IsNil(o.RawModules) {
		return nil, false
	}
	return o.RawModules, true
}

// HasRawModules returns a boolean if a field has been set.
func (o *ModelAPIRawPatch) HasRawModules() bool {
	if o != nil && !IsNil(o.RawModules) {
		return true
	}

	return false
}

// SetRawModules gets a reference to the given []ModelAPIRawModule and assigns it to the RawModules field.
func (o *ModelAPIRawPatch) SetRawModules(v []ModelAPIRawModule) {
	o.RawModules = v
}

func (o ModelAPIRawPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIRawPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Patch) {
		toSerialize["patch"] = o.Patch
	}
	if !IsNil(o.RawModules) {
		toSerialize["raw_modules"] = o.RawModules
	}
	return toSerialize, nil
}

type NullableModelAPIRawPatch struct {
	value *ModelAPIRawPatch
	isSet bool
}

func (v NullableModelAPIRawPatch) Get() *ModelAPIRawPatch {
	return v.value
}

func (v *NullableModelAPIRawPatch) Set(val *ModelAPIRawPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIRawPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIRawPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIRawPatch(val *ModelAPIRawPatch) *NullableModelAPIRawPatch {
	return &NullableModelAPIRawPatch{value: val, isSet: true}
}

func (v NullableModelAPIRawPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIRawPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


