/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIBootstrapSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIBootstrapSettings{}

// ModelAPIBootstrapSettings struct for ModelAPIBootstrapSettings
type ModelAPIBootstrapSettings struct {
	ClientDir *string `json:"client_dir,omitempty"`
	Communication *string `json:"communication,omitempty"`
	Env []ModelAPIEnvVar `json:"env,omitempty"`
	JasperBinaryDir *string `json:"jasper_binary_dir,omitempty"`
	JasperCredentialsPath *string `json:"jasper_credentials_path,omitempty"`
	Method *string `json:"method,omitempty"`
	PreconditionScripts []ModelAPIPreconditionScript `json:"precondition_scripts,omitempty"`
	ResourceLimits *ModelAPIResourceLimits `json:"resource_limits,omitempty"`
	RootDir *string `json:"root_dir,omitempty"`
	ServiceUser *string `json:"service_user,omitempty"`
	ShellPath *string `json:"shell_path,omitempty"`
}

// NewModelAPIBootstrapSettings instantiates a new ModelAPIBootstrapSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIBootstrapSettings() *ModelAPIBootstrapSettings {
	this := ModelAPIBootstrapSettings{}
	return &this
}

// NewModelAPIBootstrapSettingsWithDefaults instantiates a new ModelAPIBootstrapSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIBootstrapSettingsWithDefaults() *ModelAPIBootstrapSettings {
	this := ModelAPIBootstrapSettings{}
	return &this
}

// GetClientDir returns the ClientDir field value if set, zero value otherwise.
func (o *ModelAPIBootstrapSettings) GetClientDir() string {
	if o == nil || IsNil(o.ClientDir) {
		var ret string
		return ret
	}
	return *o.ClientDir
}

// GetClientDirOk returns a tuple with the ClientDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIBootstrapSettings) GetClientDirOk() (*string, bool) {
	if o == nil || IsNil(o.ClientDir) {
		return nil, false
	}
	return o.ClientDir, true
}

// HasClientDir returns a boolean if a field has been set.
func (o *ModelAPIBootstrapSettings) HasClientDir() bool {
	if o != nil && !IsNil(o.ClientDir) {
		return true
	}

	return false
}

// SetClientDir gets a reference to the given string and assigns it to the ClientDir field.
func (o *ModelAPIBootstrapSettings) SetClientDir(v string) {
	o.ClientDir = &v
}

// GetCommunication returns the Communication field value if set, zero value otherwise.
func (o *ModelAPIBootstrapSettings) GetCommunication() string {
	if o == nil || IsNil(o.Communication) {
		var ret string
		return ret
	}
	return *o.Communication
}

// GetCommunicationOk returns a tuple with the Communication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIBootstrapSettings) GetCommunicationOk() (*string, bool) {
	if o == nil || IsNil(o.Communication) {
		return nil, false
	}
	return o.Communication, true
}

// HasCommunication returns a boolean if a field has been set.
func (o *ModelAPIBootstrapSettings) HasCommunication() bool {
	if o != nil && !IsNil(o.Communication) {
		return true
	}

	return false
}

// SetCommunication gets a reference to the given string and assigns it to the Communication field.
func (o *ModelAPIBootstrapSettings) SetCommunication(v string) {
	o.Communication = &v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *ModelAPIBootstrapSettings) GetEnv() []ModelAPIEnvVar {
	if o == nil || IsNil(o.Env) {
		var ret []ModelAPIEnvVar
		return ret
	}
	return o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIBootstrapSettings) GetEnvOk() ([]ModelAPIEnvVar, bool) {
	if o == nil || IsNil(o.Env) {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *ModelAPIBootstrapSettings) HasEnv() bool {
	if o != nil && !IsNil(o.Env) {
		return true
	}

	return false
}

// SetEnv gets a reference to the given []ModelAPIEnvVar and assigns it to the Env field.
func (o *ModelAPIBootstrapSettings) SetEnv(v []ModelAPIEnvVar) {
	o.Env = v
}

// GetJasperBinaryDir returns the JasperBinaryDir field value if set, zero value otherwise.
func (o *ModelAPIBootstrapSettings) GetJasperBinaryDir() string {
	if o == nil || IsNil(o.JasperBinaryDir) {
		var ret string
		return ret
	}
	return *o.JasperBinaryDir
}

// GetJasperBinaryDirOk returns a tuple with the JasperBinaryDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIBootstrapSettings) GetJasperBinaryDirOk() (*string, bool) {
	if o == nil || IsNil(o.JasperBinaryDir) {
		return nil, false
	}
	return o.JasperBinaryDir, true
}

// HasJasperBinaryDir returns a boolean if a field has been set.
func (o *ModelAPIBootstrapSettings) HasJasperBinaryDir() bool {
	if o != nil && !IsNil(o.JasperBinaryDir) {
		return true
	}

	return false
}

// SetJasperBinaryDir gets a reference to the given string and assigns it to the JasperBinaryDir field.
func (o *ModelAPIBootstrapSettings) SetJasperBinaryDir(v string) {
	o.JasperBinaryDir = &v
}

// GetJasperCredentialsPath returns the JasperCredentialsPath field value if set, zero value otherwise.
func (o *ModelAPIBootstrapSettings) GetJasperCredentialsPath() string {
	if o == nil || IsNil(o.JasperCredentialsPath) {
		var ret string
		return ret
	}
	return *o.JasperCredentialsPath
}

// GetJasperCredentialsPathOk returns a tuple with the JasperCredentialsPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIBootstrapSettings) GetJasperCredentialsPathOk() (*string, bool) {
	if o == nil || IsNil(o.JasperCredentialsPath) {
		return nil, false
	}
	return o.JasperCredentialsPath, true
}

// HasJasperCredentialsPath returns a boolean if a field has been set.
func (o *ModelAPIBootstrapSettings) HasJasperCredentialsPath() bool {
	if o != nil && !IsNil(o.JasperCredentialsPath) {
		return true
	}

	return false
}

// SetJasperCredentialsPath gets a reference to the given string and assigns it to the JasperCredentialsPath field.
func (o *ModelAPIBootstrapSettings) SetJasperCredentialsPath(v string) {
	o.JasperCredentialsPath = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *ModelAPIBootstrapSettings) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIBootstrapSettings) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *ModelAPIBootstrapSettings) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *ModelAPIBootstrapSettings) SetMethod(v string) {
	o.Method = &v
}

// GetPreconditionScripts returns the PreconditionScripts field value if set, zero value otherwise.
func (o *ModelAPIBootstrapSettings) GetPreconditionScripts() []ModelAPIPreconditionScript {
	if o == nil || IsNil(o.PreconditionScripts) {
		var ret []ModelAPIPreconditionScript
		return ret
	}
	return o.PreconditionScripts
}

// GetPreconditionScriptsOk returns a tuple with the PreconditionScripts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIBootstrapSettings) GetPreconditionScriptsOk() ([]ModelAPIPreconditionScript, bool) {
	if o == nil || IsNil(o.PreconditionScripts) {
		return nil, false
	}
	return o.PreconditionScripts, true
}

// HasPreconditionScripts returns a boolean if a field has been set.
func (o *ModelAPIBootstrapSettings) HasPreconditionScripts() bool {
	if o != nil && !IsNil(o.PreconditionScripts) {
		return true
	}

	return false
}

// SetPreconditionScripts gets a reference to the given []ModelAPIPreconditionScript and assigns it to the PreconditionScripts field.
func (o *ModelAPIBootstrapSettings) SetPreconditionScripts(v []ModelAPIPreconditionScript) {
	o.PreconditionScripts = v
}

// GetResourceLimits returns the ResourceLimits field value if set, zero value otherwise.
func (o *ModelAPIBootstrapSettings) GetResourceLimits() ModelAPIResourceLimits {
	if o == nil || IsNil(o.ResourceLimits) {
		var ret ModelAPIResourceLimits
		return ret
	}
	return *o.ResourceLimits
}

// GetResourceLimitsOk returns a tuple with the ResourceLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIBootstrapSettings) GetResourceLimitsOk() (*ModelAPIResourceLimits, bool) {
	if o == nil || IsNil(o.ResourceLimits) {
		return nil, false
	}
	return o.ResourceLimits, true
}

// HasResourceLimits returns a boolean if a field has been set.
func (o *ModelAPIBootstrapSettings) HasResourceLimits() bool {
	if o != nil && !IsNil(o.ResourceLimits) {
		return true
	}

	return false
}

// SetResourceLimits gets a reference to the given ModelAPIResourceLimits and assigns it to the ResourceLimits field.
func (o *ModelAPIBootstrapSettings) SetResourceLimits(v ModelAPIResourceLimits) {
	o.ResourceLimits = &v
}

// GetRootDir returns the RootDir field value if set, zero value otherwise.
func (o *ModelAPIBootstrapSettings) GetRootDir() string {
	if o == nil || IsNil(o.RootDir) {
		var ret string
		return ret
	}
	return *o.RootDir
}

// GetRootDirOk returns a tuple with the RootDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIBootstrapSettings) GetRootDirOk() (*string, bool) {
	if o == nil || IsNil(o.RootDir) {
		return nil, false
	}
	return o.RootDir, true
}

// HasRootDir returns a boolean if a field has been set.
func (o *ModelAPIBootstrapSettings) HasRootDir() bool {
	if o != nil && !IsNil(o.RootDir) {
		return true
	}

	return false
}

// SetRootDir gets a reference to the given string and assigns it to the RootDir field.
func (o *ModelAPIBootstrapSettings) SetRootDir(v string) {
	o.RootDir = &v
}

// GetServiceUser returns the ServiceUser field value if set, zero value otherwise.
func (o *ModelAPIBootstrapSettings) GetServiceUser() string {
	if o == nil || IsNil(o.ServiceUser) {
		var ret string
		return ret
	}
	return *o.ServiceUser
}

// GetServiceUserOk returns a tuple with the ServiceUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIBootstrapSettings) GetServiceUserOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceUser) {
		return nil, false
	}
	return o.ServiceUser, true
}

// HasServiceUser returns a boolean if a field has been set.
func (o *ModelAPIBootstrapSettings) HasServiceUser() bool {
	if o != nil && !IsNil(o.ServiceUser) {
		return true
	}

	return false
}

// SetServiceUser gets a reference to the given string and assigns it to the ServiceUser field.
func (o *ModelAPIBootstrapSettings) SetServiceUser(v string) {
	o.ServiceUser = &v
}

// GetShellPath returns the ShellPath field value if set, zero value otherwise.
func (o *ModelAPIBootstrapSettings) GetShellPath() string {
	if o == nil || IsNil(o.ShellPath) {
		var ret string
		return ret
	}
	return *o.ShellPath
}

// GetShellPathOk returns a tuple with the ShellPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIBootstrapSettings) GetShellPathOk() (*string, bool) {
	if o == nil || IsNil(o.ShellPath) {
		return nil, false
	}
	return o.ShellPath, true
}

// HasShellPath returns a boolean if a field has been set.
func (o *ModelAPIBootstrapSettings) HasShellPath() bool {
	if o != nil && !IsNil(o.ShellPath) {
		return true
	}

	return false
}

// SetShellPath gets a reference to the given string and assigns it to the ShellPath field.
func (o *ModelAPIBootstrapSettings) SetShellPath(v string) {
	o.ShellPath = &v
}

func (o ModelAPIBootstrapSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIBootstrapSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientDir) {
		toSerialize["client_dir"] = o.ClientDir
	}
	if !IsNil(o.Communication) {
		toSerialize["communication"] = o.Communication
	}
	if !IsNil(o.Env) {
		toSerialize["env"] = o.Env
	}
	if !IsNil(o.JasperBinaryDir) {
		toSerialize["jasper_binary_dir"] = o.JasperBinaryDir
	}
	if !IsNil(o.JasperCredentialsPath) {
		toSerialize["jasper_credentials_path"] = o.JasperCredentialsPath
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.PreconditionScripts) {
		toSerialize["precondition_scripts"] = o.PreconditionScripts
	}
	if !IsNil(o.ResourceLimits) {
		toSerialize["resource_limits"] = o.ResourceLimits
	}
	if !IsNil(o.RootDir) {
		toSerialize["root_dir"] = o.RootDir
	}
	if !IsNil(o.ServiceUser) {
		toSerialize["service_user"] = o.ServiceUser
	}
	if !IsNil(o.ShellPath) {
		toSerialize["shell_path"] = o.ShellPath
	}
	return toSerialize, nil
}

type NullableModelAPIBootstrapSettings struct {
	value *ModelAPIBootstrapSettings
	isSet bool
}

func (v NullableModelAPIBootstrapSettings) Get() *ModelAPIBootstrapSettings {
	return v.value
}

func (v *NullableModelAPIBootstrapSettings) Set(val *ModelAPIBootstrapSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIBootstrapSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIBootstrapSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIBootstrapSettings(val *ModelAPIBootstrapSettings) *NullableModelAPIBootstrapSettings {
	return &NullableModelAPIBootstrapSettings{value: val, isSet: true}
}

func (v NullableModelAPIBootstrapSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIBootstrapSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


