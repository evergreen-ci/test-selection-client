/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelDefinitionInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelDefinitionInfo{}

// ModelDefinitionInfo struct for ModelDefinitionInfo
type ModelDefinitionInfo struct {
	// The batchtime defined for the variant, if provided, as defined in the project settings
	Batchtime *int32 `json:"batchtime,omitempty"`
	// The cron defined for the variant, if provided, as defined in the project settings
	Cron *string `json:"cron,omitempty"`
}

// NewModelDefinitionInfo instantiates a new ModelDefinitionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelDefinitionInfo() *ModelDefinitionInfo {
	this := ModelDefinitionInfo{}
	return &this
}

// NewModelDefinitionInfoWithDefaults instantiates a new ModelDefinitionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelDefinitionInfoWithDefaults() *ModelDefinitionInfo {
	this := ModelDefinitionInfo{}
	return &this
}

// GetBatchtime returns the Batchtime field value if set, zero value otherwise.
func (o *ModelDefinitionInfo) GetBatchtime() int32 {
	if o == nil || IsNil(o.Batchtime) {
		var ret int32
		return ret
	}
	return *o.Batchtime
}

// GetBatchtimeOk returns a tuple with the Batchtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDefinitionInfo) GetBatchtimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Batchtime) {
		return nil, false
	}
	return o.Batchtime, true
}

// HasBatchtime returns a boolean if a field has been set.
func (o *ModelDefinitionInfo) HasBatchtime() bool {
	if o != nil && !IsNil(o.Batchtime) {
		return true
	}

	return false
}

// SetBatchtime gets a reference to the given int32 and assigns it to the Batchtime field.
func (o *ModelDefinitionInfo) SetBatchtime(v int32) {
	o.Batchtime = &v
}

// GetCron returns the Cron field value if set, zero value otherwise.
func (o *ModelDefinitionInfo) GetCron() string {
	if o == nil || IsNil(o.Cron) {
		var ret string
		return ret
	}
	return *o.Cron
}

// GetCronOk returns a tuple with the Cron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelDefinitionInfo) GetCronOk() (*string, bool) {
	if o == nil || IsNil(o.Cron) {
		return nil, false
	}
	return o.Cron, true
}

// HasCron returns a boolean if a field has been set.
func (o *ModelDefinitionInfo) HasCron() bool {
	if o != nil && !IsNil(o.Cron) {
		return true
	}

	return false
}

// SetCron gets a reference to the given string and assigns it to the Cron field.
func (o *ModelDefinitionInfo) SetCron(v string) {
	o.Cron = &v
}

func (o ModelDefinitionInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelDefinitionInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Batchtime) {
		toSerialize["batchtime"] = o.Batchtime
	}
	if !IsNil(o.Cron) {
		toSerialize["cron"] = o.Cron
	}
	return toSerialize, nil
}

type NullableModelDefinitionInfo struct {
	value *ModelDefinitionInfo
	isSet bool
}

func (v NullableModelDefinitionInfo) Get() *ModelDefinitionInfo {
	return v.value
}

func (v *NullableModelDefinitionInfo) Set(val *ModelDefinitionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelDefinitionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelDefinitionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelDefinitionInfo(val *ModelDefinitionInfo) *NullableModelDefinitionInfo {
	return &NullableModelDefinitionInfo{value: val, isSet: true}
}

func (v NullableModelDefinitionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelDefinitionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


