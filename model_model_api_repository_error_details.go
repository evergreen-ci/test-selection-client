/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIRepositoryErrorDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIRepositoryErrorDetails{}

// ModelAPIRepositoryErrorDetails struct for ModelAPIRepositoryErrorDetails
type ModelAPIRepositoryErrorDetails struct {
	Exists *bool `json:"exists,omitempty"`
	InvalidRevision *string `json:"invalid_revision,omitempty"`
	MergeBaseRevision *string `json:"merge_base_revision,omitempty"`
}

// NewModelAPIRepositoryErrorDetails instantiates a new ModelAPIRepositoryErrorDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIRepositoryErrorDetails() *ModelAPIRepositoryErrorDetails {
	this := ModelAPIRepositoryErrorDetails{}
	return &this
}

// NewModelAPIRepositoryErrorDetailsWithDefaults instantiates a new ModelAPIRepositoryErrorDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIRepositoryErrorDetailsWithDefaults() *ModelAPIRepositoryErrorDetails {
	this := ModelAPIRepositoryErrorDetails{}
	return &this
}

// GetExists returns the Exists field value if set, zero value otherwise.
func (o *ModelAPIRepositoryErrorDetails) GetExists() bool {
	if o == nil || IsNil(o.Exists) {
		var ret bool
		return ret
	}
	return *o.Exists
}

// GetExistsOk returns a tuple with the Exists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIRepositoryErrorDetails) GetExistsOk() (*bool, bool) {
	if o == nil || IsNil(o.Exists) {
		return nil, false
	}
	return o.Exists, true
}

// HasExists returns a boolean if a field has been set.
func (o *ModelAPIRepositoryErrorDetails) HasExists() bool {
	if o != nil && !IsNil(o.Exists) {
		return true
	}

	return false
}

// SetExists gets a reference to the given bool and assigns it to the Exists field.
func (o *ModelAPIRepositoryErrorDetails) SetExists(v bool) {
	o.Exists = &v
}

// GetInvalidRevision returns the InvalidRevision field value if set, zero value otherwise.
func (o *ModelAPIRepositoryErrorDetails) GetInvalidRevision() string {
	if o == nil || IsNil(o.InvalidRevision) {
		var ret string
		return ret
	}
	return *o.InvalidRevision
}

// GetInvalidRevisionOk returns a tuple with the InvalidRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIRepositoryErrorDetails) GetInvalidRevisionOk() (*string, bool) {
	if o == nil || IsNil(o.InvalidRevision) {
		return nil, false
	}
	return o.InvalidRevision, true
}

// HasInvalidRevision returns a boolean if a field has been set.
func (o *ModelAPIRepositoryErrorDetails) HasInvalidRevision() bool {
	if o != nil && !IsNil(o.InvalidRevision) {
		return true
	}

	return false
}

// SetInvalidRevision gets a reference to the given string and assigns it to the InvalidRevision field.
func (o *ModelAPIRepositoryErrorDetails) SetInvalidRevision(v string) {
	o.InvalidRevision = &v
}

// GetMergeBaseRevision returns the MergeBaseRevision field value if set, zero value otherwise.
func (o *ModelAPIRepositoryErrorDetails) GetMergeBaseRevision() string {
	if o == nil || IsNil(o.MergeBaseRevision) {
		var ret string
		return ret
	}
	return *o.MergeBaseRevision
}

// GetMergeBaseRevisionOk returns a tuple with the MergeBaseRevision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIRepositoryErrorDetails) GetMergeBaseRevisionOk() (*string, bool) {
	if o == nil || IsNil(o.MergeBaseRevision) {
		return nil, false
	}
	return o.MergeBaseRevision, true
}

// HasMergeBaseRevision returns a boolean if a field has been set.
func (o *ModelAPIRepositoryErrorDetails) HasMergeBaseRevision() bool {
	if o != nil && !IsNil(o.MergeBaseRevision) {
		return true
	}

	return false
}

// SetMergeBaseRevision gets a reference to the given string and assigns it to the MergeBaseRevision field.
func (o *ModelAPIRepositoryErrorDetails) SetMergeBaseRevision(v string) {
	o.MergeBaseRevision = &v
}

func (o ModelAPIRepositoryErrorDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIRepositoryErrorDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Exists) {
		toSerialize["exists"] = o.Exists
	}
	if !IsNil(o.InvalidRevision) {
		toSerialize["invalid_revision"] = o.InvalidRevision
	}
	if !IsNil(o.MergeBaseRevision) {
		toSerialize["merge_base_revision"] = o.MergeBaseRevision
	}
	return toSerialize, nil
}

type NullableModelAPIRepositoryErrorDetails struct {
	value *ModelAPIRepositoryErrorDetails
	isSet bool
}

func (v NullableModelAPIRepositoryErrorDetails) Get() *ModelAPIRepositoryErrorDetails {
	return v.value
}

func (v *NullableModelAPIRepositoryErrorDetails) Set(val *ModelAPIRepositoryErrorDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIRepositoryErrorDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIRepositoryErrorDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIRepositoryErrorDetails(val *ModelAPIRepositoryErrorDetails) *NullableModelAPIRepositoryErrorDetails {
	return &NullableModelAPIRepositoryErrorDetails{value: val, isSet: true}
}

func (v NullableModelAPIRepositoryErrorDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIRepositoryErrorDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


