/*
Evergreen REST v2 API

Testing BuildsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/evergreen-ci/test-selection-client"
)

func Test_openapi_BuildsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test BuildsAPIService BuildsBuildIdAbortPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var buildId string

		resp, httpRes, err := apiClient.BuildsAPI.BuildsBuildIdAbortPost(context.Background(), buildId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BuildsAPIService BuildsBuildIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var buildId string

		resp, httpRes, err := apiClient.BuildsAPI.BuildsBuildIdGet(context.Background(), buildId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BuildsAPIService BuildsBuildIdPatch", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var buildId string

		resp, httpRes, err := apiClient.BuildsAPI.BuildsBuildIdPatch(context.Background(), buildId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BuildsAPIService BuildsBuildIdRestartPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var buildId string

		resp, httpRes, err := apiClient.BuildsAPI.BuildsBuildIdRestartPost(context.Background(), buildId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test BuildsAPIService VersionsVersionIdBuildsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var versionId string

		resp, httpRes, err := apiClient.BuildsAPI.VersionsVersionIdBuildsGet(context.Background(), versionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
