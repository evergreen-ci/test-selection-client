/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPICommitQueueParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPICommitQueueParams{}

// ModelAPICommitQueueParams struct for ModelAPICommitQueueParams
type ModelAPICommitQueueParams struct {
	// Enable/disable the commit queue.
	Enabled *bool `json:"enabled,omitempty"`
	// Method of merging (squash, merge, or rebase).
	MergeMethod *string `json:"merge_method,omitempty"`
	// Message to display when users interact with the commit queue.
	Message *string `json:"message,omitempty"`
}

// NewModelAPICommitQueueParams instantiates a new ModelAPICommitQueueParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPICommitQueueParams() *ModelAPICommitQueueParams {
	this := ModelAPICommitQueueParams{}
	return &this
}

// NewModelAPICommitQueueParamsWithDefaults instantiates a new ModelAPICommitQueueParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPICommitQueueParamsWithDefaults() *ModelAPICommitQueueParams {
	this := ModelAPICommitQueueParams{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ModelAPICommitQueueParams) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPICommitQueueParams) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ModelAPICommitQueueParams) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ModelAPICommitQueueParams) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetMergeMethod returns the MergeMethod field value if set, zero value otherwise.
func (o *ModelAPICommitQueueParams) GetMergeMethod() string {
	if o == nil || IsNil(o.MergeMethod) {
		var ret string
		return ret
	}
	return *o.MergeMethod
}

// GetMergeMethodOk returns a tuple with the MergeMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPICommitQueueParams) GetMergeMethodOk() (*string, bool) {
	if o == nil || IsNil(o.MergeMethod) {
		return nil, false
	}
	return o.MergeMethod, true
}

// HasMergeMethod returns a boolean if a field has been set.
func (o *ModelAPICommitQueueParams) HasMergeMethod() bool {
	if o != nil && !IsNil(o.MergeMethod) {
		return true
	}

	return false
}

// SetMergeMethod gets a reference to the given string and assigns it to the MergeMethod field.
func (o *ModelAPICommitQueueParams) SetMergeMethod(v string) {
	o.MergeMethod = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ModelAPICommitQueueParams) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPICommitQueueParams) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ModelAPICommitQueueParams) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ModelAPICommitQueueParams) SetMessage(v string) {
	o.Message = &v
}

func (o ModelAPICommitQueueParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPICommitQueueParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.MergeMethod) {
		toSerialize["merge_method"] = o.MergeMethod
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableModelAPICommitQueueParams struct {
	value *ModelAPICommitQueueParams
	isSet bool
}

func (v NullableModelAPICommitQueueParams) Get() *ModelAPICommitQueueParams {
	return v.value
}

func (v *NullableModelAPICommitQueueParams) Set(val *ModelAPICommitQueueParams) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPICommitQueueParams) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPICommitQueueParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPICommitQueueParams(val *ModelAPICommitQueueParams) *NullableModelAPICommitQueueParams {
	return &NullableModelAPICommitQueueParams{value: val, isSet: true}
}

func (v NullableModelAPICommitQueueParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPICommitQueueParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


