/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPINotificationPreferences type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPINotificationPreferences{}

// ModelAPINotificationPreferences struct for ModelAPINotificationPreferences
type ModelAPINotificationPreferences struct {
	BuildBreak *string `json:"build_break,omitempty"`
	BuildBreakId *string `json:"build_break_id,omitempty"`
	CommitQueue *string `json:"commit_queue,omitempty"`
	CommitQueueId *string `json:"commit_queue_id,omitempty"`
	PatchFinish *string `json:"patch_finish,omitempty"`
	PatchFinishId *string `json:"patch_finish_id,omitempty"`
	PatchFirstFailure *string `json:"patch_first_failure,omitempty"`
	PatchFirstFailureId *string `json:"patch_first_failure_id,omitempty"`
	SpawnHostExpiration *string `json:"spawn_host_expiration,omitempty"`
	SpawnHostExpirationId *string `json:"spawn_host_expiration_id,omitempty"`
	SpawnHostOutcome *string `json:"spawn_host_outcome,omitempty"`
	SpawnHostOutcomeId *string `json:"spawn_host_outcome_id,omitempty"`
}

// NewModelAPINotificationPreferences instantiates a new ModelAPINotificationPreferences object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPINotificationPreferences() *ModelAPINotificationPreferences {
	this := ModelAPINotificationPreferences{}
	return &this
}

// NewModelAPINotificationPreferencesWithDefaults instantiates a new ModelAPINotificationPreferences object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPINotificationPreferencesWithDefaults() *ModelAPINotificationPreferences {
	this := ModelAPINotificationPreferences{}
	return &this
}

// GetBuildBreak returns the BuildBreak field value if set, zero value otherwise.
func (o *ModelAPINotificationPreferences) GetBuildBreak() string {
	if o == nil || IsNil(o.BuildBreak) {
		var ret string
		return ret
	}
	return *o.BuildBreak
}

// GetBuildBreakOk returns a tuple with the BuildBreak field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPINotificationPreferences) GetBuildBreakOk() (*string, bool) {
	if o == nil || IsNil(o.BuildBreak) {
		return nil, false
	}
	return o.BuildBreak, true
}

// HasBuildBreak returns a boolean if a field has been set.
func (o *ModelAPINotificationPreferences) HasBuildBreak() bool {
	if o != nil && !IsNil(o.BuildBreak) {
		return true
	}

	return false
}

// SetBuildBreak gets a reference to the given string and assigns it to the BuildBreak field.
func (o *ModelAPINotificationPreferences) SetBuildBreak(v string) {
	o.BuildBreak = &v
}

// GetBuildBreakId returns the BuildBreakId field value if set, zero value otherwise.
func (o *ModelAPINotificationPreferences) GetBuildBreakId() string {
	if o == nil || IsNil(o.BuildBreakId) {
		var ret string
		return ret
	}
	return *o.BuildBreakId
}

// GetBuildBreakIdOk returns a tuple with the BuildBreakId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPINotificationPreferences) GetBuildBreakIdOk() (*string, bool) {
	if o == nil || IsNil(o.BuildBreakId) {
		return nil, false
	}
	return o.BuildBreakId, true
}

// HasBuildBreakId returns a boolean if a field has been set.
func (o *ModelAPINotificationPreferences) HasBuildBreakId() bool {
	if o != nil && !IsNil(o.BuildBreakId) {
		return true
	}

	return false
}

// SetBuildBreakId gets a reference to the given string and assigns it to the BuildBreakId field.
func (o *ModelAPINotificationPreferences) SetBuildBreakId(v string) {
	o.BuildBreakId = &v
}

// GetCommitQueue returns the CommitQueue field value if set, zero value otherwise.
func (o *ModelAPINotificationPreferences) GetCommitQueue() string {
	if o == nil || IsNil(o.CommitQueue) {
		var ret string
		return ret
	}
	return *o.CommitQueue
}

// GetCommitQueueOk returns a tuple with the CommitQueue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPINotificationPreferences) GetCommitQueueOk() (*string, bool) {
	if o == nil || IsNil(o.CommitQueue) {
		return nil, false
	}
	return o.CommitQueue, true
}

// HasCommitQueue returns a boolean if a field has been set.
func (o *ModelAPINotificationPreferences) HasCommitQueue() bool {
	if o != nil && !IsNil(o.CommitQueue) {
		return true
	}

	return false
}

// SetCommitQueue gets a reference to the given string and assigns it to the CommitQueue field.
func (o *ModelAPINotificationPreferences) SetCommitQueue(v string) {
	o.CommitQueue = &v
}

// GetCommitQueueId returns the CommitQueueId field value if set, zero value otherwise.
func (o *ModelAPINotificationPreferences) GetCommitQueueId() string {
	if o == nil || IsNil(o.CommitQueueId) {
		var ret string
		return ret
	}
	return *o.CommitQueueId
}

// GetCommitQueueIdOk returns a tuple with the CommitQueueId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPINotificationPreferences) GetCommitQueueIdOk() (*string, bool) {
	if o == nil || IsNil(o.CommitQueueId) {
		return nil, false
	}
	return o.CommitQueueId, true
}

// HasCommitQueueId returns a boolean if a field has been set.
func (o *ModelAPINotificationPreferences) HasCommitQueueId() bool {
	if o != nil && !IsNil(o.CommitQueueId) {
		return true
	}

	return false
}

// SetCommitQueueId gets a reference to the given string and assigns it to the CommitQueueId field.
func (o *ModelAPINotificationPreferences) SetCommitQueueId(v string) {
	o.CommitQueueId = &v
}

// GetPatchFinish returns the PatchFinish field value if set, zero value otherwise.
func (o *ModelAPINotificationPreferences) GetPatchFinish() string {
	if o == nil || IsNil(o.PatchFinish) {
		var ret string
		return ret
	}
	return *o.PatchFinish
}

// GetPatchFinishOk returns a tuple with the PatchFinish field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPINotificationPreferences) GetPatchFinishOk() (*string, bool) {
	if o == nil || IsNil(o.PatchFinish) {
		return nil, false
	}
	return o.PatchFinish, true
}

// HasPatchFinish returns a boolean if a field has been set.
func (o *ModelAPINotificationPreferences) HasPatchFinish() bool {
	if o != nil && !IsNil(o.PatchFinish) {
		return true
	}

	return false
}

// SetPatchFinish gets a reference to the given string and assigns it to the PatchFinish field.
func (o *ModelAPINotificationPreferences) SetPatchFinish(v string) {
	o.PatchFinish = &v
}

// GetPatchFinishId returns the PatchFinishId field value if set, zero value otherwise.
func (o *ModelAPINotificationPreferences) GetPatchFinishId() string {
	if o == nil || IsNil(o.PatchFinishId) {
		var ret string
		return ret
	}
	return *o.PatchFinishId
}

// GetPatchFinishIdOk returns a tuple with the PatchFinishId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPINotificationPreferences) GetPatchFinishIdOk() (*string, bool) {
	if o == nil || IsNil(o.PatchFinishId) {
		return nil, false
	}
	return o.PatchFinishId, true
}

// HasPatchFinishId returns a boolean if a field has been set.
func (o *ModelAPINotificationPreferences) HasPatchFinishId() bool {
	if o != nil && !IsNil(o.PatchFinishId) {
		return true
	}

	return false
}

// SetPatchFinishId gets a reference to the given string and assigns it to the PatchFinishId field.
func (o *ModelAPINotificationPreferences) SetPatchFinishId(v string) {
	o.PatchFinishId = &v
}

// GetPatchFirstFailure returns the PatchFirstFailure field value if set, zero value otherwise.
func (o *ModelAPINotificationPreferences) GetPatchFirstFailure() string {
	if o == nil || IsNil(o.PatchFirstFailure) {
		var ret string
		return ret
	}
	return *o.PatchFirstFailure
}

// GetPatchFirstFailureOk returns a tuple with the PatchFirstFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPINotificationPreferences) GetPatchFirstFailureOk() (*string, bool) {
	if o == nil || IsNil(o.PatchFirstFailure) {
		return nil, false
	}
	return o.PatchFirstFailure, true
}

// HasPatchFirstFailure returns a boolean if a field has been set.
func (o *ModelAPINotificationPreferences) HasPatchFirstFailure() bool {
	if o != nil && !IsNil(o.PatchFirstFailure) {
		return true
	}

	return false
}

// SetPatchFirstFailure gets a reference to the given string and assigns it to the PatchFirstFailure field.
func (o *ModelAPINotificationPreferences) SetPatchFirstFailure(v string) {
	o.PatchFirstFailure = &v
}

// GetPatchFirstFailureId returns the PatchFirstFailureId field value if set, zero value otherwise.
func (o *ModelAPINotificationPreferences) GetPatchFirstFailureId() string {
	if o == nil || IsNil(o.PatchFirstFailureId) {
		var ret string
		return ret
	}
	return *o.PatchFirstFailureId
}

// GetPatchFirstFailureIdOk returns a tuple with the PatchFirstFailureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPINotificationPreferences) GetPatchFirstFailureIdOk() (*string, bool) {
	if o == nil || IsNil(o.PatchFirstFailureId) {
		return nil, false
	}
	return o.PatchFirstFailureId, true
}

// HasPatchFirstFailureId returns a boolean if a field has been set.
func (o *ModelAPINotificationPreferences) HasPatchFirstFailureId() bool {
	if o != nil && !IsNil(o.PatchFirstFailureId) {
		return true
	}

	return false
}

// SetPatchFirstFailureId gets a reference to the given string and assigns it to the PatchFirstFailureId field.
func (o *ModelAPINotificationPreferences) SetPatchFirstFailureId(v string) {
	o.PatchFirstFailureId = &v
}

// GetSpawnHostExpiration returns the SpawnHostExpiration field value if set, zero value otherwise.
func (o *ModelAPINotificationPreferences) GetSpawnHostExpiration() string {
	if o == nil || IsNil(o.SpawnHostExpiration) {
		var ret string
		return ret
	}
	return *o.SpawnHostExpiration
}

// GetSpawnHostExpirationOk returns a tuple with the SpawnHostExpiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPINotificationPreferences) GetSpawnHostExpirationOk() (*string, bool) {
	if o == nil || IsNil(o.SpawnHostExpiration) {
		return nil, false
	}
	return o.SpawnHostExpiration, true
}

// HasSpawnHostExpiration returns a boolean if a field has been set.
func (o *ModelAPINotificationPreferences) HasSpawnHostExpiration() bool {
	if o != nil && !IsNil(o.SpawnHostExpiration) {
		return true
	}

	return false
}

// SetSpawnHostExpiration gets a reference to the given string and assigns it to the SpawnHostExpiration field.
func (o *ModelAPINotificationPreferences) SetSpawnHostExpiration(v string) {
	o.SpawnHostExpiration = &v
}

// GetSpawnHostExpirationId returns the SpawnHostExpirationId field value if set, zero value otherwise.
func (o *ModelAPINotificationPreferences) GetSpawnHostExpirationId() string {
	if o == nil || IsNil(o.SpawnHostExpirationId) {
		var ret string
		return ret
	}
	return *o.SpawnHostExpirationId
}

// GetSpawnHostExpirationIdOk returns a tuple with the SpawnHostExpirationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPINotificationPreferences) GetSpawnHostExpirationIdOk() (*string, bool) {
	if o == nil || IsNil(o.SpawnHostExpirationId) {
		return nil, false
	}
	return o.SpawnHostExpirationId, true
}

// HasSpawnHostExpirationId returns a boolean if a field has been set.
func (o *ModelAPINotificationPreferences) HasSpawnHostExpirationId() bool {
	if o != nil && !IsNil(o.SpawnHostExpirationId) {
		return true
	}

	return false
}

// SetSpawnHostExpirationId gets a reference to the given string and assigns it to the SpawnHostExpirationId field.
func (o *ModelAPINotificationPreferences) SetSpawnHostExpirationId(v string) {
	o.SpawnHostExpirationId = &v
}

// GetSpawnHostOutcome returns the SpawnHostOutcome field value if set, zero value otherwise.
func (o *ModelAPINotificationPreferences) GetSpawnHostOutcome() string {
	if o == nil || IsNil(o.SpawnHostOutcome) {
		var ret string
		return ret
	}
	return *o.SpawnHostOutcome
}

// GetSpawnHostOutcomeOk returns a tuple with the SpawnHostOutcome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPINotificationPreferences) GetSpawnHostOutcomeOk() (*string, bool) {
	if o == nil || IsNil(o.SpawnHostOutcome) {
		return nil, false
	}
	return o.SpawnHostOutcome, true
}

// HasSpawnHostOutcome returns a boolean if a field has been set.
func (o *ModelAPINotificationPreferences) HasSpawnHostOutcome() bool {
	if o != nil && !IsNil(o.SpawnHostOutcome) {
		return true
	}

	return false
}

// SetSpawnHostOutcome gets a reference to the given string and assigns it to the SpawnHostOutcome field.
func (o *ModelAPINotificationPreferences) SetSpawnHostOutcome(v string) {
	o.SpawnHostOutcome = &v
}

// GetSpawnHostOutcomeId returns the SpawnHostOutcomeId field value if set, zero value otherwise.
func (o *ModelAPINotificationPreferences) GetSpawnHostOutcomeId() string {
	if o == nil || IsNil(o.SpawnHostOutcomeId) {
		var ret string
		return ret
	}
	return *o.SpawnHostOutcomeId
}

// GetSpawnHostOutcomeIdOk returns a tuple with the SpawnHostOutcomeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPINotificationPreferences) GetSpawnHostOutcomeIdOk() (*string, bool) {
	if o == nil || IsNil(o.SpawnHostOutcomeId) {
		return nil, false
	}
	return o.SpawnHostOutcomeId, true
}

// HasSpawnHostOutcomeId returns a boolean if a field has been set.
func (o *ModelAPINotificationPreferences) HasSpawnHostOutcomeId() bool {
	if o != nil && !IsNil(o.SpawnHostOutcomeId) {
		return true
	}

	return false
}

// SetSpawnHostOutcomeId gets a reference to the given string and assigns it to the SpawnHostOutcomeId field.
func (o *ModelAPINotificationPreferences) SetSpawnHostOutcomeId(v string) {
	o.SpawnHostOutcomeId = &v
}

func (o ModelAPINotificationPreferences) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPINotificationPreferences) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuildBreak) {
		toSerialize["build_break"] = o.BuildBreak
	}
	if !IsNil(o.BuildBreakId) {
		toSerialize["build_break_id"] = o.BuildBreakId
	}
	if !IsNil(o.CommitQueue) {
		toSerialize["commit_queue"] = o.CommitQueue
	}
	if !IsNil(o.CommitQueueId) {
		toSerialize["commit_queue_id"] = o.CommitQueueId
	}
	if !IsNil(o.PatchFinish) {
		toSerialize["patch_finish"] = o.PatchFinish
	}
	if !IsNil(o.PatchFinishId) {
		toSerialize["patch_finish_id"] = o.PatchFinishId
	}
	if !IsNil(o.PatchFirstFailure) {
		toSerialize["patch_first_failure"] = o.PatchFirstFailure
	}
	if !IsNil(o.PatchFirstFailureId) {
		toSerialize["patch_first_failure_id"] = o.PatchFirstFailureId
	}
	if !IsNil(o.SpawnHostExpiration) {
		toSerialize["spawn_host_expiration"] = o.SpawnHostExpiration
	}
	if !IsNil(o.SpawnHostExpirationId) {
		toSerialize["spawn_host_expiration_id"] = o.SpawnHostExpirationId
	}
	if !IsNil(o.SpawnHostOutcome) {
		toSerialize["spawn_host_outcome"] = o.SpawnHostOutcome
	}
	if !IsNil(o.SpawnHostOutcomeId) {
		toSerialize["spawn_host_outcome_id"] = o.SpawnHostOutcomeId
	}
	return toSerialize, nil
}

type NullableModelAPINotificationPreferences struct {
	value *ModelAPINotificationPreferences
	isSet bool
}

func (v NullableModelAPINotificationPreferences) Get() *ModelAPINotificationPreferences {
	return v.value
}

func (v *NullableModelAPINotificationPreferences) Set(val *ModelAPINotificationPreferences) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPINotificationPreferences) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPINotificationPreferences) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPINotificationPreferences(val *ModelAPINotificationPreferences) *NullableModelAPINotificationPreferences {
	return &NullableModelAPINotificationPreferences{value: val, isSet: true}
}

func (v NullableModelAPINotificationPreferences) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPINotificationPreferences) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


