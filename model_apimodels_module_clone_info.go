/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApimodelsModuleCloneInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApimodelsModuleCloneInfo{}

// ApimodelsModuleCloneInfo struct for ApimodelsModuleCloneInfo
type ApimodelsModuleCloneInfo struct {
	Prefixes *map[string]string `json:"prefixes,omitempty"`
}

// NewApimodelsModuleCloneInfo instantiates a new ApimodelsModuleCloneInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApimodelsModuleCloneInfo() *ApimodelsModuleCloneInfo {
	this := ApimodelsModuleCloneInfo{}
	return &this
}

// NewApimodelsModuleCloneInfoWithDefaults instantiates a new ApimodelsModuleCloneInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApimodelsModuleCloneInfoWithDefaults() *ApimodelsModuleCloneInfo {
	this := ApimodelsModuleCloneInfo{}
	return &this
}

// GetPrefixes returns the Prefixes field value if set, zero value otherwise.
func (o *ApimodelsModuleCloneInfo) GetPrefixes() map[string]string {
	if o == nil || IsNil(o.Prefixes) {
		var ret map[string]string
		return ret
	}
	return *o.Prefixes
}

// GetPrefixesOk returns a tuple with the Prefixes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimodelsModuleCloneInfo) GetPrefixesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Prefixes) {
		return nil, false
	}
	return o.Prefixes, true
}

// HasPrefixes returns a boolean if a field has been set.
func (o *ApimodelsModuleCloneInfo) HasPrefixes() bool {
	if o != nil && !IsNil(o.Prefixes) {
		return true
	}

	return false
}

// SetPrefixes gets a reference to the given map[string]string and assigns it to the Prefixes field.
func (o *ApimodelsModuleCloneInfo) SetPrefixes(v map[string]string) {
	o.Prefixes = &v
}

func (o ApimodelsModuleCloneInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApimodelsModuleCloneInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Prefixes) {
		toSerialize["prefixes"] = o.Prefixes
	}
	return toSerialize, nil
}

type NullableApimodelsModuleCloneInfo struct {
	value *ApimodelsModuleCloneInfo
	isSet bool
}

func (v NullableApimodelsModuleCloneInfo) Get() *ApimodelsModuleCloneInfo {
	return v.value
}

func (v *NullableApimodelsModuleCloneInfo) Set(val *ApimodelsModuleCloneInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableApimodelsModuleCloneInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableApimodelsModuleCloneInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApimodelsModuleCloneInfo(val *ApimodelsModuleCloneInfo) *NullableApimodelsModuleCloneInfo {
	return &NullableApimodelsModuleCloneInfo{value: val, isSet: true}
}

func (v NullableApimodelsModuleCloneInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApimodelsModuleCloneInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


