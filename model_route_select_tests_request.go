/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RouteSelectTestsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RouteSelectTestsRequest{}

// RouteSelectTestsRequest struct for RouteSelectTestsRequest
type RouteSelectTestsRequest struct {
	// BuildVariant is the Evergreen build variant.
	BuildVariant *string `json:"build_variant,omitempty"`
	// Project is the project identifier.
	Project *string `json:"project,omitempty"`
	// Requester is the Evergreen requester type.
	Requester *string `json:"requester,omitempty"`
	// TaskID is the Evergreen task ID.
	TaskId *string `json:"task_id,omitempty"`
	// TaskName is the Evergreen task name.
	TaskName *string `json:"task_name,omitempty"`
	// Tests is a list of test names.
	Tests []string `json:"tests,omitempty"`
}

// NewRouteSelectTestsRequest instantiates a new RouteSelectTestsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRouteSelectTestsRequest() *RouteSelectTestsRequest {
	this := RouteSelectTestsRequest{}
	return &this
}

// NewRouteSelectTestsRequestWithDefaults instantiates a new RouteSelectTestsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteSelectTestsRequestWithDefaults() *RouteSelectTestsRequest {
	this := RouteSelectTestsRequest{}
	return &this
}

// GetBuildVariant returns the BuildVariant field value if set, zero value otherwise.
func (o *RouteSelectTestsRequest) GetBuildVariant() string {
	if o == nil || IsNil(o.BuildVariant) {
		var ret string
		return ret
	}
	return *o.BuildVariant
}

// GetBuildVariantOk returns a tuple with the BuildVariant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteSelectTestsRequest) GetBuildVariantOk() (*string, bool) {
	if o == nil || IsNil(o.BuildVariant) {
		return nil, false
	}
	return o.BuildVariant, true
}

// HasBuildVariant returns a boolean if a field has been set.
func (o *RouteSelectTestsRequest) HasBuildVariant() bool {
	if o != nil && !IsNil(o.BuildVariant) {
		return true
	}

	return false
}

// SetBuildVariant gets a reference to the given string and assigns it to the BuildVariant field.
func (o *RouteSelectTestsRequest) SetBuildVariant(v string) {
	o.BuildVariant = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *RouteSelectTestsRequest) GetProject() string {
	if o == nil || IsNil(o.Project) {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteSelectTestsRequest) GetProjectOk() (*string, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *RouteSelectTestsRequest) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *RouteSelectTestsRequest) SetProject(v string) {
	o.Project = &v
}

// GetRequester returns the Requester field value if set, zero value otherwise.
func (o *RouteSelectTestsRequest) GetRequester() string {
	if o == nil || IsNil(o.Requester) {
		var ret string
		return ret
	}
	return *o.Requester
}

// GetRequesterOk returns a tuple with the Requester field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteSelectTestsRequest) GetRequesterOk() (*string, bool) {
	if o == nil || IsNil(o.Requester) {
		return nil, false
	}
	return o.Requester, true
}

// HasRequester returns a boolean if a field has been set.
func (o *RouteSelectTestsRequest) HasRequester() bool {
	if o != nil && !IsNil(o.Requester) {
		return true
	}

	return false
}

// SetRequester gets a reference to the given string and assigns it to the Requester field.
func (o *RouteSelectTestsRequest) SetRequester(v string) {
	o.Requester = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *RouteSelectTestsRequest) GetTaskId() string {
	if o == nil || IsNil(o.TaskId) {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteSelectTestsRequest) GetTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *RouteSelectTestsRequest) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *RouteSelectTestsRequest) SetTaskId(v string) {
	o.TaskId = &v
}

// GetTaskName returns the TaskName field value if set, zero value otherwise.
func (o *RouteSelectTestsRequest) GetTaskName() string {
	if o == nil || IsNil(o.TaskName) {
		var ret string
		return ret
	}
	return *o.TaskName
}

// GetTaskNameOk returns a tuple with the TaskName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteSelectTestsRequest) GetTaskNameOk() (*string, bool) {
	if o == nil || IsNil(o.TaskName) {
		return nil, false
	}
	return o.TaskName, true
}

// HasTaskName returns a boolean if a field has been set.
func (o *RouteSelectTestsRequest) HasTaskName() bool {
	if o != nil && !IsNil(o.TaskName) {
		return true
	}

	return false
}

// SetTaskName gets a reference to the given string and assigns it to the TaskName field.
func (o *RouteSelectTestsRequest) SetTaskName(v string) {
	o.TaskName = &v
}

// GetTests returns the Tests field value if set, zero value otherwise.
func (o *RouteSelectTestsRequest) GetTests() []string {
	if o == nil || IsNil(o.Tests) {
		var ret []string
		return ret
	}
	return o.Tests
}

// GetTestsOk returns a tuple with the Tests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteSelectTestsRequest) GetTestsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tests) {
		return nil, false
	}
	return o.Tests, true
}

// HasTests returns a boolean if a field has been set.
func (o *RouteSelectTestsRequest) HasTests() bool {
	if o != nil && !IsNil(o.Tests) {
		return true
	}

	return false
}

// SetTests gets a reference to the given []string and assigns it to the Tests field.
func (o *RouteSelectTestsRequest) SetTests(v []string) {
	o.Tests = v
}

func (o RouteSelectTestsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RouteSelectTestsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuildVariant) {
		toSerialize["build_variant"] = o.BuildVariant
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.Requester) {
		toSerialize["requester"] = o.Requester
	}
	if !IsNil(o.TaskId) {
		toSerialize["task_id"] = o.TaskId
	}
	if !IsNil(o.TaskName) {
		toSerialize["task_name"] = o.TaskName
	}
	if !IsNil(o.Tests) {
		toSerialize["tests"] = o.Tests
	}
	return toSerialize, nil
}

type NullableRouteSelectTestsRequest struct {
	value *RouteSelectTestsRequest
	isSet bool
}

func (v NullableRouteSelectTestsRequest) Get() *RouteSelectTestsRequest {
	return v.value
}

func (v *NullableRouteSelectTestsRequest) Set(val *RouteSelectTestsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteSelectTestsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteSelectTestsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteSelectTestsRequest(val *RouteSelectTestsRequest) *NullableRouteSelectTestsRequest {
	return &NullableRouteSelectTestsRequest{value: val, isSet: true}
}

func (v NullableRouteSelectTestsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteSelectTestsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


