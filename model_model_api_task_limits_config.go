/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPITaskLimitsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPITaskLimitsConfig{}

// ModelAPITaskLimitsConfig struct for ModelAPITaskLimitsConfig
type ModelAPITaskLimitsConfig struct {
	// MaxConcurrentLargeParserProjectTasks is the maximum number of tasks with parser projects stored in S3 that can be running at once.
	MaxConcurrentLargeParserProjectTasks *int32 `json:"max_concurrent_large_parser_project_tasks,omitempty"`
	// MaxDailyAutomaticRestarts is the maximum number of times a project can automatically restart a task within a 24-hour period.
	MaxDailyAutomaticRestarts *int32 `json:"max_daily_automatic_restarts,omitempty"`
	// MaxDegradedModeConcurrentLargeParserProjectTasks is the maximum number of tasks with parser projects stored in S3 that can be running at once during CPU degraded mode.
	MaxDegradedModeConcurrentLargeParserProjectTasks *int32 `json:"max_degraded_mode_concurrent_large_parser_project_tasks,omitempty"`
	// MaxDegradedModeParserProjectSize is the maximum parser project size in MB during CPU degraded mode.
	MaxDegradedModeParserProjectSize *int32 `json:"max_degraded_mode_parser_project_size,omitempty"`
	// MaxExecTimeoutSecs is the maximum number of seconds a task can run and set their timeout to.
	MaxExecTimeoutSecs *int32 `json:"max_exec_timeout_secs,omitempty"`
	// MaxGenerateTaskJSONSize is the maximum size of a JSON file in MB that can be specified in the GenerateTasks command.
	MaxGenerateTaskJsonSize *int32 `json:"max_generate_task_json_size,omitempty"`
	// MaxHourlyPatchTasks is the maximum number of patch tasks a single user can schedule per hour.
	MaxHourlyPatchTasks *int32 `json:"max_hourly_patch_tasks,omitempty"`
	// MaxIncludesPerVersion is the maximum number of includes that a single version can have.
	MaxIncludesPerVersion *int32 `json:"max_includes_per_version,omitempty"`
	// MaxParserProjectSize is the maximum allowed size in MB for parser projects that are stored in S3.
	MaxParserProjectSize *int32 `json:"max_parser_project_size,omitempty"`
	// MaxPendingGeneratedTasks is the maximum number of tasks that can be created by all generated task at once.
	MaxPendingGeneratedTasks *int32 `json:"max_pending_generated_tasks,omitempty"`
	// MaxTaskExecution is the maximum task (zero based) execution number.
	MaxTaskExecution *int32 `json:"max_task_execution,omitempty"`
	// MaxTasksPerVersion is the maximum number of tasks that a single version can have.
	MaxTasksPerVersion *int32 `json:"max_tasks_per_version,omitempty"`
}

// NewModelAPITaskLimitsConfig instantiates a new ModelAPITaskLimitsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPITaskLimitsConfig() *ModelAPITaskLimitsConfig {
	this := ModelAPITaskLimitsConfig{}
	return &this
}

// NewModelAPITaskLimitsConfigWithDefaults instantiates a new ModelAPITaskLimitsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPITaskLimitsConfigWithDefaults() *ModelAPITaskLimitsConfig {
	this := ModelAPITaskLimitsConfig{}
	return &this
}

// GetMaxConcurrentLargeParserProjectTasks returns the MaxConcurrentLargeParserProjectTasks field value if set, zero value otherwise.
func (o *ModelAPITaskLimitsConfig) GetMaxConcurrentLargeParserProjectTasks() int32 {
	if o == nil || IsNil(o.MaxConcurrentLargeParserProjectTasks) {
		var ret int32
		return ret
	}
	return *o.MaxConcurrentLargeParserProjectTasks
}

// GetMaxConcurrentLargeParserProjectTasksOk returns a tuple with the MaxConcurrentLargeParserProjectTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskLimitsConfig) GetMaxConcurrentLargeParserProjectTasksOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxConcurrentLargeParserProjectTasks) {
		return nil, false
	}
	return o.MaxConcurrentLargeParserProjectTasks, true
}

// HasMaxConcurrentLargeParserProjectTasks returns a boolean if a field has been set.
func (o *ModelAPITaskLimitsConfig) HasMaxConcurrentLargeParserProjectTasks() bool {
	if o != nil && !IsNil(o.MaxConcurrentLargeParserProjectTasks) {
		return true
	}

	return false
}

// SetMaxConcurrentLargeParserProjectTasks gets a reference to the given int32 and assigns it to the MaxConcurrentLargeParserProjectTasks field.
func (o *ModelAPITaskLimitsConfig) SetMaxConcurrentLargeParserProjectTasks(v int32) {
	o.MaxConcurrentLargeParserProjectTasks = &v
}

// GetMaxDailyAutomaticRestarts returns the MaxDailyAutomaticRestarts field value if set, zero value otherwise.
func (o *ModelAPITaskLimitsConfig) GetMaxDailyAutomaticRestarts() int32 {
	if o == nil || IsNil(o.MaxDailyAutomaticRestarts) {
		var ret int32
		return ret
	}
	return *o.MaxDailyAutomaticRestarts
}

// GetMaxDailyAutomaticRestartsOk returns a tuple with the MaxDailyAutomaticRestarts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskLimitsConfig) GetMaxDailyAutomaticRestartsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxDailyAutomaticRestarts) {
		return nil, false
	}
	return o.MaxDailyAutomaticRestarts, true
}

// HasMaxDailyAutomaticRestarts returns a boolean if a field has been set.
func (o *ModelAPITaskLimitsConfig) HasMaxDailyAutomaticRestarts() bool {
	if o != nil && !IsNil(o.MaxDailyAutomaticRestarts) {
		return true
	}

	return false
}

// SetMaxDailyAutomaticRestarts gets a reference to the given int32 and assigns it to the MaxDailyAutomaticRestarts field.
func (o *ModelAPITaskLimitsConfig) SetMaxDailyAutomaticRestarts(v int32) {
	o.MaxDailyAutomaticRestarts = &v
}

// GetMaxDegradedModeConcurrentLargeParserProjectTasks returns the MaxDegradedModeConcurrentLargeParserProjectTasks field value if set, zero value otherwise.
func (o *ModelAPITaskLimitsConfig) GetMaxDegradedModeConcurrentLargeParserProjectTasks() int32 {
	if o == nil || IsNil(o.MaxDegradedModeConcurrentLargeParserProjectTasks) {
		var ret int32
		return ret
	}
	return *o.MaxDegradedModeConcurrentLargeParserProjectTasks
}

// GetMaxDegradedModeConcurrentLargeParserProjectTasksOk returns a tuple with the MaxDegradedModeConcurrentLargeParserProjectTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskLimitsConfig) GetMaxDegradedModeConcurrentLargeParserProjectTasksOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxDegradedModeConcurrentLargeParserProjectTasks) {
		return nil, false
	}
	return o.MaxDegradedModeConcurrentLargeParserProjectTasks, true
}

// HasMaxDegradedModeConcurrentLargeParserProjectTasks returns a boolean if a field has been set.
func (o *ModelAPITaskLimitsConfig) HasMaxDegradedModeConcurrentLargeParserProjectTasks() bool {
	if o != nil && !IsNil(o.MaxDegradedModeConcurrentLargeParserProjectTasks) {
		return true
	}

	return false
}

// SetMaxDegradedModeConcurrentLargeParserProjectTasks gets a reference to the given int32 and assigns it to the MaxDegradedModeConcurrentLargeParserProjectTasks field.
func (o *ModelAPITaskLimitsConfig) SetMaxDegradedModeConcurrentLargeParserProjectTasks(v int32) {
	o.MaxDegradedModeConcurrentLargeParserProjectTasks = &v
}

// GetMaxDegradedModeParserProjectSize returns the MaxDegradedModeParserProjectSize field value if set, zero value otherwise.
func (o *ModelAPITaskLimitsConfig) GetMaxDegradedModeParserProjectSize() int32 {
	if o == nil || IsNil(o.MaxDegradedModeParserProjectSize) {
		var ret int32
		return ret
	}
	return *o.MaxDegradedModeParserProjectSize
}

// GetMaxDegradedModeParserProjectSizeOk returns a tuple with the MaxDegradedModeParserProjectSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskLimitsConfig) GetMaxDegradedModeParserProjectSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxDegradedModeParserProjectSize) {
		return nil, false
	}
	return o.MaxDegradedModeParserProjectSize, true
}

// HasMaxDegradedModeParserProjectSize returns a boolean if a field has been set.
func (o *ModelAPITaskLimitsConfig) HasMaxDegradedModeParserProjectSize() bool {
	if o != nil && !IsNil(o.MaxDegradedModeParserProjectSize) {
		return true
	}

	return false
}

// SetMaxDegradedModeParserProjectSize gets a reference to the given int32 and assigns it to the MaxDegradedModeParserProjectSize field.
func (o *ModelAPITaskLimitsConfig) SetMaxDegradedModeParserProjectSize(v int32) {
	o.MaxDegradedModeParserProjectSize = &v
}

// GetMaxExecTimeoutSecs returns the MaxExecTimeoutSecs field value if set, zero value otherwise.
func (o *ModelAPITaskLimitsConfig) GetMaxExecTimeoutSecs() int32 {
	if o == nil || IsNil(o.MaxExecTimeoutSecs) {
		var ret int32
		return ret
	}
	return *o.MaxExecTimeoutSecs
}

// GetMaxExecTimeoutSecsOk returns a tuple with the MaxExecTimeoutSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskLimitsConfig) GetMaxExecTimeoutSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxExecTimeoutSecs) {
		return nil, false
	}
	return o.MaxExecTimeoutSecs, true
}

// HasMaxExecTimeoutSecs returns a boolean if a field has been set.
func (o *ModelAPITaskLimitsConfig) HasMaxExecTimeoutSecs() bool {
	if o != nil && !IsNil(o.MaxExecTimeoutSecs) {
		return true
	}

	return false
}

// SetMaxExecTimeoutSecs gets a reference to the given int32 and assigns it to the MaxExecTimeoutSecs field.
func (o *ModelAPITaskLimitsConfig) SetMaxExecTimeoutSecs(v int32) {
	o.MaxExecTimeoutSecs = &v
}

// GetMaxGenerateTaskJsonSize returns the MaxGenerateTaskJsonSize field value if set, zero value otherwise.
func (o *ModelAPITaskLimitsConfig) GetMaxGenerateTaskJsonSize() int32 {
	if o == nil || IsNil(o.MaxGenerateTaskJsonSize) {
		var ret int32
		return ret
	}
	return *o.MaxGenerateTaskJsonSize
}

// GetMaxGenerateTaskJsonSizeOk returns a tuple with the MaxGenerateTaskJsonSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskLimitsConfig) GetMaxGenerateTaskJsonSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxGenerateTaskJsonSize) {
		return nil, false
	}
	return o.MaxGenerateTaskJsonSize, true
}

// HasMaxGenerateTaskJsonSize returns a boolean if a field has been set.
func (o *ModelAPITaskLimitsConfig) HasMaxGenerateTaskJsonSize() bool {
	if o != nil && !IsNil(o.MaxGenerateTaskJsonSize) {
		return true
	}

	return false
}

// SetMaxGenerateTaskJsonSize gets a reference to the given int32 and assigns it to the MaxGenerateTaskJsonSize field.
func (o *ModelAPITaskLimitsConfig) SetMaxGenerateTaskJsonSize(v int32) {
	o.MaxGenerateTaskJsonSize = &v
}

// GetMaxHourlyPatchTasks returns the MaxHourlyPatchTasks field value if set, zero value otherwise.
func (o *ModelAPITaskLimitsConfig) GetMaxHourlyPatchTasks() int32 {
	if o == nil || IsNil(o.MaxHourlyPatchTasks) {
		var ret int32
		return ret
	}
	return *o.MaxHourlyPatchTasks
}

// GetMaxHourlyPatchTasksOk returns a tuple with the MaxHourlyPatchTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskLimitsConfig) GetMaxHourlyPatchTasksOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxHourlyPatchTasks) {
		return nil, false
	}
	return o.MaxHourlyPatchTasks, true
}

// HasMaxHourlyPatchTasks returns a boolean if a field has been set.
func (o *ModelAPITaskLimitsConfig) HasMaxHourlyPatchTasks() bool {
	if o != nil && !IsNil(o.MaxHourlyPatchTasks) {
		return true
	}

	return false
}

// SetMaxHourlyPatchTasks gets a reference to the given int32 and assigns it to the MaxHourlyPatchTasks field.
func (o *ModelAPITaskLimitsConfig) SetMaxHourlyPatchTasks(v int32) {
	o.MaxHourlyPatchTasks = &v
}

// GetMaxIncludesPerVersion returns the MaxIncludesPerVersion field value if set, zero value otherwise.
func (o *ModelAPITaskLimitsConfig) GetMaxIncludesPerVersion() int32 {
	if o == nil || IsNil(o.MaxIncludesPerVersion) {
		var ret int32
		return ret
	}
	return *o.MaxIncludesPerVersion
}

// GetMaxIncludesPerVersionOk returns a tuple with the MaxIncludesPerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskLimitsConfig) GetMaxIncludesPerVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxIncludesPerVersion) {
		return nil, false
	}
	return o.MaxIncludesPerVersion, true
}

// HasMaxIncludesPerVersion returns a boolean if a field has been set.
func (o *ModelAPITaskLimitsConfig) HasMaxIncludesPerVersion() bool {
	if o != nil && !IsNil(o.MaxIncludesPerVersion) {
		return true
	}

	return false
}

// SetMaxIncludesPerVersion gets a reference to the given int32 and assigns it to the MaxIncludesPerVersion field.
func (o *ModelAPITaskLimitsConfig) SetMaxIncludesPerVersion(v int32) {
	o.MaxIncludesPerVersion = &v
}

// GetMaxParserProjectSize returns the MaxParserProjectSize field value if set, zero value otherwise.
func (o *ModelAPITaskLimitsConfig) GetMaxParserProjectSize() int32 {
	if o == nil || IsNil(o.MaxParserProjectSize) {
		var ret int32
		return ret
	}
	return *o.MaxParserProjectSize
}

// GetMaxParserProjectSizeOk returns a tuple with the MaxParserProjectSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskLimitsConfig) GetMaxParserProjectSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxParserProjectSize) {
		return nil, false
	}
	return o.MaxParserProjectSize, true
}

// HasMaxParserProjectSize returns a boolean if a field has been set.
func (o *ModelAPITaskLimitsConfig) HasMaxParserProjectSize() bool {
	if o != nil && !IsNil(o.MaxParserProjectSize) {
		return true
	}

	return false
}

// SetMaxParserProjectSize gets a reference to the given int32 and assigns it to the MaxParserProjectSize field.
func (o *ModelAPITaskLimitsConfig) SetMaxParserProjectSize(v int32) {
	o.MaxParserProjectSize = &v
}

// GetMaxPendingGeneratedTasks returns the MaxPendingGeneratedTasks field value if set, zero value otherwise.
func (o *ModelAPITaskLimitsConfig) GetMaxPendingGeneratedTasks() int32 {
	if o == nil || IsNil(o.MaxPendingGeneratedTasks) {
		var ret int32
		return ret
	}
	return *o.MaxPendingGeneratedTasks
}

// GetMaxPendingGeneratedTasksOk returns a tuple with the MaxPendingGeneratedTasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskLimitsConfig) GetMaxPendingGeneratedTasksOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxPendingGeneratedTasks) {
		return nil, false
	}
	return o.MaxPendingGeneratedTasks, true
}

// HasMaxPendingGeneratedTasks returns a boolean if a field has been set.
func (o *ModelAPITaskLimitsConfig) HasMaxPendingGeneratedTasks() bool {
	if o != nil && !IsNil(o.MaxPendingGeneratedTasks) {
		return true
	}

	return false
}

// SetMaxPendingGeneratedTasks gets a reference to the given int32 and assigns it to the MaxPendingGeneratedTasks field.
func (o *ModelAPITaskLimitsConfig) SetMaxPendingGeneratedTasks(v int32) {
	o.MaxPendingGeneratedTasks = &v
}

// GetMaxTaskExecution returns the MaxTaskExecution field value if set, zero value otherwise.
func (o *ModelAPITaskLimitsConfig) GetMaxTaskExecution() int32 {
	if o == nil || IsNil(o.MaxTaskExecution) {
		var ret int32
		return ret
	}
	return *o.MaxTaskExecution
}

// GetMaxTaskExecutionOk returns a tuple with the MaxTaskExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskLimitsConfig) GetMaxTaskExecutionOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTaskExecution) {
		return nil, false
	}
	return o.MaxTaskExecution, true
}

// HasMaxTaskExecution returns a boolean if a field has been set.
func (o *ModelAPITaskLimitsConfig) HasMaxTaskExecution() bool {
	if o != nil && !IsNil(o.MaxTaskExecution) {
		return true
	}

	return false
}

// SetMaxTaskExecution gets a reference to the given int32 and assigns it to the MaxTaskExecution field.
func (o *ModelAPITaskLimitsConfig) SetMaxTaskExecution(v int32) {
	o.MaxTaskExecution = &v
}

// GetMaxTasksPerVersion returns the MaxTasksPerVersion field value if set, zero value otherwise.
func (o *ModelAPITaskLimitsConfig) GetMaxTasksPerVersion() int32 {
	if o == nil || IsNil(o.MaxTasksPerVersion) {
		var ret int32
		return ret
	}
	return *o.MaxTasksPerVersion
}

// GetMaxTasksPerVersionOk returns a tuple with the MaxTasksPerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskLimitsConfig) GetMaxTasksPerVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTasksPerVersion) {
		return nil, false
	}
	return o.MaxTasksPerVersion, true
}

// HasMaxTasksPerVersion returns a boolean if a field has been set.
func (o *ModelAPITaskLimitsConfig) HasMaxTasksPerVersion() bool {
	if o != nil && !IsNil(o.MaxTasksPerVersion) {
		return true
	}

	return false
}

// SetMaxTasksPerVersion gets a reference to the given int32 and assigns it to the MaxTasksPerVersion field.
func (o *ModelAPITaskLimitsConfig) SetMaxTasksPerVersion(v int32) {
	o.MaxTasksPerVersion = &v
}

func (o ModelAPITaskLimitsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPITaskLimitsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxConcurrentLargeParserProjectTasks) {
		toSerialize["max_concurrent_large_parser_project_tasks"] = o.MaxConcurrentLargeParserProjectTasks
	}
	if !IsNil(o.MaxDailyAutomaticRestarts) {
		toSerialize["max_daily_automatic_restarts"] = o.MaxDailyAutomaticRestarts
	}
	if !IsNil(o.MaxDegradedModeConcurrentLargeParserProjectTasks) {
		toSerialize["max_degraded_mode_concurrent_large_parser_project_tasks"] = o.MaxDegradedModeConcurrentLargeParserProjectTasks
	}
	if !IsNil(o.MaxDegradedModeParserProjectSize) {
		toSerialize["max_degraded_mode_parser_project_size"] = o.MaxDegradedModeParserProjectSize
	}
	if !IsNil(o.MaxExecTimeoutSecs) {
		toSerialize["max_exec_timeout_secs"] = o.MaxExecTimeoutSecs
	}
	if !IsNil(o.MaxGenerateTaskJsonSize) {
		toSerialize["max_generate_task_json_size"] = o.MaxGenerateTaskJsonSize
	}
	if !IsNil(o.MaxHourlyPatchTasks) {
		toSerialize["max_hourly_patch_tasks"] = o.MaxHourlyPatchTasks
	}
	if !IsNil(o.MaxIncludesPerVersion) {
		toSerialize["max_includes_per_version"] = o.MaxIncludesPerVersion
	}
	if !IsNil(o.MaxParserProjectSize) {
		toSerialize["max_parser_project_size"] = o.MaxParserProjectSize
	}
	if !IsNil(o.MaxPendingGeneratedTasks) {
		toSerialize["max_pending_generated_tasks"] = o.MaxPendingGeneratedTasks
	}
	if !IsNil(o.MaxTaskExecution) {
		toSerialize["max_task_execution"] = o.MaxTaskExecution
	}
	if !IsNil(o.MaxTasksPerVersion) {
		toSerialize["max_tasks_per_version"] = o.MaxTasksPerVersion
	}
	return toSerialize, nil
}

type NullableModelAPITaskLimitsConfig struct {
	value *ModelAPITaskLimitsConfig
	isSet bool
}

func (v NullableModelAPITaskLimitsConfig) Get() *ModelAPITaskLimitsConfig {
	return v.value
}

func (v *NullableModelAPITaskLimitsConfig) Set(val *ModelAPITaskLimitsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPITaskLimitsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPITaskLimitsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPITaskLimitsConfig(val *ModelAPITaskLimitsConfig) *NullableModelAPITaskLimitsConfig {
	return &NullableModelAPITaskLimitsConfig{value: val, isSet: true}
}

func (v NullableModelAPITaskLimitsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPITaskLimitsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


