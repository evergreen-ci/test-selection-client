/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIParsleySettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIParsleySettings{}

// ModelAPIParsleySettings struct for ModelAPIParsleySettings
type ModelAPIParsleySettings struct {
	// JumpToFailingLineEnabled describes whether to automatically scroll to the failing log line on initial page load.
	JumpToFailingLineEnabled *bool `json:"jump_to_failing_line_enabled,omitempty"`
	// SectionsEnabled describes whether to render task logs with sections.
	SectionsEnabled *bool `json:"sections_enabled,omitempty"`
}

// NewModelAPIParsleySettings instantiates a new ModelAPIParsleySettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIParsleySettings() *ModelAPIParsleySettings {
	this := ModelAPIParsleySettings{}
	return &this
}

// NewModelAPIParsleySettingsWithDefaults instantiates a new ModelAPIParsleySettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIParsleySettingsWithDefaults() *ModelAPIParsleySettings {
	this := ModelAPIParsleySettings{}
	return &this
}

// GetJumpToFailingLineEnabled returns the JumpToFailingLineEnabled field value if set, zero value otherwise.
func (o *ModelAPIParsleySettings) GetJumpToFailingLineEnabled() bool {
	if o == nil || IsNil(o.JumpToFailingLineEnabled) {
		var ret bool
		return ret
	}
	return *o.JumpToFailingLineEnabled
}

// GetJumpToFailingLineEnabledOk returns a tuple with the JumpToFailingLineEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIParsleySettings) GetJumpToFailingLineEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.JumpToFailingLineEnabled) {
		return nil, false
	}
	return o.JumpToFailingLineEnabled, true
}

// HasJumpToFailingLineEnabled returns a boolean if a field has been set.
func (o *ModelAPIParsleySettings) HasJumpToFailingLineEnabled() bool {
	if o != nil && !IsNil(o.JumpToFailingLineEnabled) {
		return true
	}

	return false
}

// SetJumpToFailingLineEnabled gets a reference to the given bool and assigns it to the JumpToFailingLineEnabled field.
func (o *ModelAPIParsleySettings) SetJumpToFailingLineEnabled(v bool) {
	o.JumpToFailingLineEnabled = &v
}

// GetSectionsEnabled returns the SectionsEnabled field value if set, zero value otherwise.
func (o *ModelAPIParsleySettings) GetSectionsEnabled() bool {
	if o == nil || IsNil(o.SectionsEnabled) {
		var ret bool
		return ret
	}
	return *o.SectionsEnabled
}

// GetSectionsEnabledOk returns a tuple with the SectionsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIParsleySettings) GetSectionsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SectionsEnabled) {
		return nil, false
	}
	return o.SectionsEnabled, true
}

// HasSectionsEnabled returns a boolean if a field has been set.
func (o *ModelAPIParsleySettings) HasSectionsEnabled() bool {
	if o != nil && !IsNil(o.SectionsEnabled) {
		return true
	}

	return false
}

// SetSectionsEnabled gets a reference to the given bool and assigns it to the SectionsEnabled field.
func (o *ModelAPIParsleySettings) SetSectionsEnabled(v bool) {
	o.SectionsEnabled = &v
}

func (o ModelAPIParsleySettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIParsleySettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JumpToFailingLineEnabled) {
		toSerialize["jump_to_failing_line_enabled"] = o.JumpToFailingLineEnabled
	}
	if !IsNil(o.SectionsEnabled) {
		toSerialize["sections_enabled"] = o.SectionsEnabled
	}
	return toSerialize, nil
}

type NullableModelAPIParsleySettings struct {
	value *ModelAPIParsleySettings
	isSet bool
}

func (v NullableModelAPIParsleySettings) Get() *ModelAPIParsleySettings {
	return v.value
}

func (v *NullableModelAPIParsleySettings) Set(val *ModelAPIParsleySettings) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIParsleySettings) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIParsleySettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIParsleySettings(val *ModelAPIParsleySettings) *NullableModelAPIParsleySettings {
	return &NullableModelAPIParsleySettings{value: val, isSet: true}
}

func (v NullableModelAPIParsleySettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIParsleySettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


