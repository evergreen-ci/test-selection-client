/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIGitTag type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIGitTag{}

// ModelAPIGitTag struct for ModelAPIGitTag
type ModelAPIGitTag struct {
	Pusher *string `json:"pusher,omitempty"`
	Tag *string `json:"tag,omitempty"`
}

// NewModelAPIGitTag instantiates a new ModelAPIGitTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIGitTag() *ModelAPIGitTag {
	this := ModelAPIGitTag{}
	return &this
}

// NewModelAPIGitTagWithDefaults instantiates a new ModelAPIGitTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIGitTagWithDefaults() *ModelAPIGitTag {
	this := ModelAPIGitTag{}
	return &this
}

// GetPusher returns the Pusher field value if set, zero value otherwise.
func (o *ModelAPIGitTag) GetPusher() string {
	if o == nil || IsNil(o.Pusher) {
		var ret string
		return ret
	}
	return *o.Pusher
}

// GetPusherOk returns a tuple with the Pusher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIGitTag) GetPusherOk() (*string, bool) {
	if o == nil || IsNil(o.Pusher) {
		return nil, false
	}
	return o.Pusher, true
}

// HasPusher returns a boolean if a field has been set.
func (o *ModelAPIGitTag) HasPusher() bool {
	if o != nil && !IsNil(o.Pusher) {
		return true
	}

	return false
}

// SetPusher gets a reference to the given string and assigns it to the Pusher field.
func (o *ModelAPIGitTag) SetPusher(v string) {
	o.Pusher = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *ModelAPIGitTag) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIGitTag) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *ModelAPIGitTag) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *ModelAPIGitTag) SetTag(v string) {
	o.Tag = &v
}

func (o ModelAPIGitTag) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIGitTag) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pusher) {
		toSerialize["pusher"] = o.Pusher
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	return toSerialize, nil
}

type NullableModelAPIGitTag struct {
	value *ModelAPIGitTag
	isSet bool
}

func (v NullableModelAPIGitTag) Get() *ModelAPIGitTag {
	return v.value
}

func (v *NullableModelAPIGitTag) Set(val *ModelAPIGitTag) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIGitTag) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIGitTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIGitTag(val *ModelAPIGitTag) *NullableModelAPIGitTag {
	return &NullableModelAPIGitTag{value: val, isSet: true}
}

func (v NullableModelAPIGitTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIGitTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


