/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIUserSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIUserSettings{}

// ModelAPIUserSettings struct for ModelAPIUserSettings
type ModelAPIUserSettings struct {
	DateFormat *string `json:"date_format,omitempty"`
	GithubUser *ModelAPIGithubUser `json:"github_user,omitempty"`
	Notifications *ModelAPINotificationPreferences `json:"notifications,omitempty"`
	Region *string `json:"region,omitempty"`
	SlackMemberId *string `json:"slack_member_id,omitempty"`
	SlackUsername *string `json:"slack_username,omitempty"`
	SpruceFeedback *ModelAPIFeedbackSubmission `json:"spruce_feedback,omitempty"`
	TimeFormat *string `json:"time_format,omitempty"`
	Timezone *string `json:"timezone,omitempty"`
	UseSpruceOptions *ModelAPIUseSpruceOptions `json:"use_spruce_options,omitempty"`
}

// NewModelAPIUserSettings instantiates a new ModelAPIUserSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIUserSettings() *ModelAPIUserSettings {
	this := ModelAPIUserSettings{}
	return &this
}

// NewModelAPIUserSettingsWithDefaults instantiates a new ModelAPIUserSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIUserSettingsWithDefaults() *ModelAPIUserSettings {
	this := ModelAPIUserSettings{}
	return &this
}

// GetDateFormat returns the DateFormat field value if set, zero value otherwise.
func (o *ModelAPIUserSettings) GetDateFormat() string {
	if o == nil || IsNil(o.DateFormat) {
		var ret string
		return ret
	}
	return *o.DateFormat
}

// GetDateFormatOk returns a tuple with the DateFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIUserSettings) GetDateFormatOk() (*string, bool) {
	if o == nil || IsNil(o.DateFormat) {
		return nil, false
	}
	return o.DateFormat, true
}

// HasDateFormat returns a boolean if a field has been set.
func (o *ModelAPIUserSettings) HasDateFormat() bool {
	if o != nil && !IsNil(o.DateFormat) {
		return true
	}

	return false
}

// SetDateFormat gets a reference to the given string and assigns it to the DateFormat field.
func (o *ModelAPIUserSettings) SetDateFormat(v string) {
	o.DateFormat = &v
}

// GetGithubUser returns the GithubUser field value if set, zero value otherwise.
func (o *ModelAPIUserSettings) GetGithubUser() ModelAPIGithubUser {
	if o == nil || IsNil(o.GithubUser) {
		var ret ModelAPIGithubUser
		return ret
	}
	return *o.GithubUser
}

// GetGithubUserOk returns a tuple with the GithubUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIUserSettings) GetGithubUserOk() (*ModelAPIGithubUser, bool) {
	if o == nil || IsNil(o.GithubUser) {
		return nil, false
	}
	return o.GithubUser, true
}

// HasGithubUser returns a boolean if a field has been set.
func (o *ModelAPIUserSettings) HasGithubUser() bool {
	if o != nil && !IsNil(o.GithubUser) {
		return true
	}

	return false
}

// SetGithubUser gets a reference to the given ModelAPIGithubUser and assigns it to the GithubUser field.
func (o *ModelAPIUserSettings) SetGithubUser(v ModelAPIGithubUser) {
	o.GithubUser = &v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *ModelAPIUserSettings) GetNotifications() ModelAPINotificationPreferences {
	if o == nil || IsNil(o.Notifications) {
		var ret ModelAPINotificationPreferences
		return ret
	}
	return *o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIUserSettings) GetNotificationsOk() (*ModelAPINotificationPreferences, bool) {
	if o == nil || IsNil(o.Notifications) {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *ModelAPIUserSettings) HasNotifications() bool {
	if o != nil && !IsNil(o.Notifications) {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given ModelAPINotificationPreferences and assigns it to the Notifications field.
func (o *ModelAPIUserSettings) SetNotifications(v ModelAPINotificationPreferences) {
	o.Notifications = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ModelAPIUserSettings) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIUserSettings) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ModelAPIUserSettings) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ModelAPIUserSettings) SetRegion(v string) {
	o.Region = &v
}

// GetSlackMemberId returns the SlackMemberId field value if set, zero value otherwise.
func (o *ModelAPIUserSettings) GetSlackMemberId() string {
	if o == nil || IsNil(o.SlackMemberId) {
		var ret string
		return ret
	}
	return *o.SlackMemberId
}

// GetSlackMemberIdOk returns a tuple with the SlackMemberId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIUserSettings) GetSlackMemberIdOk() (*string, bool) {
	if o == nil || IsNil(o.SlackMemberId) {
		return nil, false
	}
	return o.SlackMemberId, true
}

// HasSlackMemberId returns a boolean if a field has been set.
func (o *ModelAPIUserSettings) HasSlackMemberId() bool {
	if o != nil && !IsNil(o.SlackMemberId) {
		return true
	}

	return false
}

// SetSlackMemberId gets a reference to the given string and assigns it to the SlackMemberId field.
func (o *ModelAPIUserSettings) SetSlackMemberId(v string) {
	o.SlackMemberId = &v
}

// GetSlackUsername returns the SlackUsername field value if set, zero value otherwise.
func (o *ModelAPIUserSettings) GetSlackUsername() string {
	if o == nil || IsNil(o.SlackUsername) {
		var ret string
		return ret
	}
	return *o.SlackUsername
}

// GetSlackUsernameOk returns a tuple with the SlackUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIUserSettings) GetSlackUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.SlackUsername) {
		return nil, false
	}
	return o.SlackUsername, true
}

// HasSlackUsername returns a boolean if a field has been set.
func (o *ModelAPIUserSettings) HasSlackUsername() bool {
	if o != nil && !IsNil(o.SlackUsername) {
		return true
	}

	return false
}

// SetSlackUsername gets a reference to the given string and assigns it to the SlackUsername field.
func (o *ModelAPIUserSettings) SetSlackUsername(v string) {
	o.SlackUsername = &v
}

// GetSpruceFeedback returns the SpruceFeedback field value if set, zero value otherwise.
func (o *ModelAPIUserSettings) GetSpruceFeedback() ModelAPIFeedbackSubmission {
	if o == nil || IsNil(o.SpruceFeedback) {
		var ret ModelAPIFeedbackSubmission
		return ret
	}
	return *o.SpruceFeedback
}

// GetSpruceFeedbackOk returns a tuple with the SpruceFeedback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIUserSettings) GetSpruceFeedbackOk() (*ModelAPIFeedbackSubmission, bool) {
	if o == nil || IsNil(o.SpruceFeedback) {
		return nil, false
	}
	return o.SpruceFeedback, true
}

// HasSpruceFeedback returns a boolean if a field has been set.
func (o *ModelAPIUserSettings) HasSpruceFeedback() bool {
	if o != nil && !IsNil(o.SpruceFeedback) {
		return true
	}

	return false
}

// SetSpruceFeedback gets a reference to the given ModelAPIFeedbackSubmission and assigns it to the SpruceFeedback field.
func (o *ModelAPIUserSettings) SetSpruceFeedback(v ModelAPIFeedbackSubmission) {
	o.SpruceFeedback = &v
}

// GetTimeFormat returns the TimeFormat field value if set, zero value otherwise.
func (o *ModelAPIUserSettings) GetTimeFormat() string {
	if o == nil || IsNil(o.TimeFormat) {
		var ret string
		return ret
	}
	return *o.TimeFormat
}

// GetTimeFormatOk returns a tuple with the TimeFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIUserSettings) GetTimeFormatOk() (*string, bool) {
	if o == nil || IsNil(o.TimeFormat) {
		return nil, false
	}
	return o.TimeFormat, true
}

// HasTimeFormat returns a boolean if a field has been set.
func (o *ModelAPIUserSettings) HasTimeFormat() bool {
	if o != nil && !IsNil(o.TimeFormat) {
		return true
	}

	return false
}

// SetTimeFormat gets a reference to the given string and assigns it to the TimeFormat field.
func (o *ModelAPIUserSettings) SetTimeFormat(v string) {
	o.TimeFormat = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *ModelAPIUserSettings) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIUserSettings) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *ModelAPIUserSettings) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *ModelAPIUserSettings) SetTimezone(v string) {
	o.Timezone = &v
}

// GetUseSpruceOptions returns the UseSpruceOptions field value if set, zero value otherwise.
func (o *ModelAPIUserSettings) GetUseSpruceOptions() ModelAPIUseSpruceOptions {
	if o == nil || IsNil(o.UseSpruceOptions) {
		var ret ModelAPIUseSpruceOptions
		return ret
	}
	return *o.UseSpruceOptions
}

// GetUseSpruceOptionsOk returns a tuple with the UseSpruceOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIUserSettings) GetUseSpruceOptionsOk() (*ModelAPIUseSpruceOptions, bool) {
	if o == nil || IsNil(o.UseSpruceOptions) {
		return nil, false
	}
	return o.UseSpruceOptions, true
}

// HasUseSpruceOptions returns a boolean if a field has been set.
func (o *ModelAPIUserSettings) HasUseSpruceOptions() bool {
	if o != nil && !IsNil(o.UseSpruceOptions) {
		return true
	}

	return false
}

// SetUseSpruceOptions gets a reference to the given ModelAPIUseSpruceOptions and assigns it to the UseSpruceOptions field.
func (o *ModelAPIUserSettings) SetUseSpruceOptions(v ModelAPIUseSpruceOptions) {
	o.UseSpruceOptions = &v
}

func (o ModelAPIUserSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIUserSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DateFormat) {
		toSerialize["date_format"] = o.DateFormat
	}
	if !IsNil(o.GithubUser) {
		toSerialize["github_user"] = o.GithubUser
	}
	if !IsNil(o.Notifications) {
		toSerialize["notifications"] = o.Notifications
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.SlackMemberId) {
		toSerialize["slack_member_id"] = o.SlackMemberId
	}
	if !IsNil(o.SlackUsername) {
		toSerialize["slack_username"] = o.SlackUsername
	}
	if !IsNil(o.SpruceFeedback) {
		toSerialize["spruce_feedback"] = o.SpruceFeedback
	}
	if !IsNil(o.TimeFormat) {
		toSerialize["time_format"] = o.TimeFormat
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.UseSpruceOptions) {
		toSerialize["use_spruce_options"] = o.UseSpruceOptions
	}
	return toSerialize, nil
}

type NullableModelAPIUserSettings struct {
	value *ModelAPIUserSettings
	isSet bool
}

func (v NullableModelAPIUserSettings) Get() *ModelAPIUserSettings {
	return v.value
}

func (v *NullableModelAPIUserSettings) Set(val *ModelAPIUserSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIUserSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIUserSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIUserSettings(val *ModelAPIUserSettings) *NullableModelAPIUserSettings {
	return &NullableModelAPIUserSettings{value: val, isSet: true}
}

func (v NullableModelAPIUserSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIUserSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


