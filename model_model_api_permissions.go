/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIPermissions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIPermissions{}

// ModelAPIPermissions struct for ModelAPIPermissions
type ModelAPIPermissions struct {
	DistroPermissions []ModelAPIPermission `json:"distroPermissions,omitempty"`
	ProjectPermissions []ModelAPIPermission `json:"projectPermissions,omitempty"`
}

// NewModelAPIPermissions instantiates a new ModelAPIPermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIPermissions() *ModelAPIPermissions {
	this := ModelAPIPermissions{}
	return &this
}

// NewModelAPIPermissionsWithDefaults instantiates a new ModelAPIPermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIPermissionsWithDefaults() *ModelAPIPermissions {
	this := ModelAPIPermissions{}
	return &this
}

// GetDistroPermissions returns the DistroPermissions field value if set, zero value otherwise.
func (o *ModelAPIPermissions) GetDistroPermissions() []ModelAPIPermission {
	if o == nil || IsNil(o.DistroPermissions) {
		var ret []ModelAPIPermission
		return ret
	}
	return o.DistroPermissions
}

// GetDistroPermissionsOk returns a tuple with the DistroPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPermissions) GetDistroPermissionsOk() ([]ModelAPIPermission, bool) {
	if o == nil || IsNil(o.DistroPermissions) {
		return nil, false
	}
	return o.DistroPermissions, true
}

// HasDistroPermissions returns a boolean if a field has been set.
func (o *ModelAPIPermissions) HasDistroPermissions() bool {
	if o != nil && !IsNil(o.DistroPermissions) {
		return true
	}

	return false
}

// SetDistroPermissions gets a reference to the given []ModelAPIPermission and assigns it to the DistroPermissions field.
func (o *ModelAPIPermissions) SetDistroPermissions(v []ModelAPIPermission) {
	o.DistroPermissions = v
}

// GetProjectPermissions returns the ProjectPermissions field value if set, zero value otherwise.
func (o *ModelAPIPermissions) GetProjectPermissions() []ModelAPIPermission {
	if o == nil || IsNil(o.ProjectPermissions) {
		var ret []ModelAPIPermission
		return ret
	}
	return o.ProjectPermissions
}

// GetProjectPermissionsOk returns a tuple with the ProjectPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIPermissions) GetProjectPermissionsOk() ([]ModelAPIPermission, bool) {
	if o == nil || IsNil(o.ProjectPermissions) {
		return nil, false
	}
	return o.ProjectPermissions, true
}

// HasProjectPermissions returns a boolean if a field has been set.
func (o *ModelAPIPermissions) HasProjectPermissions() bool {
	if o != nil && !IsNil(o.ProjectPermissions) {
		return true
	}

	return false
}

// SetProjectPermissions gets a reference to the given []ModelAPIPermission and assigns it to the ProjectPermissions field.
func (o *ModelAPIPermissions) SetProjectPermissions(v []ModelAPIPermission) {
	o.ProjectPermissions = v
}

func (o ModelAPIPermissions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIPermissions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DistroPermissions) {
		toSerialize["distroPermissions"] = o.DistroPermissions
	}
	if !IsNil(o.ProjectPermissions) {
		toSerialize["projectPermissions"] = o.ProjectPermissions
	}
	return toSerialize, nil
}

type NullableModelAPIPermissions struct {
	value *ModelAPIPermissions
	isSet bool
}

func (v NullableModelAPIPermissions) Get() *ModelAPIPermissions {
	return v.value
}

func (v *NullableModelAPIPermissions) Set(val *ModelAPIPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIPermissions(val *ModelAPIPermissions) *NullableModelAPIPermissions {
	return &NullableModelAPIPermissions{value: val, isSet: true}
}

func (v NullableModelAPIPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


