/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelBuildDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelBuildDetail{}

// ModelBuildDetail struct for ModelBuildDetail
type ModelBuildDetail struct {
	BuildId *string `json:"build_id,omitempty"`
	BuildVariant *string `json:"build_variant,omitempty"`
}

// NewModelBuildDetail instantiates a new ModelBuildDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelBuildDetail() *ModelBuildDetail {
	this := ModelBuildDetail{}
	return &this
}

// NewModelBuildDetailWithDefaults instantiates a new ModelBuildDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelBuildDetailWithDefaults() *ModelBuildDetail {
	this := ModelBuildDetail{}
	return &this
}

// GetBuildId returns the BuildId field value if set, zero value otherwise.
func (o *ModelBuildDetail) GetBuildId() string {
	if o == nil || IsNil(o.BuildId) {
		var ret string
		return ret
	}
	return *o.BuildId
}

// GetBuildIdOk returns a tuple with the BuildId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBuildDetail) GetBuildIdOk() (*string, bool) {
	if o == nil || IsNil(o.BuildId) {
		return nil, false
	}
	return o.BuildId, true
}

// HasBuildId returns a boolean if a field has been set.
func (o *ModelBuildDetail) HasBuildId() bool {
	if o != nil && !IsNil(o.BuildId) {
		return true
	}

	return false
}

// SetBuildId gets a reference to the given string and assigns it to the BuildId field.
func (o *ModelBuildDetail) SetBuildId(v string) {
	o.BuildId = &v
}

// GetBuildVariant returns the BuildVariant field value if set, zero value otherwise.
func (o *ModelBuildDetail) GetBuildVariant() string {
	if o == nil || IsNil(o.BuildVariant) {
		var ret string
		return ret
	}
	return *o.BuildVariant
}

// GetBuildVariantOk returns a tuple with the BuildVariant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelBuildDetail) GetBuildVariantOk() (*string, bool) {
	if o == nil || IsNil(o.BuildVariant) {
		return nil, false
	}
	return o.BuildVariant, true
}

// HasBuildVariant returns a boolean if a field has been set.
func (o *ModelBuildDetail) HasBuildVariant() bool {
	if o != nil && !IsNil(o.BuildVariant) {
		return true
	}

	return false
}

// SetBuildVariant gets a reference to the given string and assigns it to the BuildVariant field.
func (o *ModelBuildDetail) SetBuildVariant(v string) {
	o.BuildVariant = &v
}

func (o ModelBuildDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelBuildDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuildId) {
		toSerialize["build_id"] = o.BuildId
	}
	if !IsNil(o.BuildVariant) {
		toSerialize["build_variant"] = o.BuildVariant
	}
	return toSerialize, nil
}

type NullableModelBuildDetail struct {
	value *ModelBuildDetail
	isSet bool
}

func (v NullableModelBuildDetail) Get() *ModelBuildDetail {
	return v.value
}

func (v *NullableModelBuildDetail) Set(val *ModelBuildDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableModelBuildDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableModelBuildDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelBuildDetail(val *ModelBuildDetail) *NullableModelBuildDetail {
	return &NullableModelBuildDetail{value: val, isSet: true}
}

func (v NullableModelBuildDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelBuildDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


