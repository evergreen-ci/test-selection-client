/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIQuestionAnswer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIQuestionAnswer{}

// ModelAPIQuestionAnswer struct for ModelAPIQuestionAnswer
type ModelAPIQuestionAnswer struct {
	Answer *string `json:"answer,omitempty"`
	Id *string `json:"id,omitempty"`
	Prompt *string `json:"prompt,omitempty"`
}

// NewModelAPIQuestionAnswer instantiates a new ModelAPIQuestionAnswer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIQuestionAnswer() *ModelAPIQuestionAnswer {
	this := ModelAPIQuestionAnswer{}
	return &this
}

// NewModelAPIQuestionAnswerWithDefaults instantiates a new ModelAPIQuestionAnswer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIQuestionAnswerWithDefaults() *ModelAPIQuestionAnswer {
	this := ModelAPIQuestionAnswer{}
	return &this
}

// GetAnswer returns the Answer field value if set, zero value otherwise.
func (o *ModelAPIQuestionAnswer) GetAnswer() string {
	if o == nil || IsNil(o.Answer) {
		var ret string
		return ret
	}
	return *o.Answer
}

// GetAnswerOk returns a tuple with the Answer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIQuestionAnswer) GetAnswerOk() (*string, bool) {
	if o == nil || IsNil(o.Answer) {
		return nil, false
	}
	return o.Answer, true
}

// HasAnswer returns a boolean if a field has been set.
func (o *ModelAPIQuestionAnswer) HasAnswer() bool {
	if o != nil && !IsNil(o.Answer) {
		return true
	}

	return false
}

// SetAnswer gets a reference to the given string and assigns it to the Answer field.
func (o *ModelAPIQuestionAnswer) SetAnswer(v string) {
	o.Answer = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelAPIQuestionAnswer) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIQuestionAnswer) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelAPIQuestionAnswer) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelAPIQuestionAnswer) SetId(v string) {
	o.Id = &v
}

// GetPrompt returns the Prompt field value if set, zero value otherwise.
func (o *ModelAPIQuestionAnswer) GetPrompt() string {
	if o == nil || IsNil(o.Prompt) {
		var ret string
		return ret
	}
	return *o.Prompt
}

// GetPromptOk returns a tuple with the Prompt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIQuestionAnswer) GetPromptOk() (*string, bool) {
	if o == nil || IsNil(o.Prompt) {
		return nil, false
	}
	return o.Prompt, true
}

// HasPrompt returns a boolean if a field has been set.
func (o *ModelAPIQuestionAnswer) HasPrompt() bool {
	if o != nil && !IsNil(o.Prompt) {
		return true
	}

	return false
}

// SetPrompt gets a reference to the given string and assigns it to the Prompt field.
func (o *ModelAPIQuestionAnswer) SetPrompt(v string) {
	o.Prompt = &v
}

func (o ModelAPIQuestionAnswer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIQuestionAnswer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Answer) {
		toSerialize["answer"] = o.Answer
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Prompt) {
		toSerialize["prompt"] = o.Prompt
	}
	return toSerialize, nil
}

type NullableModelAPIQuestionAnswer struct {
	value *ModelAPIQuestionAnswer
	isSet bool
}

func (v NullableModelAPIQuestionAnswer) Get() *ModelAPIQuestionAnswer {
	return v.value
}

func (v *NullableModelAPIQuestionAnswer) Set(val *ModelAPIQuestionAnswer) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIQuestionAnswer) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIQuestionAnswer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIQuestionAnswer(val *ModelAPIQuestionAnswer) *NullableModelAPIQuestionAnswer {
	return &NullableModelAPIQuestionAnswer{value: val, isSet: true}
}

func (v NullableModelAPIQuestionAnswer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIQuestionAnswer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


