/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIVersion{}

// ModelAPIVersion struct for ModelAPIVersion
type ModelAPIVersion struct {
	Aborted *bool `json:"aborted,omitempty"`
	// Will be null for versions created before this field was added.
	Activated *bool `json:"activated,omitempty"`
	// Author of the version
	Author *string `json:"author,omitempty"`
	// Email of the author of the version
	AuthorEmail *string `json:"author_email,omitempty"`
	// The version control branch where the commit was made
	Branch *string `json:"branch,omitempty"`
	// List of documents of the associated build variant and the build id
	BuildVariantsStatus []ModelBuildDetail `json:"build_variants_status,omitempty"`
	Builds []ModelAPIBuild `json:"builds,omitempty"`
	// Time that the version was first created
	CreateTime *string `json:"create_time,omitempty"`
	Errors []string `json:"errors,omitempty"`
	// Time at which tasks associated with this version finished running
	FinishTime *string `json:"finish_time,omitempty"`
	// Git tags that were pushed to this version.
	GitTags []ModelAPIGitTag `json:"git_tags,omitempty"`
	// Indicates if the version was ignored due to only making changes to ignored files.
	Ignored *bool `json:"ignored,omitempty"`
	// Message left with the commit
	Message *string `json:"message,omitempty"`
	Order *int32 `json:"order,omitempty"`
	Parameters []ModelAPIParameter `json:"parameters,omitempty"`
	Project *string `json:"project,omitempty"`
	ProjectIdentifier *string `json:"project_identifier,omitempty"`
	// The github repository where the commit was made
	Repo *string `json:"repo,omitempty"`
	// Version created by one of \"patch_request\", \"github_pull_request\", \"gitter_request\" (caused by git commit, aka the repotracker requester), \"trigger_request\" (Project Trigger versions) , \"github_merge_request\" (GitHub merge queue), \"ad_hoc\" (periodic builds)
	Requester *string `json:"requester,omitempty"`
	// The version control identifier
	Revision *string `json:"revision,omitempty"`
	// Time at which tasks associated with this version started running
	StartTime *string `json:"start_time,omitempty"`
	// The status of the version (possible values are \"created\", \"started\", \"success\", or \"failed\")
	Status *string `json:"status,omitempty"`
	// The git tag that triggered this version, if any.
	TriggeredByGitTag *ModelAPIGitTag `json:"triggered_by_git_tag,omitempty"`
	VersionId *string `json:"version_id,omitempty"`
}

// NewModelAPIVersion instantiates a new ModelAPIVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIVersion() *ModelAPIVersion {
	this := ModelAPIVersion{}
	return &this
}

// NewModelAPIVersionWithDefaults instantiates a new ModelAPIVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIVersionWithDefaults() *ModelAPIVersion {
	this := ModelAPIVersion{}
	return &this
}

// GetAborted returns the Aborted field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetAborted() bool {
	if o == nil || IsNil(o.Aborted) {
		var ret bool
		return ret
	}
	return *o.Aborted
}

// GetAbortedOk returns a tuple with the Aborted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetAbortedOk() (*bool, bool) {
	if o == nil || IsNil(o.Aborted) {
		return nil, false
	}
	return o.Aborted, true
}

// HasAborted returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasAborted() bool {
	if o != nil && !IsNil(o.Aborted) {
		return true
	}

	return false
}

// SetAborted gets a reference to the given bool and assigns it to the Aborted field.
func (o *ModelAPIVersion) SetAborted(v bool) {
	o.Aborted = &v
}

// GetActivated returns the Activated field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetActivated() bool {
	if o == nil || IsNil(o.Activated) {
		var ret bool
		return ret
	}
	return *o.Activated
}

// GetActivatedOk returns a tuple with the Activated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetActivatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Activated) {
		return nil, false
	}
	return o.Activated, true
}

// HasActivated returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasActivated() bool {
	if o != nil && !IsNil(o.Activated) {
		return true
	}

	return false
}

// SetActivated gets a reference to the given bool and assigns it to the Activated field.
func (o *ModelAPIVersion) SetActivated(v bool) {
	o.Activated = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetAuthor() string {
	if o == nil || IsNil(o.Author) {
		var ret string
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetAuthorOk() (*string, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given string and assigns it to the Author field.
func (o *ModelAPIVersion) SetAuthor(v string) {
	o.Author = &v
}

// GetAuthorEmail returns the AuthorEmail field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetAuthorEmail() string {
	if o == nil || IsNil(o.AuthorEmail) {
		var ret string
		return ret
	}
	return *o.AuthorEmail
}

// GetAuthorEmailOk returns a tuple with the AuthorEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetAuthorEmailOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorEmail) {
		return nil, false
	}
	return o.AuthorEmail, true
}

// HasAuthorEmail returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasAuthorEmail() bool {
	if o != nil && !IsNil(o.AuthorEmail) {
		return true
	}

	return false
}

// SetAuthorEmail gets a reference to the given string and assigns it to the AuthorEmail field.
func (o *ModelAPIVersion) SetAuthorEmail(v string) {
	o.AuthorEmail = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetBranch() string {
	if o == nil || IsNil(o.Branch) {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetBranchOk() (*string, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *ModelAPIVersion) SetBranch(v string) {
	o.Branch = &v
}

// GetBuildVariantsStatus returns the BuildVariantsStatus field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetBuildVariantsStatus() []ModelBuildDetail {
	if o == nil || IsNil(o.BuildVariantsStatus) {
		var ret []ModelBuildDetail
		return ret
	}
	return o.BuildVariantsStatus
}

// GetBuildVariantsStatusOk returns a tuple with the BuildVariantsStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetBuildVariantsStatusOk() ([]ModelBuildDetail, bool) {
	if o == nil || IsNil(o.BuildVariantsStatus) {
		return nil, false
	}
	return o.BuildVariantsStatus, true
}

// HasBuildVariantsStatus returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasBuildVariantsStatus() bool {
	if o != nil && !IsNil(o.BuildVariantsStatus) {
		return true
	}

	return false
}

// SetBuildVariantsStatus gets a reference to the given []ModelBuildDetail and assigns it to the BuildVariantsStatus field.
func (o *ModelAPIVersion) SetBuildVariantsStatus(v []ModelBuildDetail) {
	o.BuildVariantsStatus = v
}

// GetBuilds returns the Builds field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetBuilds() []ModelAPIBuild {
	if o == nil || IsNil(o.Builds) {
		var ret []ModelAPIBuild
		return ret
	}
	return o.Builds
}

// GetBuildsOk returns a tuple with the Builds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetBuildsOk() ([]ModelAPIBuild, bool) {
	if o == nil || IsNil(o.Builds) {
		return nil, false
	}
	return o.Builds, true
}

// HasBuilds returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasBuilds() bool {
	if o != nil && !IsNil(o.Builds) {
		return true
	}

	return false
}

// SetBuilds gets a reference to the given []ModelAPIBuild and assigns it to the Builds field.
func (o *ModelAPIVersion) SetBuilds(v []ModelAPIBuild) {
	o.Builds = v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetCreateTime() string {
	if o == nil || IsNil(o.CreateTime) {
		var ret string
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetCreateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given string and assigns it to the CreateTime field.
func (o *ModelAPIVersion) SetCreateTime(v string) {
	o.CreateTime = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetErrors() []string {
	if o == nil || IsNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *ModelAPIVersion) SetErrors(v []string) {
	o.Errors = v
}

// GetFinishTime returns the FinishTime field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetFinishTime() string {
	if o == nil || IsNil(o.FinishTime) {
		var ret string
		return ret
	}
	return *o.FinishTime
}

// GetFinishTimeOk returns a tuple with the FinishTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetFinishTimeOk() (*string, bool) {
	if o == nil || IsNil(o.FinishTime) {
		return nil, false
	}
	return o.FinishTime, true
}

// HasFinishTime returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasFinishTime() bool {
	if o != nil && !IsNil(o.FinishTime) {
		return true
	}

	return false
}

// SetFinishTime gets a reference to the given string and assigns it to the FinishTime field.
func (o *ModelAPIVersion) SetFinishTime(v string) {
	o.FinishTime = &v
}

// GetGitTags returns the GitTags field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetGitTags() []ModelAPIGitTag {
	if o == nil || IsNil(o.GitTags) {
		var ret []ModelAPIGitTag
		return ret
	}
	return o.GitTags
}

// GetGitTagsOk returns a tuple with the GitTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetGitTagsOk() ([]ModelAPIGitTag, bool) {
	if o == nil || IsNil(o.GitTags) {
		return nil, false
	}
	return o.GitTags, true
}

// HasGitTags returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasGitTags() bool {
	if o != nil && !IsNil(o.GitTags) {
		return true
	}

	return false
}

// SetGitTags gets a reference to the given []ModelAPIGitTag and assigns it to the GitTags field.
func (o *ModelAPIVersion) SetGitTags(v []ModelAPIGitTag) {
	o.GitTags = v
}

// GetIgnored returns the Ignored field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetIgnored() bool {
	if o == nil || IsNil(o.Ignored) {
		var ret bool
		return ret
	}
	return *o.Ignored
}

// GetIgnoredOk returns a tuple with the Ignored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetIgnoredOk() (*bool, bool) {
	if o == nil || IsNil(o.Ignored) {
		return nil, false
	}
	return o.Ignored, true
}

// HasIgnored returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasIgnored() bool {
	if o != nil && !IsNil(o.Ignored) {
		return true
	}

	return false
}

// SetIgnored gets a reference to the given bool and assigns it to the Ignored field.
func (o *ModelAPIVersion) SetIgnored(v bool) {
	o.Ignored = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ModelAPIVersion) SetMessage(v string) {
	o.Message = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *ModelAPIVersion) SetOrder(v int32) {
	o.Order = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetParameters() []ModelAPIParameter {
	if o == nil || IsNil(o.Parameters) {
		var ret []ModelAPIParameter
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetParametersOk() ([]ModelAPIParameter, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []ModelAPIParameter and assigns it to the Parameters field.
func (o *ModelAPIVersion) SetParameters(v []ModelAPIParameter) {
	o.Parameters = v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetProject() string {
	if o == nil || IsNil(o.Project) {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetProjectOk() (*string, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *ModelAPIVersion) SetProject(v string) {
	o.Project = &v
}

// GetProjectIdentifier returns the ProjectIdentifier field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetProjectIdentifier() string {
	if o == nil || IsNil(o.ProjectIdentifier) {
		var ret string
		return ret
	}
	return *o.ProjectIdentifier
}

// GetProjectIdentifierOk returns a tuple with the ProjectIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetProjectIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectIdentifier) {
		return nil, false
	}
	return o.ProjectIdentifier, true
}

// HasProjectIdentifier returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasProjectIdentifier() bool {
	if o != nil && !IsNil(o.ProjectIdentifier) {
		return true
	}

	return false
}

// SetProjectIdentifier gets a reference to the given string and assigns it to the ProjectIdentifier field.
func (o *ModelAPIVersion) SetProjectIdentifier(v string) {
	o.ProjectIdentifier = &v
}

// GetRepo returns the Repo field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetRepo() string {
	if o == nil || IsNil(o.Repo) {
		var ret string
		return ret
	}
	return *o.Repo
}

// GetRepoOk returns a tuple with the Repo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetRepoOk() (*string, bool) {
	if o == nil || IsNil(o.Repo) {
		return nil, false
	}
	return o.Repo, true
}

// HasRepo returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasRepo() bool {
	if o != nil && !IsNil(o.Repo) {
		return true
	}

	return false
}

// SetRepo gets a reference to the given string and assigns it to the Repo field.
func (o *ModelAPIVersion) SetRepo(v string) {
	o.Repo = &v
}

// GetRequester returns the Requester field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetRequester() string {
	if o == nil || IsNil(o.Requester) {
		var ret string
		return ret
	}
	return *o.Requester
}

// GetRequesterOk returns a tuple with the Requester field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetRequesterOk() (*string, bool) {
	if o == nil || IsNil(o.Requester) {
		return nil, false
	}
	return o.Requester, true
}

// HasRequester returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasRequester() bool {
	if o != nil && !IsNil(o.Requester) {
		return true
	}

	return false
}

// SetRequester gets a reference to the given string and assigns it to the Requester field.
func (o *ModelAPIVersion) SetRequester(v string) {
	o.Requester = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetRevision() string {
	if o == nil || IsNil(o.Revision) {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetRevisionOk() (*string, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *ModelAPIVersion) SetRevision(v string) {
	o.Revision = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *ModelAPIVersion) SetStartTime(v string) {
	o.StartTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ModelAPIVersion) SetStatus(v string) {
	o.Status = &v
}

// GetTriggeredByGitTag returns the TriggeredByGitTag field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetTriggeredByGitTag() ModelAPIGitTag {
	if o == nil || IsNil(o.TriggeredByGitTag) {
		var ret ModelAPIGitTag
		return ret
	}
	return *o.TriggeredByGitTag
}

// GetTriggeredByGitTagOk returns a tuple with the TriggeredByGitTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetTriggeredByGitTagOk() (*ModelAPIGitTag, bool) {
	if o == nil || IsNil(o.TriggeredByGitTag) {
		return nil, false
	}
	return o.TriggeredByGitTag, true
}

// HasTriggeredByGitTag returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasTriggeredByGitTag() bool {
	if o != nil && !IsNil(o.TriggeredByGitTag) {
		return true
	}

	return false
}

// SetTriggeredByGitTag gets a reference to the given ModelAPIGitTag and assigns it to the TriggeredByGitTag field.
func (o *ModelAPIVersion) SetTriggeredByGitTag(v ModelAPIGitTag) {
	o.TriggeredByGitTag = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *ModelAPIVersion) GetVersionId() string {
	if o == nil || IsNil(o.VersionId) {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIVersion) GetVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.VersionId) {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *ModelAPIVersion) HasVersionId() bool {
	if o != nil && !IsNil(o.VersionId) {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *ModelAPIVersion) SetVersionId(v string) {
	o.VersionId = &v
}

func (o ModelAPIVersion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aborted) {
		toSerialize["aborted"] = o.Aborted
	}
	if !IsNil(o.Activated) {
		toSerialize["activated"] = o.Activated
	}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.AuthorEmail) {
		toSerialize["author_email"] = o.AuthorEmail
	}
	if !IsNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	if !IsNil(o.BuildVariantsStatus) {
		toSerialize["build_variants_status"] = o.BuildVariantsStatus
	}
	if !IsNil(o.Builds) {
		toSerialize["builds"] = o.Builds
	}
	if !IsNil(o.CreateTime) {
		toSerialize["create_time"] = o.CreateTime
	}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.FinishTime) {
		toSerialize["finish_time"] = o.FinishTime
	}
	if !IsNil(o.GitTags) {
		toSerialize["git_tags"] = o.GitTags
	}
	if !IsNil(o.Ignored) {
		toSerialize["ignored"] = o.Ignored
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.ProjectIdentifier) {
		toSerialize["project_identifier"] = o.ProjectIdentifier
	}
	if !IsNil(o.Repo) {
		toSerialize["repo"] = o.Repo
	}
	if !IsNil(o.Requester) {
		toSerialize["requester"] = o.Requester
	}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.StartTime) {
		toSerialize["start_time"] = o.StartTime
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TriggeredByGitTag) {
		toSerialize["triggered_by_git_tag"] = o.TriggeredByGitTag
	}
	if !IsNil(o.VersionId) {
		toSerialize["version_id"] = o.VersionId
	}
	return toSerialize, nil
}

type NullableModelAPIVersion struct {
	value *ModelAPIVersion
	isSet bool
}

func (v NullableModelAPIVersion) Get() *ModelAPIVersion {
	return v.value
}

func (v *NullableModelAPIVersion) Set(val *ModelAPIVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIVersion(val *ModelAPIVersion) *NullableModelAPIVersion {
	return &NullableModelAPIVersion{value: val, isSet: true}
}

func (v NullableModelAPIVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


