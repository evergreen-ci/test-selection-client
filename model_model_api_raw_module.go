/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIRawModule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIRawModule{}

// ModelAPIRawModule struct for ModelAPIRawModule
type ModelAPIRawModule struct {
	// The module diff
	Diff *string `json:"diff,omitempty"`
	// The githash for the module
	Githash *string `json:"githash,omitempty"`
	// The module name
	Name *string `json:"name,omitempty"`
}

// NewModelAPIRawModule instantiates a new ModelAPIRawModule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIRawModule() *ModelAPIRawModule {
	this := ModelAPIRawModule{}
	return &this
}

// NewModelAPIRawModuleWithDefaults instantiates a new ModelAPIRawModule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIRawModuleWithDefaults() *ModelAPIRawModule {
	this := ModelAPIRawModule{}
	return &this
}

// GetDiff returns the Diff field value if set, zero value otherwise.
func (o *ModelAPIRawModule) GetDiff() string {
	if o == nil || IsNil(o.Diff) {
		var ret string
		return ret
	}
	return *o.Diff
}

// GetDiffOk returns a tuple with the Diff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIRawModule) GetDiffOk() (*string, bool) {
	if o == nil || IsNil(o.Diff) {
		return nil, false
	}
	return o.Diff, true
}

// HasDiff returns a boolean if a field has been set.
func (o *ModelAPIRawModule) HasDiff() bool {
	if o != nil && !IsNil(o.Diff) {
		return true
	}

	return false
}

// SetDiff gets a reference to the given string and assigns it to the Diff field.
func (o *ModelAPIRawModule) SetDiff(v string) {
	o.Diff = &v
}

// GetGithash returns the Githash field value if set, zero value otherwise.
func (o *ModelAPIRawModule) GetGithash() string {
	if o == nil || IsNil(o.Githash) {
		var ret string
		return ret
	}
	return *o.Githash
}

// GetGithashOk returns a tuple with the Githash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIRawModule) GetGithashOk() (*string, bool) {
	if o == nil || IsNil(o.Githash) {
		return nil, false
	}
	return o.Githash, true
}

// HasGithash returns a boolean if a field has been set.
func (o *ModelAPIRawModule) HasGithash() bool {
	if o != nil && !IsNil(o.Githash) {
		return true
	}

	return false
}

// SetGithash gets a reference to the given string and assigns it to the Githash field.
func (o *ModelAPIRawModule) SetGithash(v string) {
	o.Githash = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelAPIRawModule) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIRawModule) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelAPIRawModule) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelAPIRawModule) SetName(v string) {
	o.Name = &v
}

func (o ModelAPIRawModule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIRawModule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Diff) {
		toSerialize["diff"] = o.Diff
	}
	if !IsNil(o.Githash) {
		toSerialize["githash"] = o.Githash
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableModelAPIRawModule struct {
	value *ModelAPIRawModule
	isSet bool
}

func (v NullableModelAPIRawModule) Get() *ModelAPIRawModule {
	return v.value
}

func (v *NullableModelAPIRawModule) Set(val *ModelAPIRawModule) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIRawModule) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIRawModule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIRawModule(val *ModelAPIRawModule) *NullableModelAPIRawModule {
	return &NullableModelAPIRawModule{value: val, isSet: true}
}

func (v NullableModelAPIRawModule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIRawModule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


