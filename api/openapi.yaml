openapi: 3.0.1
info:
  contact: {}
  title: Evergreen REST v2 API
  version: "3"
externalDocs:
  description: "Click here for information on authentication, pagination, and other\
    \ details."
  url: https://docs.devprod.prod.corp.mongodb.com/evergreen/API/REST-V2-Usage/
servers:
- url: https://evergreen.mongodb.com/rest/v2
tags:
- description: Admins are users with high-level permissions within Evergreen.
  name: admin
- description: "Annotations are added by users, usually programmatically, to track\
    \ known and suspected causes of task failures."
  name: annotations
- description: A build is a set of tasks in a single build variant in a single version.
  name: builds
- description: "A distro is a set of hosts that runs tasks. A static distro is configured\
    \ with a list of IP addresses, while a dynamic distro scales with demand."
  name: distros
- description: "A host is an Evergrene-managed EC2 VM, static host, or container."
  name: hosts
- description: Info is general information about the system.
  name: info
- description: Keys are SSH keys for users to SSH into spawn hosts.
  name: keys
- description: A manifest tracks metadata about a version.
  name: manifests
- description: A patch build is a version not triggered by a commit to a repository.
    It either runs tasks on a base commit plus some diff if submitted by the CLI or
    on a git branch if created by a GitHub pull request.
  name: patches
- description: A project tracks a GitHub repository.
  name: projects
- description: The select endpoints return a subset of tests to run for a given task.
  name: select
- description: The fundamental unit of execution is the task. A task corresponds to
    a box on the waterfall page.
  name: tasks
- description: "A test is sent to Evergreen in a known format by a command during\
    \ a task, parsed by Evergreen, and displayed on the task page."
  name: tests
- description: A user is an Evergreen user.
  name: users
- description: "A version, which corresponds to a vertical slice of tasks on the waterfall,\
    \ is all tasks for a given commit or patch build."
  name: versions
paths:
  /admin/banner:
    get:
      description: Fetch the text and type of Evergreen's current banner
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIBanner'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get the banner
      tags:
      - info
  /admin/service_users:
    delete:
      description: Deletes a service user by its ID (restricted to Evergreen admins).
      parameters:
      - description: the user ID
        in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Delete service user
      tags:
      - admin
    get:
      description: Fetches all service users (restricted to Evergreen admins).
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APIDBUser'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get all service users
      tags:
      - admin
    post:
      description: Creates a new service user or updates an existing one (restricted
        to Evergreen admins).
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.APIDBUser'
        description: parameters
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Create or update service user
      tags:
      - admin
      x-codegen-request-body-name: "{object}"
  /admin/task_limits:
    get:
      description: Returns all of Evergreen's task-related limitations.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APITaskLimitsConfig'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get Evergreen's task limits
      tags:
      - admin
  /alias/{project_id}:
    get:
      description: Returns the project's aliases. This endpoint serves the data returned
        by the "evergreen list --patch-aliases" command.
      parameters:
      - description: the project ID
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Setting to true will return the merged result of the project
          and the config properties set in the project YAML. Defaults to false
        in: query
        name: includeProjectConfig
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APIProjectAlias'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get a project's aliases
      tags:
      - projects
  /builds/{build_id}:
    get:
      description: Fetches a single build using its ID
      parameters:
      - description: the build ID
        in: path
        name: build_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIBuild'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Fetch build by ID
      tags:
      - builds
    patch:
      description: Change the current execution status of a build. Accepts a JSON
        body with the new build status to be set.
      parameters:
      - description: the build ID
        in: path
        name: build_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.buildChangeStatusHandler'
        description: parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIBuild'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Change a build's execution status
      tags:
      - builds
      x-codegen-request-body-name: "{object}"
  /builds/{build_id}/abort:
    post:
      description: Abort the build of the given ID. Can only be performed if the build
        is in progress.
      parameters:
      - description: build ID
        in: path
        name: build_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIBuild'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Abort a build
      tags:
      - builds
  /builds/{build_id}/restart:
    post:
      description: Restarts the build of the given ID. Can only be performed if the
        build is finished.
      parameters:
      - description: build ID
        in: path
        name: build_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIBuild'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Restart a build
      tags:
      - builds
  /builds/{build_id}/tasks:
    get:
      description: List all tasks within a specific build.
      parameters:
      - description: the build ID
        in: path
        name: build_id
        required: true
        schema:
          type: string
      - description: The identifier of the task to start at in the pagination
        in: query
        name: start_at
        schema:
          type: string
      - description: The number of tasks to be returned per page of pagination. Defaults
          to 100
        in: query
        name: limit
        schema:
          type: integer
      - description: Fetches previous executions of tasks if they are available
        in: query
        name: fetch_all_executions
        schema:
          type: boolean
      - description: Fetches the parent display task ID for each returned execution
          task
        in: query
        name: fetch_parent_ids
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APITask'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: List tasks by build
      tags:
      - tasks
  /distros:
    get:
      description: Fetches all available distros.
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APIDistro'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get all distros
      tags:
      - distros
  /distros/{distro_id}:
    delete:
      description: Delete a distro by ID.
      parameters:
      - description: distro ID
        in: path
        name: distro_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Delete a distro
      tags:
      - distros
    get:
      description: Fetch a single distro by its ID.
      parameters:
      - description: distro ID
        in: path
        name: distro_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIDistro'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get a single distro
      tags:
      - distros
    patch:
      description: Update an existing distro by ID. Only updates the fields that are
        present in the request body.
      parameters:
      - description: distro ID
        in: path
        name: distro_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.APIDistro'
        description: the updated distro
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIDistro'
          description: The updated distro
      security:
      - Api-Key: []
        Api-User: []
      summary: Update an existing distro
      tags:
      - distros
      x-codegen-request-body-name: "{object}"
    put:
      description: "Replace an existing distro by ID or add a new distro. If replacing\
        \ an existing distro, all fields will be replaced with the new configuration."
      parameters:
      - description: distro ID
        in: path
        name: distro_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.APIDistro'
        description: the new distro
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "201":
          content: {}
          description: Created
      security:
      - Api-Key: []
        Api-User: []
      summary: Replace or add a distro
      tags:
      - distros
      x-codegen-request-body-name: "{object}"
  /distros/{distro_id}/setup:
    get:
      description: Fetch a distro's setup script by its distro ID.
      parameters:
      - description: distro ID
        in: path
        name: distro_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The distro setup script
      security:
      - Api-Key: []
        Api-User: []
      summary: Get the setup script for a distro
      tags:
      - distros
    patch:
      description: Update a distro's setup script. Accepts a JSON body with the new
        setup script.
      parameters:
      - description: distro ID
        in: path
        name: distro_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.distroIDChangeSetupHandler'
        description: the updated setup script
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIDistro'
          description: The updated distro with the new setup script
      security:
      - Api-Key: []
        Api-User: []
      summary: Update the setup script for a distro
      tags:
      - distros
      x-codegen-request-body-name: "{object}"
  /hosts:
    get:
      description: Returns a paginated list of all hosts in Evergreen
      parameters:
      - description: The identifier of the host to start at in the pagination
        in: query
        name: start_at
        schema:
          type: string
      - description: The number of hosts to be returned per page of pagination. Defaults
          to 100
        in: query
        name: limit
        schema:
          type: integer
      - description: A status of host to limit the results to
        in: query
        name: status
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIHost'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Fetch all hosts
      tags:
      - hosts
    post:
      description: Spawns a host. The host must be of a distro which is spawnable
        by users.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.HostRequestOptions'
        description: parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIHost'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Spawn a host
      tags:
      - hosts
      x-codegen-request-body-name: "{object}"
  /hosts/{host_id}:
    get:
      description: Fetches a single host using its ID
      parameters:
      - description: the host ID
        in: path
        name: host_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIHost'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Fetch host by ID
      tags:
      - hosts
  /hosts/{host_id}/change_password:
    post:
      description: "Immediately changes the RDP password of a Windows host with a\
        \ given ID. Users may only change passwords for hosts which were created by\
        \ them, unless the user is a super-user.  A response code of 200 OK indicates\
        \ that the host's password was successfully terminated Attempting to set the\
        \ RDP password of a host that is not a Windows host or host that is not running\
        \ will result in an error.  All other response codes indicate errors; the\
        \ response body can be parsed as a rest.APIError."
      parameters:
      - description: the host ID
        in: path
        name: host_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.APISpawnHostModify'
        description: "New RDP password; must meet RDP password criteria as provided\
          \ by Microsoft at: https://technet.microsoft.com/en-us/library/cc786468(v=ws.10).aspx\
          \ and be between 6 and 255 characters long"
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Change RDP password of a host
      tags:
      - hosts
      x-codegen-request-body-name: "{object}"
  /hosts/{host_id}/extend_expiration:
    post:
      description: "Extend the expiration time of a host with a given ID. Users may\
        \ only extend expirations for hosts which were created by them, unless the\
        \ user is a super-user.  The expiration date of a host may not be more than\
        \ 1 week in the future. Furthermore, the lifetime of an expirable host can\
        \ be extended at most 30 days past host creation.  A response code of 200\
        \ OK indicates that the host's expiration was successfully extended.  Attempt\
        \ to extend the expiration time of a terminated host will result in an error\
        \ All other response codes indicate errors; the response body can be parsed\
        \ as a rest.APIError"
      parameters:
      - description: the host ID
        in: path
        name: host_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.APISpawnHostModify'
        description: Number of hours to extend expiration; not to exceed 168
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Extend the expiration of a host
      tags:
      - hosts
      x-codegen-request-body-name: "{object}"
  /hosts/{host_id}/start:
    post:
      description: Queues a job to start the host. Optionally sets up a notification
        to send when starting is finished.
      parameters:
      - description: the host ID
        in: path
        name: host_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.hostSubscriptionInfo'
        description: subscription_type
        required: false
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Start host
      tags:
      - hosts
      x-codegen-request-body-name: "{object}"
  /hosts/{host_id}/stop:
    post:
      description: Queues a job to stop the host. Optionally sets up a notification
        to send when stopping is finished.
      parameters:
      - description: the host ID
        in: path
        name: host_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.hostStopOptions'
        description: subscription type and whether an unexpirable host should be kept
          off
        required: false
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Stop host
      tags:
      - hosts
      x-codegen-request-body-name: "{object}"
  /hosts/{host_id}/terminate:
    post:
      description: "Immediately terminate a single host with given ID. Users may only\
        \ terminate hosts which were created by them, unless the user is a super-user.\
        \  Hosts which have not been initialised yet will be marked as Terminated.\
        \  Trying to terminate a host which has already been terminated will result\
        \ in an error.  All other host statuses will result in an attempt to terminate\
        \ using the provider's API A response code of 200 OK indicates that the host\
        \ was successfully terminated All other response codes indicate errors; the\
        \ response body can be parsed as a rest.APIError."
      parameters:
      - description: the host ID
        in: path
        name: host_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Terminate a host
      tags:
      - hosts
  /keys:
    delete:
      description: "Delete the SSH public key with name {key_name} from the current\
        \ user (as determined by the Api-User and Api-Key headers)."
      parameters:
      - description: the key name
        in: query
        name: key_name
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Delete a specified public key from the current user
      tags:
      - keys
    get:
      description: Fetch the SSH public keys of the current user (as determined by
        the Api-User and Api-Key headers) as an array of Key objects.
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APIPubKey'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get current user's SSH public keys
      tags:
      - keys
    post:
      description: "Add a single public key to the current user (as determined by\
        \ the Api-User and Api-Key headers) as a Key object. If you attempt to insert\
        \ a key with a duplicate name, it will fail."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.APIPubKey'
        description: parameters
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Add a public key to the current user
      tags:
      - keys
      x-codegen-request-body-name: "{object}"
  /patches/{patch_id}:
    get:
      description: Fetch a single patch using its ID
      parameters:
      - description: patch ID
        in: path
        name: patch_id
        required: true
        schema:
          type: string
      - description: A module to get the diff for. Returns the empty string when no
          patch exists for the module.
        in: query
        name: module
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIPatch'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Fetch patch by ID
      tags:
      - patches
    patch:
      description: Sets the priority and activation status of a single patch to the
        input values
      parameters:
      - description: patch ID
        in: path
        name: patch_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.patchChangeStatusHandler'
        description: parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIPatch'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Change patch status
      tags:
      - patches
      x-codegen-request-body-name: "{object}"
  /patches/{patch_id}/abort:
    post:
      description: Aborts a single patch using its ID and returns the patch
      parameters:
      - description: the patch ID
        in: path
        name: patch_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIPatch'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Abort a patch
      tags:
      - patches
  /patches/{patch_id}/configure:
    post:
      description: "Update the list of tasks that the specified patch will run. This\
        \ will only add on tasks, existing tasks will not be removed. This works both\
        \ for initially specifying a patch's tasks, as well as for adding additional\
        \ tasks to an already-scheduled patch."
      parameters:
      - description: the patch ID
        in: path
        name: patch_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.patchTasks'
        description: parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIVersion'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Configure/schedule a patch
      tags:
      - patches
      x-codegen-request-body-name: "{object}"
  /patches/{patch_id}/raw:
    get:
      description: Fetch the raw diff for a patch
      parameters:
      - description: patch ID
        in: path
        name: patch_id
        required: true
        schema:
          type: string
      - description: A module to get the diff for. Returns the empty string when no
          patch exists for the module.
        in: query
        name: module
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get patch diff
      tags:
      - patches
  /patches/{patch_id}/restart:
    post:
      description: restarts a single patch using its ID and returns the patch
      parameters:
      - description: the patch ID
        in: path
        name: patch_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIPatch'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: restart a patch
      tags:
      - patches
  /permissions:
    get:
      description: Returns a static list of project and distro permissions that can
        be granted to users.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIPermissions'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get permissions
      tags:
      - info
  /permissions/users:
    get:
      description: "Retrieves all users with permissions for the resource, and their\
        \ highest permissions, and returns this as a mapping. This ignores basic permissions\
        \ that are given to all users."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.UsersPermissionsInput'
        description: parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route.swaggerUsersPermissionsResult'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get all user permissions for resource
      tags:
      - users
      x-codegen-request-body-name: "{object}"
  /projects:
    get:
      description: "Returns a paginated list of all non-hidden projects. Any authenticated\
        \ user can access this endpoint, so potentially sensitive information (variables,\
        \ task annotation settings, workstation settings, and container secrets) is\
        \ omitted. subscriptions.subscriber.target is undocumented by the OpenAPI\
        \ spec, and can be either a string or an object."
      parameters:
      - description: The identifier of the host to start at in the pagination
        in: query
        name: start_at
        schema:
          type: string
      - description: The number of hosts to be returned per page of pagination. Defaults
          to 100
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APIProjectRef'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Fetch all projects
      tags:
      - projects
  /projects/test_alias:
    get:
      description: "Checks a specified project alias in a specified project against\
        \ an Evergreen configuration, returning the tasks and variants that alias\
        \ would select. Currently only supports passing in the configuration via an\
        \ already-created version."
      parameters:
      - description: version
        in: query
        name: version
        required: true
        schema:
          type: string
      - description: alias
        in: query
        name: alias
        required: true
        schema:
          type: string
      - description: include dependencies
        in: query
        name: include_deps
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIVariantTasks'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Check project alias results
      tags:
      - projects
  /projects/{patch_id}/raw_modules:
    get:
      description: Fetch the raw diff for a patch along with the module diffs.
      parameters:
      - description: the project ID
        in: path
        name: patch_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIRawPatch'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get patch diff with module diffs
      tags:
      - patches
  /projects/{project_id}:
    get:
      description: "Returns the project (restricted to project admins). Includes public\
        \ variables, aliases, and subscriptions. Note that private variables are always\
        \ redacted. If you want to use this to copy project variables, see instead\
        \ the \"Copy Project Variables\" route."
      parameters:
      - description: the project ID
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Setting to true will return the merged result of project and
          repo level settings. Defaults to false
        in: query
        name: includeRepo
        schema:
          type: boolean
      - description: Setting to true will return the merged result of the project
          and the config properties set in the project YAML. Defaults to false
        in: query
        name: includeProjectConfig
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIProjectRef'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get a project
      tags:
      - projects
    patch:
      description: "Modify an existing project (restricted to project admins -- the\
        \ fetch all projects route can be used for non-admins). Will enable webhooks\
        \ if an enabled project, and enable PR testing and the commit queue if specified.\
        \  For lists, if there is a complementary \"delete\" field, then the former\
        \ field indicates items to be added, while the \"delete\" field indicates\
        \ items to be deleted. Otherwise, the given list will overwrite the original\
        \ list (the only exception is for project variables -- we will ignore any\
        \ empty project variables to avoid accidentally overwriting private variables)."
      parameters:
      - description: the project ID
        in: path
        name: project_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.APIProjectRef'
        description: parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIProjectRef'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Modify a project
      tags:
      - projects
      x-codegen-request-body-name: "{object}"
    put:
      description: Create a new project with the given project ID. Restricted to super
        users.
      parameters:
      - description: the project ID
        in: path
        name: project_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.APIProjectRef'
        description: parameters
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIProjectRef'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Put a project
      tags:
      - projects
      x-codegen-request-body-name: "{object}"
  /projects/{project_id}/copy:
    post:
      description: "Restricted to admins of the original project. Create a new, initially\
        \ disabled project (PR testing and CommitQueue also initially disabled). The\
        \ unique identifier is passed to the query parameter new_project and is required.\
        \  Project variables, aliases, subscriptions, etc are copied but the GitHub\
        \ app ID and key are not. Returns the new project (but not variables/aliases/subscriptions)."
      parameters:
      - description: the project ID
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: the new project ID
        in: query
        name: new_project
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIProjectRef'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Copy a project
      tags:
      - projects
  /projects/{project_id}/copy/variables:
    post:
      description: Restricted to admins of the source project/repo and the destination
        project/repo. Copies variables from projectA to projectB.
      parameters:
      - description: the project ID
        in: path
        name: project_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.copyVariablesOptions'
        description: parameters
        required: false
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Copy variables to an existing project
      tags:
      - projects
      x-codegen-request-body-name: "{object}"
  /projects/{project_id}/parameters:
    get:
      description: Returns a list of parameters for the project.
      parameters:
      - description: the project ID
        in: path
        name: project_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APIParameterInfo'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get current parameters for a project
      tags:
      - projects
  /projects/{project_id}/patches:
    get:
      description: Returns a paginated list of all patches associated with a specific
        project
      parameters:
      - description: the project ID
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: The create_time of the patch to start at in the pagination. Defaults
          to now
        in: query
        name: start_at
        schema:
          type: string
      - description: The number of patches to be returned per page of pagination.
          Defaults to 100
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APIPatch'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Fetch patches by project
      tags:
      - patches
  /projects/{project_id}/task_executions:
    get:
      description: "Right now, this returns the number of times the given task has\
        \ executed (i.e. succeeded or failed). Parameters should be passed into the\
        \ JSON body."
      parameters:
      - description: the project ID
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: The task to return execution info for.
        in: query
        name: task_name
        required: true
        schema:
          type: string
      - description: The build variant to return task execution info for.
        in: query
        name: build_variant
        required: true
        schema:
          type: string
      - description: Will only return execution info after this time. Format should
          be 2022-12-01T12:30:00.000Z
        in: query
        name: start_time
        required: true
        schema:
          type: string
      - description: "If not provided, will default to the current time."
        in: query
        name: end_time
        schema:
          type: string
      - description: "If not provided, will default to gitter_request (versions created\
          \ by git commit). Can also be github_pull_request, trigger_request (Project\
          \ Trigger versions) , github_merge_request (GitHub merge queue), or ad_hoc\
          \ (periodic builds)"
        explode: false
        in: query
        name: requesters
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ProjectTaskExecutionResp'
          description: number completed
      security:
      - Api-Key: []
        Api-User: []
      summary: Get execution info for a task
      tags:
      - tasks
  /projects/{project_id}/tasks/{task_name}:
    get:
      description: Returns the last set number of completed tasks that exist for a
        given project. Parameters should be passed into the JSON body. Ensure that
        a task name rather than a task ID is passed into the URL.
      parameters:
      - description: the project ID
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: the task name
        in: path
        name: task_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: "If set, will only include tasks that have run on this build\
          \ variant."
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APITask'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get tasks for a project
      tags:
      - tasks
      x-codegen-request-body-name: build_variant
  /projects/{project_id}/versions:
    get:
      description: Returns a paginated list of recent versions for a project. Parameters
        should be passed into the JSON body (the route still accepts limit and start
        as query parameters to support legacy behavior).
      parameters:
      - description: the project ID
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Number of versions to skip.
        in: query
        name: skip
        schema:
          type: integer
      - description: The number of versions to be returned per page of pagination.
          Defaults to 20.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The version order number to start at, for pagination. Will return\
          \ the versions that are less than (and therefore older) the revision number\
          \ specified."
        in: query
        name: start
        schema:
          type: integer
      - description: Will return the versions that are greater than (and therefore
          more recent) or equal to revision number specified.
        in: query
        name: revision_end
        schema:
          type: integer
      - description: "Returns versions for this requester only. Defaults to gitter_request\
          \ (caused by git commit, aka the repotracker requester). Can also be set\
          \ to patch_request, github_pull_request, trigger_request (Project Trigger\
          \ versions) , github_merge_request (GitHub merge queue),, and ad_hoc (periodic\
          \ builds)."
        in: query
        name: requester
        schema:
          type: string
      - description: "If set, will return some information for each build in the version."
        in: query
        name: include_builds
        schema:
          type: boolean
      - description: "If set, will only include information for this build, and only\
          \ return versions with this build activated. Must have include_builds set."
        in: query
        name: by_build_variant
        schema:
          type: string
      - description: "If set, will return some information for each task in the included\
          \ builds. This is only allowed if include_builds is set."
        in: query
        name: include_tasks
        schema:
          type: boolean
      - description: "If set, will only include information for this task, and will\
          \ only return versions with this task activated. Must have include_tasks\
          \ set."
        in: query
        name: by_task
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APIVersion'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get versions for a project
      tags:
      - versions
    patch:
      description: Modifies a group of versions for a project. Parameters should be
        passed into the JSON body. Currently supports setting priority for all versions
        that the given options apply to. This route is restricted to project admins.
      parameters:
      - description: the project ID
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: Timestamp to start looking for applicable versions.
        in: query
        name: start_time_str
        required: true
        schema:
          type: string
      - description: Timestamp to stop looking for applicable versions.
        in: query
        name: end_time_str
        schema:
          type: string
      - description: The version order number to start at.
        in: query
        name: revision_start
        schema:
          type: integer
      - description: The version order number to end at.
        in: query
        name: revision_end
        schema:
          type: integer
      - description: Priority to set for all tasks within applicable versions.
        in: query
        name: priority
        required: true
        schema:
          type: integer
      - description: "Returns versions for this requester only. Defaults to gitter_request\
          \ (caused by git commit, aka the repotracker requester). Can also be set\
          \ to patch_request, github_pull_request, trigger_request (Project Trigger\
          \ versions) , github_merge_request (GitHub merge queue), and ad_hoc (periodic\
          \ builds)."
        in: query
        name: requester
        schema:
          type: string
      - description: "If set, will only include information for this build, and only\
          \ return versions with this build activated. Must have include_builds set."
        in: query
        name: by_build_variant
        schema:
          type: string
      - description: "If set, will only include information for this task, and will\
          \ only return versions with this task activated. Must have include_tasks\
          \ set."
        in: query
        name: by_task
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Modify versions for a project
      tags:
      - versions
  /projects/{project_name}/revisions/{commit_hash}/tasks:
    get:
      description: List all tasks within a mainline commit of a given project (excludes
        patch tasks)
      parameters:
      - description: project name
        in: path
        name: project_name
        required: true
        schema:
          type: string
      - description: commit hash
        in: path
        name: commit_hash
        required: true
        schema:
          type: string
      - description: The identifier of the task to start at in the pagination
        in: query
        name: start_at
        schema:
          type: string
      - description: The number of tasks to be returned per page of pagination. Defaults
          to 100
        in: query
        name: limit
        schema:
          type: integer
      - description: Only return tasks within this variant
        in: query
        name: variant
        schema:
          type: string
      - description: Only return tasks within variants that match this regex
        in: query
        name: variant_regex
        schema:
          type: string
      - description: Only return tasks with this display name
        in: query
        name: task_name
        schema:
          type: string
      - description: Only return tasks with this status
        in: query
        name: status
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APITask'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: List tasks by project and commit
      tags:
      - tasks
  /roles/{role_id}/users:
    get:
      description: Gets a list of users for the specified role
      parameters:
      - description: role ID
        in: path
        name: role_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route.UsersWithRoleResponse'
          description: list of users
      security:
      - Api-Key: []
        Api-User: []
      summary: Get users for role
      tags:
      - users
  /select/tests:
    post:
      description: Return a subset of tests to run for a given task. This endpoint
        is not yet ready. Please do not use it.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.SelectTestsRequest'
        description: Select tests request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/route.SelectTestsRequest'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Select tests
      tags:
      - select
      x-codegen-request-body-name: "{object}"
  /status/cli_version:
    get:
      description: Fetch the CLI update manifest from the server
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APICLIUpdate'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Fetch CLI client version
      tags:
      - info
  /tasks/{build_id}/annotations:
    get:
      description: Fetches the annotations for all the tasks in a build.
      parameters:
      - description: build_id
        in: path
        name: build_id
        required: true
        schema:
          type: string
      - description: Fetches previous executions of the task if they are available
        in: query
        name: fetch_all_executions
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APITaskAnnotation'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: List task annotations by build
      tags:
      - annotations
  /tasks/{task_id}:
    get:
      description: Fetch a single task using its ID
      parameters:
      - description: task ID
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: The 0-based number corresponding to the execution of the task
          ID. Defaults to the latest execution
        in: query
        name: execution
        schema:
          type: integer
      - description: Fetches previous executions of the task if they are available
        in: query
        name: fetch_all_executions
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APITask'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get a single task
      tags:
      - tasks
    patch:
      description: Change the current execution status of a task. Accepts a JSON body
        with the new task status to be set.
      parameters:
      - description: task ID
        in: path
        name: task_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.taskExecutionPatchHandler'
        description: parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APITask'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Change a task's execution status
      tags:
      - tasks
      x-codegen-request-body-name: "{object}"
  /tasks/{task_id}/abort:
    post:
      description: Abort the task of the given ID. Can only be performed if the task
        is in progress.
      parameters:
      - description: task ID
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APITask'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Abort a task
      tags:
      - tasks
  /tasks/{task_id}/annotation:
    patch:
      description: "Creates a task annotation, or updates an existing task annotation,\
        \ appending issues and suspected issues that are included in the update. A\
        \ new annotation is created based if the annotation exists and if upsert is\
        \ true. Task execution must be provided for this endpoint, either in the request\
        \ body or set as a url parameter. If no task_execution is specified in the\
        \ request body or in the url, a bad status error will be returned. Note that\
        \ usage of this endpoint requires that the requesting user have security to\
        \ modify task annotations. The user does not need to specify the source, it\
        \ will be added automatically."
      parameters:
      - description: task ID
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Can be set in lieu of specifying task_execution in the request
          body.
        in: query
        name: execution
        schema:
          type: integer
      - description: Will create a new annotation if task annotation isn't found and
          upsert is true.
        in: query
        name: upsert
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.APITaskAnnotation'
        description: parameters
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Create or update a new task annotation by appending
      tags:
      - annotations
      x-codegen-request-body-name: "{object}"
    put:
      description: "Creates a task annotation, or updates an existing task annotation,\
        \ overwriting any existing fields that are included in the update. The annotation\
        \ is created based on the annotation specified in the request body. Task execution\
        \ must be provided for this endpoint, either in the request body or set as\
        \ a url parameter. If no task_execution is specified in the request body or\
        \ in the url, a bad status error will be returned. Note that usage of this\
        \ endpoint requires that the requesting user have security to modify task\
        \ annotations. The user does not need to specify the source, it will be added\
        \ automatically."
      parameters:
      - description: task ID
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Can be set in lieu of specifying task_execution in the request
          body.
        in: query
        name: execution
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.APITaskAnnotation'
        description: parameters
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Create or update a new task annotation
      tags:
      - annotations
      x-codegen-request-body-name: "{object}"
  /tasks/{task_id}/annotations:
    get:
      description: "Returns a list containing the latest annotation for the given\
        \ task, or null if there are no annotations."
      parameters:
      - description: task ID
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: The 0-based number corresponding to the execution of the task
          ID. Defaults to the latest execution
        in: query
        name: execution
        schema:
          type: integer
      - description: Fetches previous executions of the task if they are available
        in: query
        name: fetch_all_executions
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APITaskAnnotation'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Fetch task annotations
      tags:
      - annotations
  /tasks/{task_id}/build/TaskLogs:
    get:
      description: Fetch task logs by task ID.
      parameters:
      - description: Task ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: The 0-based number corresponding to the execution of the task
          ID. Defaults to the latest execution.
        in: query
        name: execution
        schema:
          type: integer
      - description: "Task log type. Must be one of: `agent_log`, `system_log`, `task_log`,\
          \ `all_logs`. Defaults to `all_logs`."
        in: query
        name: type
        schema:
          type: string
      - description: Start of targeted time interval (inclusive) in RFC3339 format.
          Defaults to the first timestamp of the requested logs.
        in: query
        name: start
        schema:
          type: string
      - description: End of targeted time interval (inclusive) in RFC3339 format.
          Defaults to the last timestamp of the requested logs.
        in: query
        name: end
        schema:
          type: string
      - description: "If set greater than 0, limits the number of log lines returned."
        in: query
        name: line_limit
        schema:
          type: integer
      - description: "If set greater than 0, returns the last N log lines."
        in: query
        name: tail_limit
        schema:
          type: integer
      - description: "If set to true, returns log lines prefixed with their timestamp."
        in: query
        name: print_time
        schema:
          type: boolean
      - description: "If set to true, returns log lines prefixed with their priority."
        in: query
        name: print_priority
        schema:
          type: boolean
      - description: "If set to true, paginates the response."
        in: query
        name: paginate
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get task logs for a task.
      tags:
      - tasks
  /tasks/{task_id}/build/TestLogs/{path}:
    get:
      description: Fetch test logs by task ID.
      parameters:
      - description: Task ID.
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: Test log path relative to the task's test logs directory.
        in: path
        name: path
        required: true
        schema:
          type: string
      - description: The 0-based number corresponding to the execution of the task
          ID. Defaults to the latest execution.
        in: query
        name: execution
        schema:
          type: integer
      - description: "Test log path, relative to the task's test log directory, to\
          \ merge with test log specified in the URL path. Can be a prefix. Merging\
          \ is stable and timestamp-based. Repeat the parameter key if more than one\
          \ value."
        in: query
        name: logs_to_merge
        schema:
          type: string
      - description: Start of targeted time interval (inclusive) in RFC3339 format.
          Defaults to the first timestamp of the test log specified in the URL path.
        in: query
        name: start
        schema:
          type: string
      - description: End of targeted time interval (inclusive) in RFC3339 format.
          Defaults to the last timestamp of the test log specified in the URL path.
        in: query
        name: end
        schema:
          type: string
      - description: "If set greater than 0, limits the number of log lines returned."
        in: query
        name: line_limit
        schema:
          type: integer
      - description: "If set greater than 0, returns the last N log lines."
        in: query
        name: tail_limit
        schema:
          type: integer
      - description: "If set to true, returns log lines prefixed with their timestamp."
        in: query
        name: print_time
        schema:
          type: boolean
      - description: "If set to true, returns log lines prefixed with their priority."
        in: query
        name: print_priority
        schema:
          type: boolean
      - description: "If set to true, paginates the response."
        in: query
        name: paginate
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get test logs for a task.
      tags:
      - tasks
  /tasks/{task_id}/created_ticket:
    put:
      description: "If a file ticket webhook is configured for a project, this endpoint\
        \ should be used to let evergreen know when a ticket was filed for a task\
        \ so that it can be stored and displayed to the user. The request body should\
        \ include the ticket url and issue_key. Note that usage of this endpoint requires\
        \ that the requesting user have security to modify task annotations. The user\
        \ does not need to specify the source of the ticket, it will be added automatically."
      parameters:
      - description: task ID
        in: path
        name: task_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.APIIssueLink'
        description: parameters
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Send a newly created ticket for a task.
      tags:
      - annotations
      x-codegen-request-body-name: "{object}"
  /tasks/{task_id}/generated_tasks:
    get:
      description: Fetch basic info about all tasks generated by a task that ran generate.tasks.
      parameters:
      - description: task ID
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APIGeneratedTaskInfo'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get info about generated tasks
      tags:
      - tasks
  /tasks/{task_id}/manifest:
    get:
      description: Fetch the manifest for a task using the task ID.
      parameters:
      - description: task ID
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/manifest.Manifest'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get manifest for task
      tags:
      - manifests
  /tasks/{task_id}/restart:
    post:
      description: Restarts the task of the given ID. Can only be performed if the
        task is finished.
      parameters:
      - description: task ID
        in: path
        name: task_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.taskRestartHandler'
        description: parameters
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APITask'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Restart a task
      tags:
      - tasks
      x-codegen-request-body-name: "{object}"
  /tasks/{task_id}/tests:
    get:
      description: "Fetches a paginated list of tests that ran as part of the given\
        \ task. To filter the tasks, add the following parameters into the query string."
      parameters:
      - description: task ID
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: The identifier of the test to start at in the pagination
        in: query
        name: start_at
        schema:
          type: string
      - description: The number of tests to be returned per page of pagination. Defaults
          to 100
        in: query
        name: limit
        schema:
          type: integer
      - description: A status of test to limit the results to.
        in: query
        name: status
        schema:
          type: string
      - description: "The 0-based number corresponding to the execution of the task.\
          \ Defaults to 0, meaning the first time the task was run."
        in: query
        name: execution
        schema:
          type: integer
      - description: Only return the test matching the name.
        in: query
        name: test_name
        schema:
          type: string
      - description: Return tests from the latest execution. Cannot be used with execution.
        in: query
        name: latest
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APITest'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get tests from a task
      tags:
      - tests
  /tasks/{task_id}/tests/count:
    get:
      description: Returns an integer representing the number of tests that ran as
        part of the given task.
      parameters:
      - description: task ID
        in: path
        name: task_id
        required: true
        schema:
          type: string
      - description: "The 0-based number corresponding to the execution of the task.\
          \ Defaults to 0, meaning the first time the task was run."
        in: query
        name: execution
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get the test count from a task
      tags:
      - tests
  /tasks/{version_id}/annotations:
    get:
      description: Fetches the annotations for all the tasks in a version.
      parameters:
      - description: version_id
        in: path
        name: version_id
        required: true
        schema:
          type: string
      - description: Fetches previous executions of the task if they are available
        in: query
        name: fetch_all_executions
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APITaskAnnotation'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: List task annotations by version
      tags:
      - annotations
  /users/offboard_user:
    post:
      description: "Marks unexpirable volumes and hosts as expirable for the user,\
        \ and removes the user as a project admin for any projects, if applicable."
      parameters:
      - description: "If set to true, route returns the IDs of the hosts/volumes that\
          \ *would* be modified."
        in: query
        name: dry_run
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.offboardUserEmail'
        description: parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIOffboardUserResults'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Offboard user
      tags:
      - users
      x-codegen-request-body-name: "{object}"
  /users/rename_user:
    post:
      description: Migrate a user to a new username. Note that this may overwrite
        settings on the new user if it already exists.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.renameUserInfo'
        description: parameters
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Rename user
      tags:
      - users
      x-codegen-request-body-name: "{object}"
  /users/{user_id}:
    get:
      description: Get information about the given user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIDBUser'
          description: the requested user
      security:
      - Api-Key: []
        Api-User: []
      summary: Get user
      tags:
      - users
  /users/{user_id}/hosts:
    get:
      description: Returns a list of hosts spawned by the given user.
      parameters:
      - description: the user ID
        in: path
        name: user_id
        required: true
        schema:
          type: string
      - description: The identifier of the host to start at in the pagination
        in: query
        name: start_at
        schema:
          type: string
      - description: The number of hosts to be returned per page of pagination. Defaults
          to 100
        in: query
        name: limit
        schema:
          type: integer
      - description: A status of host to limit the results to
        in: query
        name: status
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIHost'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Fetch hosts spawned by user
      tags:
      - hosts
  /users/{user_id}/patches:
    get:
      description: Returns a paginated list of all patches associated with a specific
        user
      parameters:
      - description: the user's ID
        in: path
        name: user_id
        required: true
        schema:
          type: string
      - description: the project ID
        in: path
        name: project_id
        required: true
        schema:
          type: string
      - description: The create_time of the patch to start at in the pagination. Defaults
          to now
        in: query
        name: start_at
        schema:
          type: string
      - description: The number of patches to be returned per page of pagination.
          Defaults to 100
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APIPatch'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Fetch patches by user
      tags:
      - patches
  /users/{user_id}/permissions:
    delete:
      description: Deletes all permissions of a given type for a user by deleting
        their roles of that type for that resource ID. This ignores the Basic Project/Distro
        Access that is given to all MongoDB employees.
      parameters:
      - description: the user's ID
        in: path
        name: user_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.deletePermissionsRequest'
        description: parameters
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Delete user permissions
      tags:
      - users
      x-codegen-request-body-name: "{object}"
    get:
      description: "Retrieves all permissions for the user (ignoring basic permissions\
        \ that are given to all users, unless all=true is included)."
      parameters:
      - description: the user's ID
        in: path
        name: user_id
        required: true
        schema:
          type: string
      - description: "If included, we will not filter out basic permissions"
        in: query
        name: all
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/route.swaggerPermissionSummary'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get user permissions
      tags:
      - users
    post:
      description: Grants the user specified by user_id the permissions in the request
        body.
      parameters:
      - description: the user's ID
        in: path
        name: user_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.RequestedPermissions'
        description: parameters
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Give permissions to user
      tags:
      - users
      x-codegen-request-body-name: "{object}"
  /users/{user_id}/roles:
    post:
      description: "Adds the specified roles to the specified user. Attempting to\
        \ add a duplicate role will result in an error. If you're unsure of what roles\
        \ you want to add, you probably want to POST To /users/user_id/permissions\
        \ instead."
      parameters:
      - description: user ID
        in: path
        name: user_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.rolesPostRequest'
        description: parameters
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Give roles to user
      tags:
      - users
      x-codegen-request-body-name: "{object}"
  /versions/{version_id}:
    get:
      description: Fetches a single version using its ID
      parameters:
      - description: version ID
        in: path
        name: version_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIVersion'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Fetch version by ID
      tags:
      - versions
    patch:
      description: Activate or deactivates a given version. Does not return the version.
      parameters:
      - description: the version ID
        in: path
        name: version_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route.versionPatchHandler'
        description: parameters
        required: true
      responses:
        "200":
          content: {}
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Activate or deactivate a version
      tags:
      - versions
      x-codegen-request-body-name: "{object}"
  /versions/{version_id}/abort:
    post:
      description: Aborts a single version using its ID then returns the version
      parameters:
      - description: version ID
        in: path
        name: version_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIVersion'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Abort a version
      tags:
      - versions
  /versions/{version_id}/builds:
    get:
      description: Fetches a list of builds associated with a version
      parameters:
      - description: the version ID
        in: path
        name: version_id
        required: true
        schema:
          type: string
      - description: Only return the build with this variant (using Distro identifier).
        in: query
        name: variant
        schema:
          type: string
      - description: "if set, include additional information about tasks in each build\
          \ (this is expensive)"
        in: query
        name: include_task_info
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.APIBuild'
                type: array
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Get builds from a version
      tags:
      - builds
  /versions/{version_id}/restart:
    post:
      description: Restarts a single version using its ID then returns the version
      parameters:
      - description: version ID
        in: path
        name: version_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.APIVersion'
          description: OK
      security:
      - Api-Key: []
        Api-User: []
      summary: Restart a version
      tags:
      - versions
components:
  schemas:
    apimodels.FailingCommand:
      example:
        full_display_name: full_display_name
        failure_metadata_tags:
        - failure_metadata_tags
        - failure_metadata_tags
      properties:
        failure_metadata_tags:
          items:
            type: string
          type: array
        full_display_name:
          type: string
      type: object
    apimodels.ModuleCloneInfo:
      example:
        prefixes:
          key: prefixes
      properties:
        prefixes:
          additionalProperties:
            type: string
          type: object
      type: object
    apimodels.OOMTrackerInfo:
      example:
        detected: true
        pids:
        - 5
        - 5
      properties:
        detected:
          type: boolean
        pids:
          items:
            type: integer
          type: array
      type: object
    apimodels.TaskEndDetail:
      example:
        post_errored: true
        trace_id: trace_id
        timeout_duration: 5
        failure_metadata_tags:
        - failure_metadata_tags
        - failure_metadata_tags
        timeout_type: timeout_type
        disk_devices:
        - disk_devices
        - disk_devices
        timed_out: true
        type: type
        modules:
          prefixes:
            key: prefixes
        failing_command: failing_command
        oom_killer:
          detected: true
          pids:
          - 5
          - 5
        other_failing_commands:
        - full_display_name: full_display_name
          failure_metadata_tags:
          - failure_metadata_tags
          - failure_metadata_tags
        - full_display_name: full_display_name
          failure_metadata_tags:
          - failure_metadata_tags
          - failure_metadata_tags
        desc: desc
        status: status
      properties:
        desc:
          type: string
        disk_devices:
          items:
            type: string
          type: array
        failing_command:
          type: string
        failure_metadata_tags:
          description: |-
            FailureMetadataTags are user metadata tags associated with the
            command that caused the task to fail.
          items:
            type: string
          type: array
        modules:
          $ref: '#/components/schemas/apimodels.ModuleCloneInfo'
        oom_killer:
          $ref: '#/components/schemas/apimodels.OOMTrackerInfo'
        other_failing_commands:
          description: |-
            OtherFailingCommands contains information about commands that failed
            while the task was running but did not cause the task to fail.
          items:
            $ref: '#/components/schemas/apimodels.FailingCommand'
          type: array
        post_errored:
          type: boolean
        status:
          type: string
        timed_out:
          type: boolean
        timeout_duration:
          type: integer
        timeout_type:
          type: string
        trace_id:
          type: string
        type:
          type: string
      type: object
    evergreen.BannerTheme:
      enum:
      - ANNOUNCEMENT
      - INFORMATION
      - WARNING
      - IMPORTANT
      - ""
      type: string
      x-enum-varnames:
      - Announcement
      - Information
      - Warning
      - Important
      - Empty
    evergreen.PermissionLevel:
      example:
        description: description
        value: 0
      properties:
        description:
          type: string
        value:
          type: integer
      type: object
    host.Tag:
      example:
        can_be_modified: true
        value: value
        key: key
      properties:
        can_be_modified:
          type: boolean
        key:
          type: string
        value:
          type: string
      type: object
    manifest.Manifest:
      example:
        is_base: true
        module_overrides:
          key: module_overrides
        project: project
        id: id
        branch: branch
        modules:
          key:
            owner: owner
            repo: repo
            branch: branch
            url: url
            revision: revision
        revision: revision
      properties:
        branch:
          description: The branch of the repository.
          type: string
        id:
          description: Identifier for the version.
          type: string
        is_base:
          description: True if the version is a mainline build.
          type: boolean
        module_overrides:
          additionalProperties:
            type: string
          type: object
        modules:
          additionalProperties:
            $ref: '#/components/schemas/manifest.Module'
          description: Map from the GitHub repository name to the module's information.
          type: object
        project:
          description: The project identifier for the version.
          type: string
        revision:
          description: The revision of the version.
          type: string
      type: object
    manifest.Module:
      example:
        owner: owner
        repo: repo
        branch: branch
        url: url
        revision: revision
      properties:
        branch:
          description: The branch of the repository.
          type: string
        owner:
          description: The owner of the repository.
          type: string
        repo:
          description: The name of the repository.
          type: string
        revision:
          description: The revision of the head of the branch.
          type: string
        url:
          description: The url to the GitHub API call to that specific commit.
          type: string
      type: object
    model.APIAbortInfo:
      example:
        pr_closed: true
        task_id: task_id
        new_version: new_version
        user: user
      properties:
        new_version:
          type: string
        pr_closed:
          type: boolean
        task_id:
          type: string
        user:
          type: string
      type: object
    model.APIBanner:
      example:
        banner: banner
        theme: theme
      properties:
        banner:
          type: string
        theme:
          type: string
      type: object
    model.APIBaseTaskInfo:
      example:
        id: id
        status: status
      properties:
        id:
          type: string
        status:
          type: string
      type: object
    model.APIBetaFeatures:
      example:
        spruce_waterfall_enabled: true
      properties:
        spruce_waterfall_enabled:
          type: boolean
      type: object
    model.APIBootstrapSettings:
      example:
        precondition_scripts:
        - path: path
          script: script
        - path: path
          script: script
        root_dir: root_dir
        client_dir: client_dir
        service_user: service_user
        jasper_credentials_path: jasper_credentials_path
        method: method
        jasper_binary_dir: jasper_binary_dir
        shell_path: shell_path
        communication: communication
        env:
        - value: value
          key: key
        - value: value
          key: key
        resource_limits:
          num_tasks: 5
          virtual_memory: 5
          num_processes: 1
          num_files: 6
          locked_memory: 0
      properties:
        client_dir:
          type: string
        communication:
          type: string
        env:
          items:
            $ref: '#/components/schemas/model.APIEnvVar'
          type: array
        jasper_binary_dir:
          type: string
        jasper_credentials_path:
          type: string
        method:
          type: string
        precondition_scripts:
          items:
            $ref: '#/components/schemas/model.APIPreconditionScript'
          type: array
        resource_limits:
          $ref: '#/components/schemas/model.APIResourceLimits'
        root_dir:
          type: string
        service_user:
          type: string
        shell_path:
          type: string
      type: object
    model.APIBuild:
      example:
        create_time: create_time
        definition_info: "{}"
        activated_time: activated_time
        origin: origin
        time_taken_ms: 9
        display_name: display_name
        project_identifier: project_identifier
        version: version
        finish_time: finish_time
        predicted_makespan_ms: 1
        tags:
        - tags
        - tags
        start_time: start_time
        actual_makespan_ms: 0
        activated_by: activated_by
        project_id: project_id
        _id: _id
        status_counts: "{}"
        task_cache:
        - start_time: start_time
          time_taken_ms: 7
          id: id
          display_name: display_name
          failed_test_names:
          - failed_test_names
          - failed_test_names
          task_end_details:
            post_errored: true
            trace_id: trace_id
            timeout_duration: 5
            failure_metadata_tags:
            - failure_metadata_tags
            - failure_metadata_tags
            timeout_type: timeout_type
            disk_devices:
            - disk_devices
            - disk_devices
            timed_out: true
            type: type
            modules:
              prefixes:
                key: prefixes
            failing_command: failing_command
            oom_killer:
              detected: true
              pids:
              - 5
              - 5
            other_failing_commands:
            - full_display_name: full_display_name
              failure_metadata_tags:
              - failure_metadata_tags
              - failure_metadata_tags
            - full_display_name: full_display_name
              failure_metadata_tags:
              - failure_metadata_tags
              - failure_metadata_tags
            desc: desc
            status: status
          time_taken: 2
          activated: true
          status: status
        - start_time: start_time
          time_taken_ms: 7
          id: id
          display_name: display_name
          failed_test_names:
          - failed_test_names
          - failed_test_names
          task_end_details:
            post_errored: true
            trace_id: trace_id
            timeout_duration: 5
            failure_metadata_tags:
            - failure_metadata_tags
            - failure_metadata_tags
            timeout_type: timeout_type
            disk_devices:
            - disk_devices
            - disk_devices
            timed_out: true
            type: type
            modules:
              prefixes:
                key: prefixes
            failing_command: failing_command
            oom_killer:
              detected: true
              pids:
              - 5
              - 5
            other_failing_commands:
            - full_display_name: full_display_name
              failure_metadata_tags:
              - failure_metadata_tags
              - failure_metadata_tags
            - full_display_name: full_display_name
              failure_metadata_tags:
              - failure_metadata_tags
              - failure_metadata_tags
            desc: desc
            status: status
          time_taken: 2
          activated: true
          status: status
        build_variant: build_variant
        tasks:
        - tasks
        - tasks
        activated: true
        git_hash: git_hash
        order: 6
        status: status
      properties:
        _id:
          type: string
        activated:
          description: Whether this build was manually initiated
          type: boolean
        activated_by:
          description: Who initiated the build
          type: string
        activated_time:
          description: When the build was initiated
          type: string
        actual_makespan_ms:
          description: Actual makespan measured during execution
          type: integer
        build_variant:
          description: Build distro and architecture information
          type: string
        create_time:
          description: Time at which build was created
          type: string
        definition_info:
          allOf:
          - $ref: '#/components/schemas/model.DefinitionInfo'
          description: |-
            Some routes will return information about the variant as defined in the
            project. Does not expand expansions; they will be returned as written in
            the project yaml (i.e. ${syntax})
          type: object
        display_name:
          description: Displayed title of the build showing version and variant running
          type: string
        finish_time:
          description: Time at which build finished running all tasks
          type: string
        git_hash:
          description: Hash of the revision on which this build is running
          type: string
        order:
          description: Incrementing counter of project's builds
          type: integer
        origin:
          description: "The source of the patch, a commit or a patch"
          type: string
        predicted_makespan_ms:
          description: Predicted makespan by the scheduler prior to execution
          type: integer
        project_id:
          description: The identifier of the project this build represents
          type: string
        project_identifier:
          type: string
        start_time:
          description: Time at which build started running tasks
          type: string
        status:
          description: "The status of the build (possible values are \"created\",\
            \ \"started\", \"success\", or \"failed\")"
          type: string
        status_counts:
          allOf:
          - $ref: '#/components/schemas/task.TaskStatusCount'
          description: |-
            Contains aggregated data about the statuses of tasks in this build. The
            keys of this object are statuses and the values are the number of tasks
            within this build in that status. Note that this field provides data that
            you can get yourself by querying tasks for this build.
          type: object
        tags:
          description: "List of tags defined for the build variant, if any"
          items:
            type: string
          type: array
        task_cache:
          description: |-
            Contains a subset of information about tasks for the build; this is not
            provided/accurate for most routes (get versions for project is an
            exception).
          items:
            $ref: '#/components/schemas/model.APITaskCache'
          type: array
        tasks:
          description: Tasks is the build's task cache with just the names
          items:
            type: string
          type: array
        time_taken_ms:
          description: How long the build took to complete all tasks
          type: integer
        version:
          description: The version this build is running tasks for
          type: string
      type: object
    model.APIBuildBaronSettings:
      properties:
        bf_suggestion_features_url:
          type: string
        bf_suggestion_password:
          type: string
        bf_suggestion_server:
          type: string
        bf_suggestion_timeout_secs:
          type: integer
        bf_suggestion_username:
          type: string
        ticket_create_issue_type:
          description: Type of ticket to create.
          type: string
        ticket_create_project:
          description: Jira project where tickets should be created.
          type: string
        ticket_search_projects:
          description: Jira project to search for tickets.
          items:
            type: string
          type: array
      type: object
    model.APICLIUpdate:
      example:
        ignore_update: true
        client_config:
          client_binaries:
          - os: os
            arch: arch
            display_name: display_name
            url: url
          - os: os
            arch: arch
            display_name: display_name
            url: url
          s3_client_binaries:
          - os: os
            arch: arch
            display_name: display_name
            url: url
          - os: os
            arch: arch
            display_name: display_name
            url: url
          latest_revision: latest_revision
      properties:
        client_config:
          $ref: '#/components/schemas/model.APIClientConfig'
        ignore_update:
          type: boolean
      type: object
    model.APIChildPatchAlias:
      example:
        patch_id: patch_id
        alias: alias
      properties:
        alias:
          type: string
        patch_id:
          type: string
      type: object
    model.APIClientBinary:
      example:
        os: os
        arch: arch
        display_name: display_name
        url: url
      properties:
        arch:
          type: string
        display_name:
          type: string
        os:
          type: string
        url:
          type: string
      type: object
    model.APIClientConfig:
      example:
        client_binaries:
        - os: os
          arch: arch
          display_name: display_name
          url: url
        - os: os
          arch: arch
          display_name: display_name
          url: url
        s3_client_binaries:
        - os: os
          arch: arch
          display_name: display_name
          url: url
        - os: os
          arch: arch
          display_name: display_name
          url: url
        latest_revision: latest_revision
      properties:
        client_binaries:
          items:
            $ref: '#/components/schemas/model.APIClientBinary'
          type: array
        latest_revision:
          type: string
        s3_client_binaries:
          items:
            $ref: '#/components/schemas/model.APIClientBinary'
          type: array
      type: object
    model.APICommitQueueParams:
      properties:
        enabled:
          description: Enable/disable the commit queue.
          type: boolean
        merge_method:
          description: "Method of merging (squash, merge, or rebase)."
          type: string
        message:
          description: Message to display when users interact with the commit queue.
          type: string
      type: object
    model.APIContainerOptions:
      example:
        image: image
        os: os
        working_dir: working_dir
        cpu: 6
        memory_mb: 1
        arch: arch
        windows_version: windows_version
        repo_creds_name: repo_creds_name
      properties:
        arch:
          type: string
        cpu:
          type: integer
        image:
          type: string
        memory_mb:
          type: integer
        os:
          type: string
        repo_creds_name:
          type: string
        windows_version:
          type: string
        working_dir:
          type: string
      type: object
    model.APIContainerResources:
      example:
        name: name
        cpu: 6
        memory_mb: 1
      properties:
        cpu:
          description: CPU (1024 CPU = 1 vCPU) for the container.
          type: integer
        memory_mb:
          description: Memory (in MB) for the container.
          type: integer
        name:
          description: Name for container resource definition.
          type: string
      type: object
    model.APIContainerSecret:
      example:
        should_rotate: true
        name: name
        repo_creds: "{}"
        external_id: external_id
        type: type
        external_name: external_name
        value: value
      properties:
        external_id:
          description: |-
            External identifier for the container secret. Cannot be modified by
            users.
          type: string
        external_name:
          description: External name of the container secrets. Cannot be modified
            by users.
          type: string
        name:
          description: Name of the container secret.
          type: string
        repo_creds:
          allOf:
          - $ref: '#/components/schemas/model.APIRepositoryCredentials'
          description: |-
            RepoCreds, if set, are the new repository credentials to store. This only
            applies to repository credentials.
          type: object
        should_rotate:
          description: |-
            ShouldRotate indicates that the user requested the pod secret to be
            rotated to a new value. This only applies to the project's pod secret.
          type: boolean
        type:
          description: Type of container secret.
          type: string
        value:
          description: Container secret value to set.
          type: string
      type: object
    model.APIDBUser:
      example:
        parsley_filters:
        - exact_match: true
          expression: expression
          case_sensitive: true
        - exact_match: true
          expression: expression
          case_sensitive: true
        settings:
          github_user:
            uid: 0
            last_known_as: last_known_as
          slack_member_id: slack_member_id
          time_format: time_format
          timezone: timezone
          date_format: date_format
          spruce_feedback:
            submitted_at: submitted_at
            questions:
            - answer: answer
              id: id
              prompt: prompt
            - answer: answer
              id: id
              prompt: prompt
            type: type
            user: user
          region: region
          notifications:
            patch_finish_id: patch_finish_id
            commit_queue_id: commit_queue_id
            spawn_host_expiration_id: spawn_host_expiration_id
            spawn_host_outcome: spawn_host_outcome
            commit_queue: commit_queue
            patch_first_failure_id: patch_first_failure_id
            patch_finish: patch_finish
            spawn_host_outcome_id: spawn_host_outcome_id
            patch_first_failure: patch_first_failure
            spawn_host_expiration: spawn_host_expiration
            build_break: build_break
            build_break_id: build_break_id
          slack_username: slack_username
          use_spruce_options:
            has_used_mainline_commits_before: true
            spruce_v1: true
            has_used_spruce_before: true
        email_address: email_address
        user_id: user_id
        only_api: true
        roles:
        - roles
        - roles
        beta_features:
          spruce_waterfall_enabled: true
        parsley_settings:
          jump_to_failing_line_enabled: true
          sections_enabled: true
        display_name: display_name
      properties:
        beta_features:
          $ref: '#/components/schemas/model.APIBetaFeatures'
        display_name:
          type: string
        email_address:
          type: string
        only_api:
          description: will be set to true if the user represents a service user
          type: boolean
        parsley_filters:
          items:
            $ref: '#/components/schemas/model.APIParsleyFilter'
          type: array
        parsley_settings:
          $ref: '#/components/schemas/model.APIParsleySettings'
        roles:
          items:
            type: string
          type: array
        settings:
          $ref: '#/components/schemas/model.APIUserSettings'
        user_id:
          type: string
      type: object
    model.APIDependency:
      example:
        id: id
        status: status
      properties:
        id:
          type: string
        status:
          type: string
      type: object
    model.APIDispatcherSettings:
      example:
        version: version
      properties:
        version:
          type: string
      type: object
    model.APIDisplayTask:
      example:
        execution_tasks:
        - execution_tasks
        - execution_tasks
        name: name
      properties:
        execution_tasks:
          items:
            type: string
          type: array
        name:
          type: string
      type: object
    model.APIDistro:
      example:
        authorized_keys_file: authorized_keys_file
        note: note
        is_cluster: true
        aliases:
        - aliases
        - aliases
        mountpoints:
        - mountpoints
        - mountpoints
        work_dir: work_dir
        disable_shallow_clone: true
        is_virtual_workstation: true
        planner_settings:
          expected_runtime_factor: 4
          mainline_time_in_queue_factor: 1
          target_time: 7
          patch_time_in_queue_factor: 6
          patch_factor: 1
          generate_task_factor: 7
          num_dependents_factor: 1.0246457001441578
          group_versions: true
          version: version
          commit_queue_factor: 2
        provider: provider
        setup_as_sudo: true
        disabled: true
        expansions:
        - value: value
          key: key
        - value: value
          key: key
        admin_only: true
        single_task_distro: true
        home_volume_settings:
          format_command: format_command
        container_pool: container_pool
        icecream_settings:
          config_path: config_path
          scheduler_host: scheduler_host
        warning_note: warning_note
        dispatcher_settings:
          version: version
        bootstrap_settings:
          precondition_scripts:
          - path: path
            script: script
          - path: path
            script: script
          root_dir: root_dir
          client_dir: client_dir
          service_user: service_user
          jasper_credentials_path: jasper_credentials_path
          method: method
          jasper_binary_dir: jasper_binary_dir
          shell_path: shell_path
          communication: communication
          env:
          - value: value
            key: key
          - value: value
            key: key
          resource_limits:
            num_tasks: 5
            virtual_memory: 5
            num_processes: 1
            num_files: 6
            locked_memory: 0
        provider_settings: "{}"
        finder_settings:
          version: version
        valid_projects:
        - valid_projects
        - valid_projects
        name: name
        setup: setup
        exec_user: exec_user
        host_allocator_settings:
          acceptable_host_idle_time: 2
          minimum_hosts: 3
          maximum_hosts: 9
          hosts_overallocated_rule: hosts_overallocated_rule
          rounding_rule: rounding_rule
          version: version
          feedback_rule: feedback_rule
          future_host_fraction: 7.061401241503109
        ssh_options:
        - ssh_options
        - ssh_options
        arch: arch
        image_id: image_id
        user: user
        user_spawn_allowed: true
      properties:
        admin_only:
          type: boolean
        aliases:
          items:
            type: string
          type: array
        arch:
          type: string
        authorized_keys_file:
          type: string
        bootstrap_settings:
          $ref: '#/components/schemas/model.APIBootstrapSettings'
        container_pool:
          type: string
        disable_shallow_clone:
          type: boolean
        disabled:
          type: boolean
        dispatcher_settings:
          $ref: '#/components/schemas/model.APIDispatcherSettings'
        exec_user:
          type: string
        expansions:
          items:
            $ref: '#/components/schemas/model.APIExpansion'
          type: array
        finder_settings:
          $ref: '#/components/schemas/model.APIFinderSettings'
        home_volume_settings:
          $ref: '#/components/schemas/model.APIHomeVolumeSettings'
        host_allocator_settings:
          $ref: '#/components/schemas/model.APIHostAllocatorSettings'
        icecream_settings:
          $ref: '#/components/schemas/model.APIIceCreamSettings'
        image_id:
          type: string
        is_cluster:
          type: boolean
        is_virtual_workstation:
          type: boolean
        mountpoints:
          items:
            type: string
          type: array
        name:
          type: string
        note:
          type: string
        planner_settings:
          $ref: '#/components/schemas/model.APIPlannerSettings'
        provider:
          type: string
        provider_settings:
          properties: {}
          type: object
        setup:
          type: string
        setup_as_sudo:
          type: boolean
        single_task_distro:
          type: boolean
        ssh_options:
          items:
            type: string
          type: array
        user:
          type: string
        user_spawn_allowed:
          type: boolean
        valid_projects:
          items:
            type: string
          type: array
        warning_note:
          type: string
        work_dir:
          type: string
      type: object
    model.APIEnvVar:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    model.APIExpansion:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    model.APIExternalLink:
      example:
        requesters:
        - requesters
        - requesters
        url_template: url_template
        display_name: display_name
      properties:
        display_name:
          description: Display name for the URL.
          type: string
        requesters:
          description: Requester filter for when to display the link.
          items:
            type: string
          type: array
        url_template:
          description: URL format to add to the version metadata panel.
          type: string
      type: object
    model.APIFailingCommand:
      properties:
        failure_metadata_tags:
          description: FailureMetadataTags are tags associated with the failing command.
          items:
            type: string
          type: array
        full_display_name:
          description: FullDisplayName is the full display name of the failing command.
          type: string
      type: object
    model.APIFeedbackSubmission:
      example:
        submitted_at: submitted_at
        questions:
        - answer: answer
          id: id
          prompt: prompt
        - answer: answer
          id: id
          prompt: prompt
        type: type
        user: user
      properties:
        questions:
          items:
            $ref: '#/components/schemas/model.APIQuestionAnswer'
          type: array
        submitted_at:
          type: string
        type:
          type: string
        user:
          type: string
      type: object
    model.APIFile:
      example:
        ignore_for_fetch: true
        content_type: content_type
        visibility: visibility
        name: name
        url_parsley: url_parsley
        url: url
      properties:
        content_type:
          type: string
        ignore_for_fetch:
          description: "When true, these artifacts are excluded from reproduction"
          type: boolean
        name:
          description: Human-readable name of the file
          type: string
        url:
          description: Link to the file
          type: string
        url_parsley:
          type: string
        visibility:
          description: Determines who can see the file in the UI
          type: string
      type: object
    model.APIFinderSettings:
      example:
        version: version
      properties:
        version:
          type: string
      type: object
    model.APIGeneratedTaskInfo:
      example:
        task_name: task_name
        build_id: build_id
        task_id: task_id
        build_variant_display_name: build_variant_display_name
        build_variant: build_variant
      properties:
        build_id:
          description: The unique identifier of the build
          type: string
        build_variant:
          description: The name of the build variant
          type: string
        build_variant_display_name:
          description: The display name of the build variant
          type: string
        task_id:
          description: The unique identifier of the task
          type: string
        task_name:
          description: The display name of the task
          type: string
      type: object
    model.APIGitHubDynamicTokenPermissionGroup:
      example:
        permissions:
          key: permissions
        name: name
        all_permissions: true
      properties:
        all_permissions:
          description: |-
            AllPermissions is a flag that indicates that the group has all permissions.
            If this is set to true, the Permissions field is ignored.
            If this is set to false, the Permissions field is used (and may be
            nil, representing no permissions).
          type: boolean
        name:
          description: Name of the GitHub permission group.
          type: string
        permissions:
          additionalProperties:
            type: string
          description: Permissions for the GitHub permission group.
          type: object
      type: object
    model.APIGitTag:
      example:
        pusher: pusher
        tag: tag
      properties:
        pusher:
          type: string
        tag:
          type: string
      type: object
    model.APIGithubUser:
      example:
        uid: 0
        last_known_as: last_known_as
      properties:
        last_known_as:
          type: string
        uid:
          type: integer
      type: object
    model.APIHomeVolumeSettings:
      example:
        format_command: format_command
      properties:
        format_command:
          type: string
      type: object
    model.APIHost:
      example:
        creation_time: creation_time
        distro: "{}"
        host_url: host_url
        attached_volume_ids:
        - attached_volume_ids
        - attached_volume_ids
        host_type: host_type
        persistent_dns_name: persistent_dns_name
        running_task: "{}"
        provisioned: true
        zone: zone
        needs_reprovision: needs_reprovision
        instance_tags:
        - can_be_modified: true
          value: value
          key: key
        - can_be_modified: true
          value: value
          key: key
        tag: tag
        started_by: started_by
        last_communication: last_communication
        provision_options: "{}"
        expiration_time: expiration_time
        total_idle_time: 0
        no_expiration: true
        user_host: true
        display_name: display_name
        home_volume_id: home_volume_id
        host_id: host_id
        instance_type: instance_type
        user: user
        status: status
      properties:
        attached_volume_ids:
          items:
            type: string
          type: array
        creation_time:
          type: string
        display_name:
          type: string
        distro:
          allOf:
          - $ref: '#/components/schemas/model.DistroInfo'
          description: Object containing information about the distro type of this
            host
          type: object
        expiration_time:
          type: string
        home_volume_id:
          type: string
        host_id:
          description: Unique identifier of a specific host
          type: string
        host_type:
          description: "The instance type requested for the provider, primarily used\
            \ for ec2 dynamic hosts"
          type: string
        host_url:
          type: string
        instance_tags:
          items:
            $ref: '#/components/schemas/host.Tag'
          type: array
        instance_type:
          type: string
        last_communication:
          type: string
        needs_reprovision:
          type: string
        no_expiration:
          type: boolean
        persistent_dns_name:
          type: string
        provision_options:
          allOf:
          - $ref: '#/components/schemas/model.APIProvisionOptions'
          description: Contains options for spawn hosts.
          type: object
        provisioned:
          type: boolean
        running_task:
          allOf:
          - $ref: '#/components/schemas/model.TaskInfo'
          description: Object containing information about the task the host is currently
            running
          type: object
        started_by:
          description: Name of the process or user that started this host
          type: string
        status:
          description: The current state of the host
          type: string
        tag:
          type: string
        total_idle_time:
          type: integer
        user:
          description: The user associated with this host. Set if this host was spawned
            for a specific user
          type: string
        user_host:
          type: boolean
        zone:
          type: string
      type: object
    model.APIHostAllocatorSettings:
      example:
        acceptable_host_idle_time: 2
        minimum_hosts: 3
        maximum_hosts: 9
        hosts_overallocated_rule: hosts_overallocated_rule
        rounding_rule: rounding_rule
        version: version
        feedback_rule: feedback_rule
        future_host_fraction: 7.061401241503109
      properties:
        acceptable_host_idle_time:
          type: integer
        feedback_rule:
          type: string
        future_host_fraction:
          type: number
        hosts_overallocated_rule:
          type: string
        maximum_hosts:
          type: integer
        minimum_hosts:
          type: integer
        rounding_rule:
          type: string
        version:
          type: string
      type: object
    model.APIIceCreamSettings:
      example:
        config_path: config_path
        scheduler_host: scheduler_host
      properties:
        config_path:
          type: string
        scheduler_host:
          type: string
      type: object
    model.APIIssueLink:
      example:
        issue_key: issue_key
        confidence_score: 0.8008281904610115
        source: "{}"
        url: url
      properties:
        confidence_score:
          description: The confidence score of the issue
          type: number
        issue_key:
          description: Text to be displayed
          type: string
        source:
          allOf:
          - $ref: '#/components/schemas/model.APISource'
          description: The source of the edit
          type: object
        url:
          description: The url of the ticket
          type: string
      type: object
    model.APIMetadataLink:
      example:
        source: "{}"
        text: text
        url: url
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/model.APISource'
          description: The source of the edit
          type: object
        text:
          description: Text to be displayed
          type: string
        url:
          description: The url of the link
          type: string
      type: object
    model.APIModulePatch:
      example:
        raw_link: raw_link
        commit_messages:
        - commit_messages
        - commit_messages
        branch_name: branch_name
        html_link: html_link
        file_diffs:
        - additions: 6
          deletions: 1
          file_name: file_name
          description: description
          diff_link: diff_link
        - additions: 6
          deletions: 1
          file_name: file_name
          description: description
          diff_link: diff_link
      properties:
        branch_name:
          type: string
        commit_messages:
          items:
            type: string
          type: array
        file_diffs:
          items:
            $ref: '#/components/schemas/model.FileDiff'
          type: array
        html_link:
          type: string
        raw_link:
          type: string
      type: object
    model.APINote:
      properties:
        message:
          description: Comment about the task failure
          type: string
        source:
          allOf:
          - $ref: '#/components/schemas/model.APISource'
          description: The source of the note
          type: object
      type: object
    model.APINotificationPreferences:
      example:
        patch_finish_id: patch_finish_id
        commit_queue_id: commit_queue_id
        spawn_host_expiration_id: spawn_host_expiration_id
        spawn_host_outcome: spawn_host_outcome
        commit_queue: commit_queue
        patch_first_failure_id: patch_first_failure_id
        patch_finish: patch_finish
        spawn_host_outcome_id: spawn_host_outcome_id
        patch_first_failure: patch_first_failure
        spawn_host_expiration: spawn_host_expiration
        build_break: build_break
        build_break_id: build_break_id
      properties:
        build_break:
          type: string
        build_break_id:
          type: string
        commit_queue:
          type: string
        commit_queue_id:
          type: string
        patch_finish:
          type: string
        patch_finish_id:
          type: string
        patch_first_failure:
          type: string
        patch_first_failure_id:
          type: string
        spawn_host_expiration:
          type: string
        spawn_host_expiration_id:
          type: string
        spawn_host_outcome:
          type: string
        spawn_host_outcome_id:
          type: string
      type: object
    model.APIOffboardUserResults:
      example:
        terminated_hosts:
        - terminated_hosts
        - terminated_hosts
        terminated_volumes:
        - terminated_volumes
        - terminated_volumes
      properties:
        terminated_hosts:
          items:
            type: string
          type: array
        terminated_volumes:
          items:
            type: string
          type: array
      type: object
    model.APIOomTrackerInfo:
      properties:
        detected:
          type: boolean
        pids:
          items:
            type: integer
          type: array
      type: object
    model.APIParameter:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    model.APIParameterInfo:
      example:
        description: description
        value: value
        key: key
      properties:
        description:
          type: string
        key:
          type: string
        value:
          type: string
      type: object
    model.APIParsleyFilter:
      example:
        exact_match: true
        expression: expression
        case_sensitive: true
      properties:
        case_sensitive:
          description: CaseSensitive indicates whether the filter is case sensitive.
          type: boolean
        exact_match:
          description: ExactMatch indicates whether the filter must be an exact match.
          type: boolean
        expression:
          description: Expression is a regular expression representing the filter.
          type: string
      type: object
    model.APIParsleySettings:
      example:
        jump_to_failing_line_enabled: true
        sections_enabled: true
      properties:
        jump_to_failing_line_enabled:
          description: JumpToFailingLineEnabled describes whether to automatically
            scroll to the failing log line on initial page load.
          type: boolean
        sections_enabled:
          description: SectionsEnabled describes whether to render task logs with
            sections.
          type: boolean
      type: object
    model.APIPatch:
      example:
        child_patch_aliases:
        - patch_id: patch_id
          alias: alias
        - patch_id: patch_id
          alias: alias
        patch_number: 5
        hidden: true
        description: description
        merged_from: merged_from
        branch: branch
        module_code_changes:
        - raw_link: raw_link
          commit_messages:
          - commit_messages
          - commit_messages
          branch_name: branch_name
          html_link: html_link
          file_diffs:
          - additions: 6
            deletions: 1
            file_name: file_name
            description: description
            diff_link: diff_link
          - additions: 6
            deletions: 1
            file_name: file_name
            description: description
            diff_link: diff_link
        - raw_link: raw_link
          commit_messages:
          - commit_messages
          - commit_messages
          branch_name: branch_name
          html_link: html_link
          file_diffs:
          - additions: 6
            deletions: 1
            file_name: file_name
            description: description
            diff_link: diff_link
          - additions: 6
            deletions: 1
            file_name: file_name
            description: description
            diff_link: diff_link
        project_id: project_id
        builds:
        - builds
        - builds
        alias: alias
        downstream_tasks:
        - project: project
          tasks:
          - tasks
          - tasks
          variant_tasks:
          - name: name
            tasks:
            - tasks
            - tasks
          - name: name
            tasks:
            - tasks
            - tasks
        - project: project
          tasks:
          - tasks
          - tasks
          variant_tasks:
          - name: name
            tasks:
            - tasks
            - tasks
          - name: name
            tasks:
            - tasks
            - tasks
        tasks:
        - tasks
        - tasks
        requester: requester
        create_time: create_time
        patch_id: patch_id
        author: author
        child_patches:
        - null
        - null
        project_storage_method: project_storage_method
        github_patch_data:
          head_owner: head_owner
          head_repo: head_repo
          author: author
          pr_number: 0
          base_repo: base_repo
          base_owner: base_owner
          head_hash: head_hash
        project_identifier: project_identifier
        version: version
        finish_time: finish_time
        start_time: start_time
        variants_tasks:
        - name: name
          tasks:
          - tasks
          - tasks
        - name: name
          tasks:
          - tasks
          - tasks
        parameters:
        - value: value
          key: key
        - value: value
          key: key
        activated: true
        git_hash: git_hash
        status: status
      properties:
        activated:
          description: Whether the patch has been finalized and activated
          type: boolean
        alias:
          type: string
        author:
          description: Author of the patch
          type: string
        branch:
          description: The branch on which the patch was initiated
          type: string
        builds:
          description: List of identifiers of builds to run for this patch
          items:
            type: string
          type: array
        child_patch_aliases:
          items:
            $ref: '#/components/schemas/model.APIChildPatchAlias'
          type: array
        child_patches:
          items:
            $ref: '#/components/schemas/model.APIPatch'
          type: array
        create_time:
          description: Time patch was created
          type: string
        description:
          description: Description of the patch
          type: string
        downstream_tasks:
          items:
            $ref: '#/components/schemas/model.DownstreamTasks'
          type: array
        finish_time:
          description: Time at patch completion
          type: string
        git_hash:
          description: Hash of commit off which the patch was initiated
          type: string
        github_patch_data:
          $ref: '#/components/schemas/model.githubPatch'
        hidden:
          type: boolean
        merged_from:
          type: string
        module_code_changes:
          items:
            $ref: '#/components/schemas/model.APIModulePatch'
          type: array
        parameters:
          items:
            $ref: '#/components/schemas/model.APIParameter'
          type: array
        patch_id:
          description: Unique identifier of a specific patch
          type: string
        patch_number:
          description: Incrementing counter of user's patches
          type: integer
        project_id:
          description: Name of the project
          type: string
        project_identifier:
          type: string
        project_storage_method:
          type: string
        requester:
          type: string
        start_time:
          description: Time patch started to run
          type: string
        status:
          description: "Status of patch (possible values are \"created\", \"started\"\
            , \"success\", or \"failed\")"
          type: string
        tasks:
          description: List of identifiers of tasks used in this patch
          items:
            type: string
          type: array
        variants_tasks:
          description: List of documents of available tasks and associated build variant
          items:
            $ref: '#/components/schemas/model.VariantTask'
          type: array
        version:
          type: string
      type: object
    model.APIPatchTriggerDefinition:
      example:
        downstream_revision: downstream_revision
        child_project_identifier: child_project_identifier
        child_project_id: child_project_id
        parent_as_module: parent_as_module
        task_specifiers:
        - task_regex: task_regex
          variant_regex: variant_regex
          patch_alias: patch_alias
        - task_regex: task_regex
          variant_regex: variant_regex
          patch_alias: patch_alias
        alias: alias
        variants_tasks:
        - name: name
          tasks:
          - tasks
          - tasks
        - name: name
          tasks:
          - tasks
          - tasks
        status: status
      properties:
        alias:
          description: Alias to run in the downstream project.
          type: string
        child_project_id:
          description: ID of the downstream project.
          type: string
        child_project_identifier:
          description: Identifier of the downstream project.
          type: string
        downstream_revision:
          description: |-
            An optional field representing the revision at which to create the downstream patch.
            By default, this field is empty and the downstream patch will be based off of its
            most recent commit.
          type: string
        parent_as_module:
          description: |-
            Name of the module corresponding to the upstream project in the
            downstream project's YAML.
          type: string
        status:
          description: Status for the parent patch to conditionally kick off the child
            patch.
          type: string
        task_specifiers:
          description: List of task specifiers.
          items:
            $ref: '#/components/schemas/model.APITaskSpecifier'
          type: array
        variants_tasks:
          description: |-
            The list of variants/tasks from the alias that will run in the downstream
            project.
          items:
            $ref: '#/components/schemas/model.VariantTask'
          type: array
      type: object
    model.APIPeriodicBuildDefinition:
      example:
        cron: cron
        next_run_time: next_run_time
        alias: alias
        id: id
        message: message
        config_file: config_file
        interval_hours: 5
      properties:
        alias:
          description: Alias to run for the periodic build.
          type: string
        config_file:
          description: Project config file to use for the periodic build.
          type: string
        cron:
          description: Cron specification for when to run periodic builds.
          type: string
        id:
          description: Identifier for the periodic build.
          type: string
        interval_hours:
          description: Interval (in hours) between periodic build runs.
          type: integer
        message:
          description: Message to display in the version metadata.
          type: string
        next_run_time:
          description: Next time that the periodic build will run.
          type: string
      type: object
    model.APIPermission:
      example:
        name: name
        key: key
        levels:
        - description: description
          value: 0
        - description: description
          value: 0
      properties:
        key:
          type: string
        levels:
          items:
            $ref: '#/components/schemas/evergreen.PermissionLevel'
          type: array
        name:
          type: string
      type: object
    model.APIPermissions:
      example:
        projectPermissions:
        - name: name
          key: key
          levels:
          - description: description
            value: 0
          - description: description
            value: 0
        - name: name
          key: key
          levels:
          - description: description
            value: 0
          - description: description
            value: 0
        distroPermissions:
        - name: name
          key: key
          levels:
          - description: description
            value: 0
          - description: description
            value: 0
        - name: name
          key: key
          levels:
          - description: description
            value: 0
          - description: description
            value: 0
      properties:
        distroPermissions:
          items:
            $ref: '#/components/schemas/model.APIPermission'
          type: array
        projectPermissions:
          items:
            $ref: '#/components/schemas/model.APIPermission'
          type: array
      type: object
    model.APIPlannerSettings:
      example:
        expected_runtime_factor: 4
        mainline_time_in_queue_factor: 1
        target_time: 7
        patch_time_in_queue_factor: 6
        patch_factor: 1
        generate_task_factor: 7
        num_dependents_factor: 1.0246457001441578
        group_versions: true
        version: version
        commit_queue_factor: 2
      properties:
        commit_queue_factor:
          type: integer
        expected_runtime_factor:
          type: integer
        generate_task_factor:
          type: integer
        group_versions:
          type: boolean
        mainline_time_in_queue_factor:
          type: integer
        num_dependents_factor:
          type: number
        patch_factor:
          type: integer
        patch_time_in_queue_factor:
          type: integer
        target_time:
          type: integer
        version:
          type: string
      type: object
    model.APIPreconditionScript:
      example:
        path: path
        script: script
      properties:
        path:
          type: string
        script:
          type: string
      type: object
    model.APIProjectAlias:
      example:
        variant_tags:
        - variant_tags
        - variant_tags
        git_tag: git_tag
        task: task
        variant: variant
        alias: alias
        description: description
        _id: _id
        remote_path: remote_path
        delete: true
        parameters:
        - value: value
          key: key
        - value: value
          key: key
        tags:
        - tags
        - tags
      properties:
        _id:
          description: Identifier for the project alias.
          type: string
        alias:
          description: Name of the alias.
          type: string
        delete:
          description: "If set, deletes the project alias by name."
          type: boolean
        description:
          description: Human-friendly description for the alias.
          type: string
        git_tag:
          description: Regex for matching git tags to run git tag versions.
          type: string
        parameters:
          description: List of allowed parameters to the alias.
          items:
            $ref: '#/components/schemas/model.APIParameter'
          type: array
        remote_path:
          description: Path to project config file to use.
          type: string
        tags:
          description: Task tag selectors to match.
          items:
            type: string
          type: array
        task:
          description: Regex for tasks to match.
          type: string
        variant:
          description: Regex for build variants to match.
          type: string
        variant_tags:
          description: Build variant tags selectors to match.
          items:
            type: string
          type: array
      type: object
    model.APIProjectBanner:
      properties:
        text:
          description: Banner text.
          type: string
        theme:
          allOf:
          - $ref: '#/components/schemas/evergreen.BannerTheme'
          description: Banner theme.
          type: object
      type: object
    model.APIProjectRef:
      example:
        build_baron_settings: "{}"
        stepback_bisect: true
        subscriptions:
        - owner: owner
          subscriber: "{}"
          resource_type: resource_type
          id: id
          trigger: trigger
          selectors:
          - data: data
            type: type
          - data: data
            type: type
          regex_selectors:
          - data: data
            type: type
          - data: data
            type: type
          owner_type: owner_type
          trigger_data:
            key: trigger_data
        - owner: owner
          subscriber: "{}"
          resource_type: resource_type
          id: id
          trigger: trigger
          selectors:
          - data: data
            type: type
          - data: data
            type: type
          regex_selectors:
          - data: data
            type: type
          - data: data
            type: type
          owner_type: owner_type
          trigger_data:
            key: trigger_data
        aliases:
        - variant_tags:
          - variant_tags
          - variant_tags
          git_tag: git_tag
          task: task
          variant: variant
          alias: alias
          description: description
          _id: _id
          remote_path: remote_path
          delete: true
          parameters:
          - value: value
            key: key
          - value: value
            key: key
          tags:
          - tags
          - tags
        - variant_tags:
          - variant_tags
          - variant_tags
          git_tag: git_tag
          task: task
          variant: variant
          alias: alias
          description: description
          _id: _id
          remote_path: remote_path
          delete: true
          parameters:
          - value: value
            key: key
          - value: value
            key: key
          tags:
          - tags
          - tags
        delete_subscriptions:
        - delete_subscriptions
        - delete_subscriptions
        tracks_push_events: true
        delete_git_tag_authorized_teams:
        - delete_git_tag_authorized_teams
        - delete_git_tag_authorized_teams
        repotracker_disabled: true
        id: id
        manual_pr_testing_enabled: true
        identifier: identifier
        task_annotation_settings: "{}"
        owner_name: owner_name
        delete_admins:
        - delete_admins
        - delete_admins
        github_checks_enabled: true
        display_name: display_name
        triggers:
        - definition_id: definition_id
          task_regex: task_regex
          level: level
          date_cutoff: 5
          alias: alias
          project: project
          unschedule_downstream_versions: true
          config_file: config_file
          variant_regex: variant_regex
          status: status
        - definition_id: definition_id
          task_regex: task_regex
          level: level
          date_cutoff: 5
          alias: alias
          project: project
          unschedule_downstream_versions: true
          config_file: config_file
          variant_regex: variant_regex
          status: status
        git_tag_authorized_teams:
        - git_tag_authorized_teams
        - git_tag_authorized_teams
        repo_ref_id: repo_ref_id
        revision: revision
        stepback_disabled: true
        parsley_filters:
        - exact_match: true
          expression: expression
          case_sensitive: true
        - exact_match: true
          expression: expression
          case_sensitive: true
        pr_testing_enabled: true
        workstation_config: "{}"
        repotracker_error: "{}"
        oldest_allowed_merge_base: oldest_allowed_merge_base
        external_links:
        - requesters:
          - requesters
          - requesters
          url_template: url_template
          display_name: display_name
        - requesters:
          - requesters
          - requesters
          url_template: url_template
          display_name: display_name
        batch_time: 0
        delete_git_tag_authorized_users:
        - delete_git_tag_authorized_users
        - delete_git_tag_authorized_users
        disabled_stats_cache: true
        project_health_view: "{}"
        patching_disabled: true
        git_tag_versions_enabled: true
        admins:
        - admins
        - admins
        hidden: true
        github_permission_group_by_requester:
          key: github_permission_group_by_requester
        github_trigger_aliases:
        - github_trigger_aliases
        - github_trigger_aliases
        remote_path: remote_path
        enabled: true
        notify_on_failure: true
        branch_name: branch_name
        version_control_enabled: true
        repo_name: repo_name
        use_repo_settings: true
        delete_container_secrets:
        - delete_container_secrets
        - delete_container_secrets
        perf_enabled: true
        variables: "{}"
        spawn_host_script_path: spawn_host_script_path
        periodic_builds:
        - cron: cron
          next_run_time: next_run_time
          alias: alias
          id: id
          message: message
          config_file: config_file
          interval_hours: 5
        - cron: cron
          next_run_time: next_run_time
          alias: alias
          id: id
          message: message
          config_file: config_file
          interval_hours: 5
        banner: "{}"
        container_secrets:
        - should_rotate: true
          name: name
          repo_creds: "{}"
          external_id: external_id
          type: type
          external_name: external_name
          value: value
        - should_rotate: true
          name: name
          repo_creds: "{}"
          external_id: external_id
          type: type
          external_name: external_name
          value: value
        patch_trigger_aliases:
        - downstream_revision: downstream_revision
          child_project_identifier: child_project_identifier
          child_project_id: child_project_id
          parent_as_module: parent_as_module
          task_specifiers:
          - task_regex: task_regex
            variant_regex: variant_regex
            patch_alias: patch_alias
          - task_regex: task_regex
            variant_regex: variant_regex
            patch_alias: patch_alias
          alias: alias
          variants_tasks:
          - name: name
            tasks:
            - tasks
            - tasks
          - name: name
            tasks:
            - tasks
            - tasks
          status: status
        - downstream_revision: downstream_revision
          child_project_identifier: child_project_identifier
          child_project_id: child_project_id
          parent_as_module: parent_as_module
          task_specifiers:
          - task_regex: task_regex
            variant_regex: variant_regex
            patch_alias: patch_alias
          - task_regex: task_regex
            variant_regex: variant_regex
            patch_alias: patch_alias
          alias: alias
          variants_tasks:
          - name: name
            tasks:
            - tasks
            - tasks
          - name: name
            tasks:
            - tasks
            - tasks
          status: status
        git_tag_authorized_users:
        - git_tag_authorized_users
        - git_tag_authorized_users
        deactivate_previous: true
        dispatching_disabled: true
        restricted: true
        commit_queue: "{}"
        github_dynamic_token_permission_groups:
        - permissions:
            key: permissions
          name: name
          all_permissions: true
        - permissions:
            key: permissions
          name: name
          all_permissions: true
        container_size_definitions:
        - name: name
          cpu: 6
          memory_mb: 1
        - name: name
          cpu: 6
          memory_mb: 1
      properties:
        admins:
          description: Usernames of project admins. Can be null for some projects
            (EVG-6598).
          items:
            type: string
          type: array
        aliases:
          description: List of aliases for the project.
          items:
            $ref: '#/components/schemas/model.APIProjectAlias'
          type: array
        banner:
          allOf:
          - $ref: '#/components/schemas/model.APIProjectBanner'
          description: Options for banner to display for the project.
          type: object
        batch_time:
          description: Time interval between commits for Evergreen to activate.
          type: integer
        branch_name:
          description: Name of tracking branch.
          type: string
        build_baron_settings:
          allOf:
          - $ref: '#/components/schemas/model.APIBuildBaronSettings'
          description: Options for Build Baron.
          type: object
        commit_queue:
          allOf:
          - $ref: '#/components/schemas/model.APICommitQueueParams'
          description: Options for commit queue.
          type: object
        container_secrets:
          description: List of container secrets.
          items:
            $ref: '#/components/schemas/model.APIContainerSecret'
          type: array
        container_size_definitions:
          description: List of container size definitions
          items:
            $ref: '#/components/schemas/model.APIContainerResources'
          type: array
        deactivate_previous:
          description: List of identifiers of tasks used in this patch.
          type: boolean
        delete_admins:
          description: Usernames of project admins to remove.
          items:
            type: string
          type: array
        delete_container_secrets:
          description: Names of container secrets to be deleted.
          items:
            type: string
          type: array
        delete_git_tag_authorized_teams:
          description: Names of GitHub teams authorized to submit git tag versions
            to remove.
          items:
            type: string
          type: array
        delete_git_tag_authorized_users:
          description: Usernames of git tag-authorized users to remove.
          items:
            type: string
          type: array
        delete_subscriptions:
          description: IDs of subscriptions to delete.
          items:
            type: string
          type: array
        disabled_stats_cache:
          description: Disable stats caching.
          type: boolean
        dispatching_disabled:
          description: Disable task dispatching.
          type: boolean
        display_name:
          description: Project name displayed to users.
          type: string
        enabled:
          description: Whether evergreen is enabled for this project.
          type: boolean
        external_links:
          description: List of external links in the version metadata.
          items:
            $ref: '#/components/schemas/model.APIExternalLink'
          type: array
        git_tag_authorized_teams:
          description: Names of GitHub teams authorized to submit git tag versions.
          items:
            type: string
          type: array
        git_tag_authorized_users:
          description: Usernames authorized to submit git tag versions.
          items:
            type: string
          type: array
        git_tag_versions_enabled:
          description: Enable testing when git tags are pushed.
          type: boolean
        github_checks_enabled:
          description: Enable GitHub checks.
          type: boolean
        github_dynamic_token_permission_groups:
          description: List of GitHub permission groups.
          items:
            $ref: '#/components/schemas/model.APIGitHubDynamicTokenPermissionGroup'
          type: array
        github_permission_group_by_requester:
          additionalProperties:
            type: string
          description: GitHub permission group by requester.
          type: object
        github_trigger_aliases:
          description: List of GitHub trigger aliases.
          items:
            type: string
          type: array
        hidden:
          description: |-
            Whether or not the project can be seen in the UI. Cannot be modified by
            users.
          type: boolean
        id:
          type: string
        identifier:
          description: Internal evergreen identifier for project.
          type: string
        manual_pr_testing_enabled:
          description: Enable GitHub manual pull request testing.
          type: boolean
        notify_on_failure:
          description: Notify original committer (or admins) when build fails.
          type: boolean
        oldest_allowed_merge_base:
          description: Oldest allowed merge base for PR patches
          type: string
        owner_name:
          description: GitHub org name.
          type: string
        parsley_filters:
          description: List of custom Parsley filters.
          items:
            $ref: '#/components/schemas/model.APIParsleyFilter'
          type: array
        patch_trigger_aliases:
          description: List of patch trigger aliases.
          items:
            $ref: '#/components/schemas/model.APIPatchTriggerDefinition'
          type: array
        patching_disabled:
          description: Disable patching.
          type: boolean
        perf_enabled:
          description: Enable the performance plugin.
          type: boolean
        periodic_builds:
          description: List of periodic build definitions.
          items:
            $ref: '#/components/schemas/model.APIPeriodicBuildDefinition'
          type: array
        pr_testing_enabled:
          description: Enable GitHub automated pull request testing.
          type: boolean
        project_health_view:
          allOf:
          - $ref: '#/components/schemas/model.ProjectHealthView'
          description: Default project health view.
          type: object
        remote_path:
          description: Path to config file in repo.
          type: string
        repo_name:
          description: GitHub repository name.
          type: string
        repo_ref_id:
          description: Identifier of the attached repo ref. Cannot be modified by
            users.
          type: string
        repotracker_disabled:
          description: Disable the repotracker.
          type: boolean
        repotracker_error:
          allOf:
          - $ref: '#/components/schemas/model.APIRepositoryErrorDetails'
          description: "Error from the repotracker, if any. Cannot be modified by\
            \ users."
          type: object
        restricted:
          description: |-
            Prevent users from being able to view this project unless explicitly
            granted access.
          type: boolean
        revision:
          description: Only used when modifying projects to change the base revision
            and run the repotracker.
          type: string
        spawn_host_script_path:
          description: |-
            File path to script that users can run on spawn hosts loaded with task
            data.
          type: string
        stepback_bisect:
          description: Use bisect stepback instead of linear.
          type: boolean
        stepback_disabled:
          description: Disable stepback.
          type: boolean
        subscriptions:
          description: List of subscriptions for the project.
          items:
            $ref: '#/components/schemas/model.APISubscription'
          type: array
        task_annotation_settings:
          allOf:
          - $ref: '#/components/schemas/model.APITaskAnnotationSettings'
          description: Options for task annotations.
          type: object
        tracks_push_events:
          description: "If true, repotracker is run on github push events. If false,\
            \ repotracker is run periodically every few minutes."
          type: boolean
        triggers:
          description: List of triggers for the project.
          items:
            $ref: '#/components/schemas/model.APITriggerDefinition'
          type: array
        use_repo_settings:
          description: Whether or not to default to using repo settings.
          type: boolean
        variables:
          allOf:
          - $ref: '#/components/schemas/model.APIProjectVars'
          description: Project variables information
          type: object
        version_control_enabled:
          description: Enable setting project aliases from version-controlled project
            configs.
          type: boolean
        workstation_config:
          allOf:
          - $ref: '#/components/schemas/model.APIWorkstationConfig'
          description: Options for workstations.
          type: object
      type: object
    model.APIProjectVars:
      properties:
        admin_only_vars:
          additionalProperties:
            type: boolean
          description: Admin-only variable names.
          type: object
        private_vars:
          additionalProperties:
            type: boolean
          description: Private variable names.
          type: object
        vars:
          additionalProperties:
            type: string
          description: Regular project variable names and their values.
          type: object
        vars_to_delete:
          description: Names of project variables to delete.
          items:
            type: string
          type: array
      type: object
    model.APIProvisionOptions:
      properties:
        task_id:
          description: ID of the task that the host was spawned from.
          type: string
      type: object
    model.APIPubKey:
      example:
        name: name
        key: key
      properties:
        key:
          type: string
        name:
          type: string
      type: object
    model.APIQuestionAnswer:
      example:
        answer: answer
        id: id
        prompt: prompt
      properties:
        answer:
          type: string
        id:
          type: string
        prompt:
          type: string
      type: object
    model.APIRawModule:
      example:
        githash: githash
        name: name
        diff: diff
      properties:
        diff:
          description: The module diff
          type: string
        githash:
          description: The githash for the module
          type: string
        name:
          description: The module name
          type: string
      type: object
    model.APIRawPatch:
      example:
        patch: "{}"
        raw_modules:
        - githash: githash
          name: name
          diff: diff
        - githash: githash
          name: name
          diff: diff
      properties:
        patch:
          allOf:
          - $ref: '#/components/schemas/model.APIRawModule'
          description: The main patch
          type: object
        raw_modules:
          description: The list of module diffs
          items:
            $ref: '#/components/schemas/model.APIRawModule'
          type: array
      type: object
    model.APIRepositoryCredentials:
      properties:
        password:
          type: string
        username:
          type: string
      type: object
    model.APIRepositoryErrorDetails:
      properties:
        exists:
          type: boolean
        invalid_revision:
          type: string
        merge_base_revision:
          type: string
      type: object
    model.APIResourceLimits:
      example:
        num_tasks: 5
        virtual_memory: 5
        num_processes: 1
        num_files: 6
        locked_memory: 0
      properties:
        locked_memory:
          type: integer
        num_files:
          type: integer
        num_processes:
          type: integer
        num_tasks:
          type: integer
        virtual_memory:
          type: integer
      type: object
    model.APISelector:
      example:
        data: data
        type: type
      properties:
        data:
          type: string
        type:
          type: string
      type: object
    model.APISource:
      properties:
        author:
          description: The author of the edit
          type: string
        requester:
          description: The source of the request (api or ui)
          type: string
        time:
          description: The time of the edit
          type: string
      type: object
    model.APISpawnHostModify:
      properties:
        action:
          type: string
        add_hours:
          type: string
        expiration:
          type: string
        host_id:
          type: string
        instance_type:
          type: string
        new_name:
          type: string
        rdp_pwd:
          type: string
        tags_to_add:
          items:
            type: string
          type: array
        tags_to_delete:
          items:
            type: string
          type: array
        volume_id:
          type: string
      type: object
    model.APIStepbackInfo:
      properties:
        last_failing_stepback_task_id:
          type: string
        last_passing_stepback_task_id:
          type: string
        next_stepback_task_id:
          type: string
        previous_stepback_task_id:
          type: string
      type: object
    model.APISubscriber:
      properties:
        type:
          type: string
      type: object
    model.APISubscription:
      example:
        owner: owner
        subscriber: "{}"
        resource_type: resource_type
        id: id
        trigger: trigger
        selectors:
        - data: data
          type: type
        - data: data
          type: type
        regex_selectors:
        - data: data
          type: type
        - data: data
          type: type
        owner_type: owner_type
        trigger_data:
          key: trigger_data
      properties:
        id:
          description: Identifier for the subscription.
          type: string
        owner:
          description: The subscription owner.
          type: string
        owner_type:
          description: Type of subscription owner.
          type: string
        regex_selectors:
          description: List of resource regex selectors.
          items:
            $ref: '#/components/schemas/model.APISelector'
          type: array
        resource_type:
          description: Type of resource to subscribe to.
          type: string
        selectors:
          description: List of resource selectors.
          items:
            $ref: '#/components/schemas/model.APISelector'
          type: array
        subscriber:
          allOf:
          - $ref: '#/components/schemas/model.APISubscriber'
          description: Options for the subscriber.
          type: object
        trigger:
          description: Type of trigger for the subscription.
          type: string
        trigger_data:
          additionalProperties:
            type: string
          description: Data for the particular condition that triggers the subscription.
          type: object
      type: object
    model.APITask:
      example:
        container: container
        previous_executions:
        - null
        - null
        parent_task_id: parent_task_id
        aborted: true
        base_task:
          id: id
          status: status
        scheduled_time: scheduled_time
        project_id: project_id
        distro_id: distro_id
        container_allocation_attempts: 0
        build_variant_display_name: build_variant_display_name
        container_allocated_time: container_allocated_time
        logs: "{}"
        artifacts:
        - ignore_for_fetch: true
          content_type: content_type
          visibility: visibility
          name: name
          url_parsley: url_parsley
          url: url
        - ignore_for_fetch: true
          content_type: content_type
          visibility: visibility
          name: name
          url_parsley: url_parsley
          url: url
        order: 7
        est_wait_to_start_ms: 5
        execution_tasks:
        - execution_tasks
        - execution_tasks
        requester: requester
        dispatch_time: dispatch_time
        create_time: create_time
        mainline: true
        expected_duration_ms: 2
        must_have_test_results: true
        display_name: display_name
        priority: 9
        project_identifier: project_identifier
        finish_time: finish_time
        revision: revision
        tags:
        - tags
        - tags
        start_time: start_time
        build_id: build_id
        ami: ami
        pod_id: pod_id
        build_variant: build_variant
        status: status
        ingest_time: ingest_time
        activated_time: activated_time
        time_taken_ms: 7
        task_id: task_id
        display_only: true
        abort_info:
          pr_closed: true
          task_id: task_id
          new_version: new_version
          user: user
        archived: true
        task_group: task_group
        activated_by: activated_by
        blocked: true
        status_details: "{}"
        display_status: display_status
        execution: 5
        task_group_max_hosts: 3
        container_allocated: true
        depends_on:
        - id: id
          status: status
        - id: id
          status: status
        container_options:
          image: image
          os: os
          working_dir: working_dir
          cpu: 6
          memory_mb: 1
          arch: arch
          windows_version: windows_version
          repo_creds_name: repo_creds_name
        version_id: version_id
        host_id: host_id
        parsley_logs: "{}"
        generated_by: generated_by
        reset_when_finished: true
        generate_task: true
        stepback_info: "{}"
        test_results:
        - duration: 2.027123023002322
          execution: 4
          start_time: start_time
          base_status: base_status
          group_id: group_id
          end_time: end_time
          task_id: task_id
          test_file: test_file
          logs: "{}"
          status: status
          test_id: test_id
        - duration: 2.027123023002322
          execution: 4
          start_time: start_time
          base_status: base_status
          group_id: group_id
          end_time: end_time
          task_id: task_id
          test_file: test_file
          logs: "{}"
          status: status
          test_id: test_id
        activated: true
      properties:
        abort_info:
          $ref: '#/components/schemas/model.APIAbortInfo'
        aborted:
          type: boolean
        activated:
          description: Whether the task is currently active
          type: boolean
        activated_by:
          description: Identifier of the process or user that activated this task
          type: string
        activated_time:
          type: string
        ami:
          type: string
        archived:
          type: boolean
        artifacts:
          description: The list of artifacts associated with the task.
          items:
            $ref: '#/components/schemas/model.APIFile'
          type: array
        base_task:
          $ref: '#/components/schemas/model.APIBaseTaskInfo'
        blocked:
          type: boolean
        build_id:
          description: Identifier of the build that this task is part of
          type: string
        build_variant:
          description: Name of the buildvariant that this task runs on
          type: string
        build_variant_display_name:
          type: string
        container:
          type: string
        container_allocated:
          type: boolean
        container_allocated_time:
          type: string
        container_allocation_attempts:
          type: integer
        container_options:
          $ref: '#/components/schemas/model.APIContainerOptions'
        create_time:
          description: Time that this task was first created
          type: string
        depends_on:
          description: List of task_ids of task that this task depends on before beginning
          items:
            $ref: '#/components/schemas/model.APIDependency'
          type: array
        dispatch_time:
          description: Time that this time was dispatched
          type: string
        display_name:
          description: Name of this task displayed in the UI
          type: string
        display_only:
          type: boolean
        display_status:
          description: |-
            The status of this task that is displayed in the UI (possible values are
            "will-run", "unscheduled", "blocked", "dispatched", "started", "success",
            "failed", "aborted", "system-failed", "system-unresponsive",
            "system-timed-out", "task-timed-out", "known-issue")
          type: string
        distro_id:
          description: Identifier of the distro that this task runs on
          type: string
        est_wait_to_start_ms:
          type: integer
        execution:
          description: The number of the execution of this particular task
          type: integer
        execution_tasks:
          items:
            type: string
          type: array
        expected_duration_ms:
          description: Number of milliseconds expected for this task to execute
          type: integer
        finish_time:
          description: Time that this task finished execution
          type: string
        generate_task:
          type: boolean
        generated_by:
          type: string
        host_id:
          description: The ID of the host this task ran or is running on
          type: string
        ingest_time:
          type: string
        logs:
          allOf:
          - $ref: '#/components/schemas/model.LogLinks'
          description: Object containing raw and event logs for this task
          type: object
        mainline:
          type: boolean
        must_have_test_results:
          type: boolean
        order:
          description: |-
            For mainline commits, represents the position in the commit history of
            commit this task is associated with. For patches, this represents the
            number of total patches submitted by the user.
          type: integer
        parent_task_id:
          description: "The ID of the task's parent display task, if requested and\
            \ available"
          type: string
        parsley_logs:
          allOf:
          - $ref: '#/components/schemas/model.LogLinks'
          description: Object containing parsley logs for this task
          type: object
        pod_id:
          type: string
        previous_executions:
          description: |-
            Contains previous executions of the task if they were requested, and
            available. May be empty
          items:
            $ref: '#/components/schemas/model.APITask'
          type: array
        priority:
          description: The priority of this task to be run
          type: integer
        project_id:
          type: string
        project_identifier:
          type: string
        requester:
          description: |-
            Version created by one of patch_request", "github_pull_request",
            "gitter_request" (caused by git commit, aka the repotracker requester),
            "trigger_request" (Project Trigger versions) , "merge_test" (commit queue
            patches), "ad_hoc" (periodic builds)
          type: string
        reset_when_finished:
          type: boolean
        revision:
          description: The version control identifier associated with this task
          type: string
        scheduled_time:
          description: Time that this task is scheduled to begin
          type: string
        start_time:
          description: Time that this task began execution
          type: string
        status:
          description: |-
            The current status of this task (possible values are "undispatched",
            "dispatched", "started", "success", and "failed")
          type: string
        status_details:
          allOf:
          - $ref: '#/components/schemas/model.ApiTaskEndDetail'
          description: Object containing additional information about the status
          type: object
        stepback_info:
          allOf:
          - $ref: '#/components/schemas/model.APIStepbackInfo'
          description: "The information, if any, about stepback"
          type: object
        tags:
          description: "List of tags defined for the task, if any"
          items:
            type: string
          type: array
        task_group:
          type: string
        task_group_max_hosts:
          type: integer
        task_id:
          description: Unique identifier of this task
          type: string
        test_results:
          items:
            $ref: '#/components/schemas/model.APITest'
          type: array
        time_taken_ms:
          description: Number of milliseconds this task took during execution
          type: integer
        version_id:
          description: An identifier of this task by its project and commit hash
          type: string
      type: object
    model.APITaskAnnotation:
      example:
        metadata_links:
        - source: "{}"
          text: text
          url: url
        - source: "{}"
          text: text
          url: url
        note: "{}"
        metadata: "{}"
        task_id: task_id
        id: id
        task_execution: 6
        issues:
        - issue_key: issue_key
          confidence_score: 0.8008281904610115
          source: "{}"
          url: url
        - issue_key: issue_key
          confidence_score: 0.8008281904610115
          source: "{}"
          url: url
        suspected_issues:
        - issue_key: issue_key
          confidence_score: 0.8008281904610115
          source: "{}"
          url: url
        - issue_key: issue_key
          confidence_score: 0.8008281904610115
          source: "{}"
          url: url
        created_issues:
        - issue_key: issue_key
          confidence_score: 0.8008281904610115
          source: "{}"
          url: url
        - issue_key: issue_key
          confidence_score: 0.8008281904610115
          source: "{}"
          url: url
      properties:
        created_issues:
          items:
            $ref: '#/components/schemas/model.APIIssueLink'
          type: array
        id:
          type: string
        issues:
          description: Links to tickets definitely related
          items:
            $ref: '#/components/schemas/model.APIIssueLink'
          type: array
        metadata:
          description: "Structured data about the task. Since this is user-given json\
            \ data, the structure can differ between annotations"
          properties: {}
          type: object
        metadata_links:
          description: "List of links associated with a task, to be displayed in the\
            \ task metadata sidebar, currently limited to 1"
          items:
            $ref: '#/components/schemas/model.APIMetadataLink'
          type: array
        note:
          allOf:
          - $ref: '#/components/schemas/model.APINote'
          description: Comment about the task failure
          type: object
        suspected_issues:
          description: Links to tickets possibly related
          items:
            $ref: '#/components/schemas/model.APIIssueLink'
          type: array
        task_execution:
          description: The number of the execution of the task that the annotation
            is for
          type: integer
        task_id:
          description: Identifier of the task that this annotation is for
          type: string
      type: object
    model.APITaskAnnotationSettings:
      properties:
        web_hook:
          allOf:
          - $ref: '#/components/schemas/model.APIWebHook'
          description: Options for webhooks.
          type: object
      type: object
    model.APITaskCache:
      example:
        start_time: start_time
        time_taken_ms: 7
        id: id
        display_name: display_name
        failed_test_names:
        - failed_test_names
        - failed_test_names
        task_end_details:
          post_errored: true
          trace_id: trace_id
          timeout_duration: 5
          failure_metadata_tags:
          - failure_metadata_tags
          - failure_metadata_tags
          timeout_type: timeout_type
          disk_devices:
          - disk_devices
          - disk_devices
          timed_out: true
          type: type
          modules:
            prefixes:
              key: prefixes
          failing_command: failing_command
          oom_killer:
            detected: true
            pids:
            - 5
            - 5
          other_failing_commands:
          - full_display_name: full_display_name
            failure_metadata_tags:
            - failure_metadata_tags
            - failure_metadata_tags
          - full_display_name: full_display_name
            failure_metadata_tags:
            - failure_metadata_tags
            - failure_metadata_tags
          desc: desc
          status: status
        time_taken: 2
        activated: true
        status: status
      properties:
        activated:
          type: boolean
        display_name:
          type: string
        failed_test_names:
          items:
            type: string
          type: array
        id:
          type: string
        start_time:
          type: string
        status:
          type: string
        task_end_details:
          $ref: '#/components/schemas/apimodels.TaskEndDetail'
        time_taken:
          type: integer
        time_taken_ms:
          type: integer
      type: object
    model.APITaskLimitsConfig:
      example:
        max_task_execution: 4
        max_parser_project_size: 3
        max_degraded_mode_parser_project_size: 5
        max_hourly_patch_tasks: 7
        max_concurrent_large_parser_project_tasks: 0
        max_daily_automatic_restarts: 6
        max_pending_generated_tasks: 2
        max_tasks_per_version: 7
        max_generate_task_json_size: 2
        max_includes_per_version: 9
        max_degraded_mode_concurrent_large_parser_project_tasks: 1
        max_exec_timeout_secs: 5
      properties:
        max_concurrent_large_parser_project_tasks:
          description: MaxConcurrentLargeParserProjectTasks is the maximum number
            of tasks with parser projects stored in S3 that can be running at once.
          type: integer
        max_daily_automatic_restarts:
          description: MaxDailyAutomaticRestarts is the maximum number of times a
            project can automatically restart a task within a 24-hour period.
          type: integer
        max_degraded_mode_concurrent_large_parser_project_tasks:
          description: MaxDegradedModeConcurrentLargeParserProjectTasks is the maximum
            number of tasks with parser projects stored in S3 that can be running
            at once during CPU degraded mode.
          type: integer
        max_degraded_mode_parser_project_size:
          description: MaxDegradedModeParserProjectSize is the maximum parser project
            size in MB during CPU degraded mode.
          type: integer
        max_exec_timeout_secs:
          description: MaxExecTimeoutSecs is the maximum number of seconds a task
            can run and set their timeout to.
          type: integer
        max_generate_task_json_size:
          description: MaxGenerateTaskJSONSize is the maximum size of a JSON file
            in MB that can be specified in the GenerateTasks command.
          type: integer
        max_hourly_patch_tasks:
          description: |-
            MaxHourlyPatchTasks is the maximum number of patch tasks a single user can
            schedule per hour.
          type: integer
        max_includes_per_version:
          description: |-
            MaxIncludesPerVersion is the maximum number of includes that a single
            version can have.
          type: integer
        max_parser_project_size:
          description: MaxParserProjectSize is the maximum allowed size in MB for
            parser projects that are stored in S3.
          type: integer
        max_pending_generated_tasks:
          description: |-
            MaxPendingGeneratedTasks is the maximum number of tasks that can be created
            by all generated task at once.
          type: integer
        max_task_execution:
          description: MaxTaskExecution is the maximum task (zero based) execution
            number.
          type: integer
        max_tasks_per_version:
          description: |-
            MaxTasksPerVersion is the maximum number of tasks that a single version
            can have.
          type: integer
      type: object
    model.APITaskSpecifier:
      example:
        task_regex: task_regex
        variant_regex: variant_regex
        patch_alias: patch_alias
      properties:
        patch_alias:
          description: Patch alias to run.
          type: string
        task_regex:
          description: Regex matching tasks to run.
          type: string
        variant_regex:
          description: Regex matching build variants to run.
          type: string
      type: object
    model.APITest:
      example:
        duration: 2.027123023002322
        execution: 4
        start_time: start_time
        base_status: base_status
        group_id: group_id
        end_time: end_time
        task_id: task_id
        test_file: test_file
        logs: "{}"
        status: status
        test_id: test_id
      properties:
        base_status:
          type: string
        duration:
          type: number
        end_time:
          description: Time that this test stopped execution
          type: string
        execution:
          type: integer
        group_id:
          type: string
        logs:
          allOf:
          - $ref: '#/components/schemas/model.TestLogs'
          description: Object containing information about the logs for this test
          type: object
        start_time:
          description: Time that this test began execution
          type: string
        status:
          description: Execution status of the test
          type: string
        task_id:
          description: Identifier of the task this test is a part of
          type: string
        test_file:
          description: Name of the test file that this test was run in
          type: string
        test_id:
          type: string
      type: object
    model.APITriggerDefinition:
      example:
        definition_id: definition_id
        task_regex: task_regex
        level: level
        date_cutoff: 5
        alias: alias
        project: project
        unschedule_downstream_versions: true
        config_file: config_file
        variant_regex: variant_regex
        status: status
      properties:
        alias:
          description: Alias to run for the trigger.
          type: string
        config_file:
          description: Project configuration file for the trigger.
          type: string
        date_cutoff:
          description: Number of days after commit when the trigger cannot run.
          type: integer
        definition_id:
          description: Identifier for the definition.
          type: string
        level:
          description: "Trigger on build, task, or push."
          type: string
        project:
          description: Identifier of project to watch.
          type: string
        status:
          description: Task status to trigger for (or "*" for all).
          type: string
        task_regex:
          description: Task regex to match.
          type: string
        unschedule_downstream_versions:
          description: Deactivate downstream versions created by this trigger.
          type: boolean
        variant_regex:
          description: Build variant regex to match.
          type: string
      type: object
    model.APIUseSpruceOptions:
      example:
        has_used_mainline_commits_before: true
        spruce_v1: true
        has_used_spruce_before: true
      properties:
        has_used_mainline_commits_before:
          type: boolean
        has_used_spruce_before:
          type: boolean
        spruce_v1:
          type: boolean
      type: object
    model.APIUserSettings:
      example:
        github_user:
          uid: 0
          last_known_as: last_known_as
        slack_member_id: slack_member_id
        time_format: time_format
        timezone: timezone
        date_format: date_format
        spruce_feedback:
          submitted_at: submitted_at
          questions:
          - answer: answer
            id: id
            prompt: prompt
          - answer: answer
            id: id
            prompt: prompt
          type: type
          user: user
        region: region
        notifications:
          patch_finish_id: patch_finish_id
          commit_queue_id: commit_queue_id
          spawn_host_expiration_id: spawn_host_expiration_id
          spawn_host_outcome: spawn_host_outcome
          commit_queue: commit_queue
          patch_first_failure_id: patch_first_failure_id
          patch_finish: patch_finish
          spawn_host_outcome_id: spawn_host_outcome_id
          patch_first_failure: patch_first_failure
          spawn_host_expiration: spawn_host_expiration
          build_break: build_break
          build_break_id: build_break_id
        slack_username: slack_username
        use_spruce_options:
          has_used_mainline_commits_before: true
          spruce_v1: true
          has_used_spruce_before: true
      properties:
        date_format:
          type: string
        github_user:
          $ref: '#/components/schemas/model.APIGithubUser'
        notifications:
          $ref: '#/components/schemas/model.APINotificationPreferences'
        region:
          type: string
        slack_member_id:
          type: string
        slack_username:
          type: string
        spruce_feedback:
          $ref: '#/components/schemas/model.APIFeedbackSubmission'
        time_format:
          type: string
        timezone:
          type: string
        use_spruce_options:
          $ref: '#/components/schemas/model.APIUseSpruceOptions'
      type: object
    model.APIVariantTasks:
      example:
        variant: variant
        tasks:
        - tasks
        - tasks
        displayTasks:
        - execution_tasks:
          - execution_tasks
          - execution_tasks
          name: name
        - execution_tasks:
          - execution_tasks
          - execution_tasks
          name: name
      properties:
        displayTasks:
          items:
            $ref: '#/components/schemas/model.APIDisplayTask'
          type: array
        tasks:
          items:
            type: string
          type: array
        variant:
          type: string
      type: object
    model.APIVersion:
      example:
        requester: requester
        ignored: true
        create_time: create_time
        aborted: true
        author: author
        repo: repo
        project: project
        version_id: version_id
        git_tags:
        - pusher: pusher
          tag: tag
        - pusher: pusher
          tag: tag
        message: message
        branch: branch
        project_identifier: project_identifier
        finish_time: finish_time
        revision: revision
        start_time: start_time
        triggered_by_git_tag: "{}"
        builds:
        - create_time: create_time
          definition_info: "{}"
          activated_time: activated_time
          origin: origin
          time_taken_ms: 9
          display_name: display_name
          project_identifier: project_identifier
          version: version
          finish_time: finish_time
          predicted_makespan_ms: 1
          tags:
          - tags
          - tags
          start_time: start_time
          actual_makespan_ms: 0
          activated_by: activated_by
          project_id: project_id
          _id: _id
          status_counts: "{}"
          task_cache:
          - start_time: start_time
            time_taken_ms: 7
            id: id
            display_name: display_name
            failed_test_names:
            - failed_test_names
            - failed_test_names
            task_end_details:
              post_errored: true
              trace_id: trace_id
              timeout_duration: 5
              failure_metadata_tags:
              - failure_metadata_tags
              - failure_metadata_tags
              timeout_type: timeout_type
              disk_devices:
              - disk_devices
              - disk_devices
              timed_out: true
              type: type
              modules:
                prefixes:
                  key: prefixes
              failing_command: failing_command
              oom_killer:
                detected: true
                pids:
                - 5
                - 5
              other_failing_commands:
              - full_display_name: full_display_name
                failure_metadata_tags:
                - failure_metadata_tags
                - failure_metadata_tags
              - full_display_name: full_display_name
                failure_metadata_tags:
                - failure_metadata_tags
                - failure_metadata_tags
              desc: desc
              status: status
            time_taken: 2
            activated: true
            status: status
          - start_time: start_time
            time_taken_ms: 7
            id: id
            display_name: display_name
            failed_test_names:
            - failed_test_names
            - failed_test_names
            task_end_details:
              post_errored: true
              trace_id: trace_id
              timeout_duration: 5
              failure_metadata_tags:
              - failure_metadata_tags
              - failure_metadata_tags
              timeout_type: timeout_type
              disk_devices:
              - disk_devices
              - disk_devices
              timed_out: true
              type: type
              modules:
                prefixes:
                  key: prefixes
              failing_command: failing_command
              oom_killer:
                detected: true
                pids:
                - 5
                - 5
              other_failing_commands:
              - full_display_name: full_display_name
                failure_metadata_tags:
                - failure_metadata_tags
                - failure_metadata_tags
              - full_display_name: full_display_name
                failure_metadata_tags:
                - failure_metadata_tags
                - failure_metadata_tags
              desc: desc
              status: status
            time_taken: 2
            activated: true
            status: status
          build_variant: build_variant
          tasks:
          - tasks
          - tasks
          activated: true
          git_hash: git_hash
          order: 6
          status: status
        - create_time: create_time
          definition_info: "{}"
          activated_time: activated_time
          origin: origin
          time_taken_ms: 9
          display_name: display_name
          project_identifier: project_identifier
          version: version
          finish_time: finish_time
          predicted_makespan_ms: 1
          tags:
          - tags
          - tags
          start_time: start_time
          actual_makespan_ms: 0
          activated_by: activated_by
          project_id: project_id
          _id: _id
          status_counts: "{}"
          task_cache:
          - start_time: start_time
            time_taken_ms: 7
            id: id
            display_name: display_name
            failed_test_names:
            - failed_test_names
            - failed_test_names
            task_end_details:
              post_errored: true
              trace_id: trace_id
              timeout_duration: 5
              failure_metadata_tags:
              - failure_metadata_tags
              - failure_metadata_tags
              timeout_type: timeout_type
              disk_devices:
              - disk_devices
              - disk_devices
              timed_out: true
              type: type
              modules:
                prefixes:
                  key: prefixes
              failing_command: failing_command
              oom_killer:
                detected: true
                pids:
                - 5
                - 5
              other_failing_commands:
              - full_display_name: full_display_name
                failure_metadata_tags:
                - failure_metadata_tags
                - failure_metadata_tags
              - full_display_name: full_display_name
                failure_metadata_tags:
                - failure_metadata_tags
                - failure_metadata_tags
              desc: desc
              status: status
            time_taken: 2
            activated: true
            status: status
          - start_time: start_time
            time_taken_ms: 7
            id: id
            display_name: display_name
            failed_test_names:
            - failed_test_names
            - failed_test_names
            task_end_details:
              post_errored: true
              trace_id: trace_id
              timeout_duration: 5
              failure_metadata_tags:
              - failure_metadata_tags
              - failure_metadata_tags
              timeout_type: timeout_type
              disk_devices:
              - disk_devices
              - disk_devices
              timed_out: true
              type: type
              modules:
                prefixes:
                  key: prefixes
              failing_command: failing_command
              oom_killer:
                detected: true
                pids:
                - 5
                - 5
              other_failing_commands:
              - full_display_name: full_display_name
                failure_metadata_tags:
                - failure_metadata_tags
                - failure_metadata_tags
              - full_display_name: full_display_name
                failure_metadata_tags:
                - failure_metadata_tags
                - failure_metadata_tags
              desc: desc
              status: status
            time_taken: 2
            activated: true
            status: status
          build_variant: build_variant
          tasks:
          - tasks
          - tasks
          activated: true
          git_hash: git_hash
          order: 6
          status: status
        author_email: author_email
        build_variants_status:
        - build_id: build_id
          build_variant: build_variant
        - build_id: build_id
          build_variant: build_variant
        parameters:
        - value: value
          key: key
        - value: value
          key: key
        errors:
        - errors
        - errors
        activated: true
        order: 0
        status: status
      properties:
        aborted:
          type: boolean
        activated:
          description: Will be null for versions created before this field was added.
          type: boolean
        author:
          description: Author of the version
          type: string
        author_email:
          description: Email of the author of the version
          type: string
        branch:
          description: The version control branch where the commit was made
          type: string
        build_variants_status:
          description: List of documents of the associated build variant and the build
            id
          items:
            $ref: '#/components/schemas/model.buildDetail'
          type: array
        builds:
          items:
            $ref: '#/components/schemas/model.APIBuild'
          type: array
        create_time:
          description: Time that the version was first created
          type: string
        errors:
          items:
            type: string
          type: array
        finish_time:
          description: Time at which tasks associated with this version finished running
          type: string
        git_tags:
          description: Git tags that were pushed to this version.
          items:
            $ref: '#/components/schemas/model.APIGitTag'
          type: array
        ignored:
          description: Indicates if the version was ignored due to only making changes
            to ignored files.
          type: boolean
        message:
          description: Message left with the commit
          type: string
        order:
          type: integer
        parameters:
          items:
            $ref: '#/components/schemas/model.APIParameter'
          type: array
        project:
          type: string
        project_identifier:
          type: string
        repo:
          description: The github repository where the commit was made
          type: string
        requester:
          description: |-
            Version created by one of "patch_request", "github_pull_request",
            "gitter_request" (caused by git commit, aka the repotracker requester),
            "trigger_request" (Project Trigger versions) , "github_merge_request" (GitHub merge queue), "ad_hoc" (periodic builds)
          type: string
        revision:
          description: The version control identifier
          type: string
        start_time:
          description: Time at which tasks associated with this version started running
          type: string
        status:
          description: "The status of the version (possible values are \"created\"\
            , \"started\", \"success\", or \"failed\")"
          type: string
        triggered_by_git_tag:
          allOf:
          - $ref: '#/components/schemas/model.APIGitTag'
          description: "The git tag that triggered this version, if any."
          type: object
        version_id:
          type: string
      type: object
    model.APIWebHook:
      properties:
        endpoint:
          description: Webhook endpoint
          type: string
        secret:
          description: Webhook secret
          type: string
      type: object
    model.APIWorkstationConfig:
      properties:
        git_clone:
          description: Git clone the project in the workstation.
          type: boolean
        setup_commands:
          description: List of setup commands to run.
          items:
            $ref: '#/components/schemas/model.APIWorkstationSetupCommand'
          type: array
      type: object
    model.APIWorkstationSetupCommand:
      properties:
        command:
          description: Command to run in the workstation.
          type: string
        directory:
          description: Directory where the command runs.
          type: string
      type: object
    model.ApiTaskEndDetail:
      properties:
        desc:
          description: Description of the final status of this task.
          type: string
        disk_devices:
          items:
            type: string
          type: array
        failing_command:
          description: Command which indiciates the task failure.
          type: string
        failure_metadata_tags:
          description: |-
            FailureMetadataTags contains the metadata tags associated with the
            command that caused the task to fail. These are not set if the task
            succeeded.
          items:
            type: string
          type: array
        oom_tracker_info:
          $ref: '#/components/schemas/model.APIOomTrackerInfo'
        other_failing_commands:
          description: |-
            OtherFailingCommands contain information about commands that failed but
            did not cause the task to fail.
          items:
            $ref: '#/components/schemas/model.APIFailingCommand'
          type: array
        post_errored:
          description: PostErrored is true when the post command errored.
          type: boolean
        status:
          description: The status of the completed task.
          type: string
        timed_out:
          description: Whether this task ended in a timeout.
          type: boolean
        timeout_type:
          type: string
        trace_id:
          type: string
        type:
          description: The method by which the task failed.
          type: string
      type: object
    model.DefinitionInfo:
      properties:
        batchtime:
          description: "The batchtime defined for the variant, if provided, as defined\
            \ in the project settings"
          type: integer
        cron:
          description: "The cron defined for the variant, if provided, as defined\
            \ in the project settings"
          type: string
      type: object
    model.DistroInfo:
      properties:
        bootstrap_method:
          type: string
        distro_id:
          description: Unique Identifier of this distro. Can be used to fetch more
            informaiton about this distro
          type: string
        image_id:
          type: string
        is_virtual_workstation:
          type: boolean
        is_windows:
          type: boolean
        provider:
          description: The service which provides this type of machine
          type: string
        user:
          type: string
        work_dir:
          type: string
      type: object
    model.DownstreamTasks:
      example:
        project: project
        tasks:
        - tasks
        - tasks
        variant_tasks:
        - name: name
          tasks:
          - tasks
          - tasks
        - name: name
          tasks:
          - tasks
          - tasks
      properties:
        project:
          type: string
        tasks:
          items:
            type: string
          type: array
        variant_tasks:
          items:
            $ref: '#/components/schemas/model.VariantTask'
          type: array
      type: object
    model.FileDiff:
      example:
        additions: 6
        deletions: 1
        file_name: file_name
        description: description
        diff_link: diff_link
      properties:
        additions:
          type: integer
        deletions:
          type: integer
        description:
          type: string
        diff_link:
          type: string
        file_name:
          type: string
      type: object
    model.HostRequestOptions:
      type: object
    model.LogLinks:
      properties:
        agent_log:
          description: Link to logs created by the agent process
          type: string
        all_log:
          description: Link to logs containing merged copy of all other logs
          type: string
        event_log:
          type: string
        system_log:
          description: Link to logs created by the machine running the task
          type: string
        task_log:
          description: Link to logs created by the task execution
          type: string
      type: object
    model.ProjectHealthView:
      enum:
      - ALL
      - FAILED
      type: string
      x-enum-varnames:
      - ProjectHealthViewAll
      - ProjectHealthViewFailed
    model.ProjectTaskExecutionResp:
      example:
        num_completed: 0
      properties:
        num_completed:
          type: integer
      type: object
    model.TaskInfo:
      properties:
        build_id:
          description: Unique identifier for the build of the project that this task
            is run as part of
          type: string
        dispatch_time:
          description: Time that this task was dispatched to this host
          type: string
        name:
          description: The name of this task
          type: string
        start_time:
          type: string
        task_id:
          description: Unique Identifier of this task. Can be used to fetch more informaiton
            about this task
          type: string
        version_id:
          description: Unique identifier for the version of the project that this
            task is run as part of
          type: string
      type: object
    model.TestLogs:
      properties:
        line_num:
          description: Line number in the log file corresponding to information about
            this test
          type: integer
        rendering_type:
          type: string
        url:
          description: URL where the log can be fetched
          type: string
        url_parsley:
          type: string
        url_raw:
          description: URL of the unprocessed version of the logs file for this test
          type: string
        version:
          type: integer
      type: object
    model.VariantTask:
      example:
        name: name
        tasks:
        - tasks
        - tasks
      properties:
        name:
          description: Name of build variant
          type: string
        tasks:
          description: All tasks available to run on this build variant
          items:
            type: string
          type: array
      type: object
    model.buildDetail:
      example:
        build_id: build_id
        build_variant: build_variant
      properties:
        build_id:
          type: string
        build_variant:
          type: string
      type: object
    model.githubPatch:
      example:
        head_owner: head_owner
        head_repo: head_repo
        author: author
        pr_number: 0
        base_repo: base_repo
        base_owner: base_owner
        head_hash: head_hash
      properties:
        author:
          type: string
        base_owner:
          type: string
        base_repo:
          type: string
        head_hash:
          type: string
        head_owner:
          type: string
        head_repo:
          type: string
        pr_number:
          type: integer
      type: object
    route.RequestedPermissions:
      type: object
    route.SelectTestsRequest:
      example:
        requester: requester
        task_name: task_name
        tests:
        - tests
        - tests
        project: project
        task_id: task_id
        build_variant: build_variant
      properties:
        build_variant:
          description: BuildVariant is the Evergreen build variant.
          type: string
        project:
          description: Project is the project identifier.
          type: string
        requester:
          description: Requester is the Evergreen requester type.
          type: string
        task_id:
          description: TaskID is the Evergreen task ID.
          type: string
        task_name:
          description: TaskName is the Evergreen task name.
          type: string
        tests:
          description: Tests is a list of test names.
          items:
            type: string
          type: array
      type: object
    route.UsersPermissionsInput:
      properties:
        resource_id:
          description: The resource ID
          type: string
        resource_type:
          description: The resource type
          type: string
      type: object
    route.UsersWithRoleResponse:
      example:
        users:
        - users
        - users
      properties:
        users:
          items:
            type: string
          type: array
      type: object
    route.buildChangeStatusHandler:
      properties:
        activated:
          type: boolean
        priority:
          type: integer
      type: object
    route.copyVariablesOptions:
      properties:
        copy_to:
          description: Required. ProjectID to copy source_project variables to.
          type: string
        dry_run:
          description: |-
            If set to true, route returns the variables from source_project that will
            be copied. (If private, the values will be redacted.) If dry_run is set,
            then the route does not complete the copy, but returns OK if no project
            variables in the source project will be overwritten (this concerns
            all variables in the destination project, but only redacted
            variables in the source project). Otherwise, an error is given which
            includes the project variable keys that overlap. If dry_run is not set,
            the copy is completed, and variables could be overwritten.
          type: boolean
        include_private:
          description: "If set to true, private variables will also be copied."
          type: boolean
        overwrite:
          description: "If set to true, will remove variables from the copy_to project\
            \ that are not in source_project."
          type: boolean
      type: object
    route.deletePermissionsRequest:
      properties:
        resource_id:
          description: |-
            resource_id - the resource ID for which to delete permissions.
              Required unless deleting all permissions.
          type: string
        resource_type:
          description: |-
            resource_type - the type of resources for which to delete permissions. Must
              be one of "project", "distro", "superuser", or "all". "all" will revoke all
              permissions for the user.
          type: string
      type: object
    route.distroIDChangeSetupHandler:
      properties:
        setup:
          description: The updated setup script.
          type: string
      type: object
    route.hostStopOptions:
      properties:
        should_keep_off:
          description: |-
            If this host is an unexpirable host with a sleep schedule, setting this
            to true will keep the host off (and ignore the sleep schedule) until it's
            started back up manually.
          type: boolean
        subscription_type:
          description: The type of subscription to send when the host is stopped ("slack"
            or "email")
          type: string
      type: object
    route.hostSubscriptionInfo:
      properties:
        subscription_type:
          description: The type of subscription to send when the host is running ("slack"
            or "email")
          type: string
      type: object
    route.offboardUserEmail:
      properties:
        email:
          description: the email of the user
          type: string
      required:
      - email
      type: object
    route.patchChangeStatusHandler:
      properties:
        activated:
          description: The priority to set the patch to
          type: boolean
        priority:
          description: The activation status to set the patch to
          type: integer
      type: object
    route.patchTasks:
      properties:
        description:
          description: "Optional, if sent will update the patch's description"
          type: string
        variants:
          description: |-
            Required, these are the variants and tasks that the patch should run.
            For an already-scheduled patch, any new tasks in this array will be
            created and any existing tasks not in this array will be unscheduled.
          items:
            $ref: '#/components/schemas/route.variant'
          type: array
      type: object
    route.renameUserInfo:
      properties:
        email:
          description: The old email of the user
          type: string
        new_email:
          description: The new email of the user
          type: string
      required:
      - email
      - new_email
      type: object
    route.rolesPostRequest:
      properties:
        create_user:
          description: "if true, will also create a shell user document for the user.\
            \ By default, specifying a user that does not exist will error"
          type: boolean
        remove_roles:
          description: The list of roles to remove for the user
          items:
            type: string
          type: array
        roles:
          description: the list of roles to add for the user
          items:
            type: string
          type: array
      type: object
    route.swaggerPermissionSummary:
      example:
        permissions: "{}"
        type: type
      properties:
        permissions:
          allOf:
          - $ref: '#/components/schemas/route.swaggerPermissionsForResources'
          description: |-
            permissions - an object whose keys are the resources for which the user has
              permissions. Note that these objects will often have many keys, since
              logged-in users have basic permissions to every project and distro. The
              values in the keys are objects representing the permissions that the user
              has for that resource, identical to the format of the permissions field in
              the POST /users/\<user_id\>/permissions API.
          type: object
        type:
          description: |-
            type - the type of resources for which the listed permissions apply.
              Will be "project", "distro", or "superuser"
          type: string
      type: object
    route.swaggerPermissions:
      additionalProperties:
        type: integer
      type: object
    route.swaggerPermissionsForResources:
      additionalProperties:
        $ref: '#/components/schemas/route.swaggerPermissions'
      type: object
    route.swaggerUsersPermissionsResult:
      additionalProperties:
        $ref: '#/components/schemas/route.swaggerPermissions'
      type: object
    route.taskExecutionPatchHandler:
      properties:
        activated:
          type: boolean
        priority:
          type: integer
      type: object
    route.taskRestartHandler:
      properties:
        failed_only:
          description: |-
            If set for a display task, restarts only failed execution tasks. When
            used with a non-display task, this parameter has no effect.
          type: boolean
      type: object
    route.variant:
      properties:
        id:
          type: string
        tasks:
          items:
            type: string
          type: array
      type: object
    route.versionPatchHandler:
      properties:
        activated:
          description: Will activate the version if true and deactivate if false.
          type: boolean
      required:
      - activated
      type: object
    task.TaskStatusCount:
      properties:
        dispatched:
          type: integer
        failed:
          type: integer
        inactive:
          type: integer
        started:
          type: integer
        succeeded:
          type: integer
        timed_out:
          type: integer
        undispatched:
          type: integer
      type: object
  securitySchemes:
    Api-Key:
      description: the `api-key` field from https://spruce.mongodb.com/preferences/cli
      in: header
      name: Api-Key
      type: apiKey
    Api-User:
      description: the `user` field from https://spruce.mongodb.com/preferences/cli
      in: header
      name: Api-User
      type: apiKey
x-original-swagger-version: "2.0"
