/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelGithubPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelGithubPatch{}

// ModelGithubPatch struct for ModelGithubPatch
type ModelGithubPatch struct {
	Author *string `json:"author,omitempty"`
	BaseOwner *string `json:"base_owner,omitempty"`
	BaseRepo *string `json:"base_repo,omitempty"`
	HeadHash *string `json:"head_hash,omitempty"`
	HeadOwner *string `json:"head_owner,omitempty"`
	HeadRepo *string `json:"head_repo,omitempty"`
	PrNumber *int32 `json:"pr_number,omitempty"`
}

// NewModelGithubPatch instantiates a new ModelGithubPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelGithubPatch() *ModelGithubPatch {
	this := ModelGithubPatch{}
	return &this
}

// NewModelGithubPatchWithDefaults instantiates a new ModelGithubPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelGithubPatchWithDefaults() *ModelGithubPatch {
	this := ModelGithubPatch{}
	return &this
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *ModelGithubPatch) GetAuthor() string {
	if o == nil || IsNil(o.Author) {
		var ret string
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGithubPatch) GetAuthorOk() (*string, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *ModelGithubPatch) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given string and assigns it to the Author field.
func (o *ModelGithubPatch) SetAuthor(v string) {
	o.Author = &v
}

// GetBaseOwner returns the BaseOwner field value if set, zero value otherwise.
func (o *ModelGithubPatch) GetBaseOwner() string {
	if o == nil || IsNil(o.BaseOwner) {
		var ret string
		return ret
	}
	return *o.BaseOwner
}

// GetBaseOwnerOk returns a tuple with the BaseOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGithubPatch) GetBaseOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.BaseOwner) {
		return nil, false
	}
	return o.BaseOwner, true
}

// HasBaseOwner returns a boolean if a field has been set.
func (o *ModelGithubPatch) HasBaseOwner() bool {
	if o != nil && !IsNil(o.BaseOwner) {
		return true
	}

	return false
}

// SetBaseOwner gets a reference to the given string and assigns it to the BaseOwner field.
func (o *ModelGithubPatch) SetBaseOwner(v string) {
	o.BaseOwner = &v
}

// GetBaseRepo returns the BaseRepo field value if set, zero value otherwise.
func (o *ModelGithubPatch) GetBaseRepo() string {
	if o == nil || IsNil(o.BaseRepo) {
		var ret string
		return ret
	}
	return *o.BaseRepo
}

// GetBaseRepoOk returns a tuple with the BaseRepo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGithubPatch) GetBaseRepoOk() (*string, bool) {
	if o == nil || IsNil(o.BaseRepo) {
		return nil, false
	}
	return o.BaseRepo, true
}

// HasBaseRepo returns a boolean if a field has been set.
func (o *ModelGithubPatch) HasBaseRepo() bool {
	if o != nil && !IsNil(o.BaseRepo) {
		return true
	}

	return false
}

// SetBaseRepo gets a reference to the given string and assigns it to the BaseRepo field.
func (o *ModelGithubPatch) SetBaseRepo(v string) {
	o.BaseRepo = &v
}

// GetHeadHash returns the HeadHash field value if set, zero value otherwise.
func (o *ModelGithubPatch) GetHeadHash() string {
	if o == nil || IsNil(o.HeadHash) {
		var ret string
		return ret
	}
	return *o.HeadHash
}

// GetHeadHashOk returns a tuple with the HeadHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGithubPatch) GetHeadHashOk() (*string, bool) {
	if o == nil || IsNil(o.HeadHash) {
		return nil, false
	}
	return o.HeadHash, true
}

// HasHeadHash returns a boolean if a field has been set.
func (o *ModelGithubPatch) HasHeadHash() bool {
	if o != nil && !IsNil(o.HeadHash) {
		return true
	}

	return false
}

// SetHeadHash gets a reference to the given string and assigns it to the HeadHash field.
func (o *ModelGithubPatch) SetHeadHash(v string) {
	o.HeadHash = &v
}

// GetHeadOwner returns the HeadOwner field value if set, zero value otherwise.
func (o *ModelGithubPatch) GetHeadOwner() string {
	if o == nil || IsNil(o.HeadOwner) {
		var ret string
		return ret
	}
	return *o.HeadOwner
}

// GetHeadOwnerOk returns a tuple with the HeadOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGithubPatch) GetHeadOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.HeadOwner) {
		return nil, false
	}
	return o.HeadOwner, true
}

// HasHeadOwner returns a boolean if a field has been set.
func (o *ModelGithubPatch) HasHeadOwner() bool {
	if o != nil && !IsNil(o.HeadOwner) {
		return true
	}

	return false
}

// SetHeadOwner gets a reference to the given string and assigns it to the HeadOwner field.
func (o *ModelGithubPatch) SetHeadOwner(v string) {
	o.HeadOwner = &v
}

// GetHeadRepo returns the HeadRepo field value if set, zero value otherwise.
func (o *ModelGithubPatch) GetHeadRepo() string {
	if o == nil || IsNil(o.HeadRepo) {
		var ret string
		return ret
	}
	return *o.HeadRepo
}

// GetHeadRepoOk returns a tuple with the HeadRepo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGithubPatch) GetHeadRepoOk() (*string, bool) {
	if o == nil || IsNil(o.HeadRepo) {
		return nil, false
	}
	return o.HeadRepo, true
}

// HasHeadRepo returns a boolean if a field has been set.
func (o *ModelGithubPatch) HasHeadRepo() bool {
	if o != nil && !IsNil(o.HeadRepo) {
		return true
	}

	return false
}

// SetHeadRepo gets a reference to the given string and assigns it to the HeadRepo field.
func (o *ModelGithubPatch) SetHeadRepo(v string) {
	o.HeadRepo = &v
}

// GetPrNumber returns the PrNumber field value if set, zero value otherwise.
func (o *ModelGithubPatch) GetPrNumber() int32 {
	if o == nil || IsNil(o.PrNumber) {
		var ret int32
		return ret
	}
	return *o.PrNumber
}

// GetPrNumberOk returns a tuple with the PrNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelGithubPatch) GetPrNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.PrNumber) {
		return nil, false
	}
	return o.PrNumber, true
}

// HasPrNumber returns a boolean if a field has been set.
func (o *ModelGithubPatch) HasPrNumber() bool {
	if o != nil && !IsNil(o.PrNumber) {
		return true
	}

	return false
}

// SetPrNumber gets a reference to the given int32 and assigns it to the PrNumber field.
func (o *ModelGithubPatch) SetPrNumber(v int32) {
	o.PrNumber = &v
}

func (o ModelGithubPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelGithubPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.BaseOwner) {
		toSerialize["base_owner"] = o.BaseOwner
	}
	if !IsNil(o.BaseRepo) {
		toSerialize["base_repo"] = o.BaseRepo
	}
	if !IsNil(o.HeadHash) {
		toSerialize["head_hash"] = o.HeadHash
	}
	if !IsNil(o.HeadOwner) {
		toSerialize["head_owner"] = o.HeadOwner
	}
	if !IsNil(o.HeadRepo) {
		toSerialize["head_repo"] = o.HeadRepo
	}
	if !IsNil(o.PrNumber) {
		toSerialize["pr_number"] = o.PrNumber
	}
	return toSerialize, nil
}

type NullableModelGithubPatch struct {
	value *ModelGithubPatch
	isSet bool
}

func (v NullableModelGithubPatch) Get() *ModelGithubPatch {
	return v.value
}

func (v *NullableModelGithubPatch) Set(val *ModelGithubPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableModelGithubPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableModelGithubPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelGithubPatch(val *ModelGithubPatch) *NullableModelGithubPatch {
	return &NullableModelGithubPatch{value: val, isSet: true}
}

func (v NullableModelGithubPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelGithubPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


