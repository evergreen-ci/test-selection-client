/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIBetaFeatures type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIBetaFeatures{}

// ModelAPIBetaFeatures struct for ModelAPIBetaFeatures
type ModelAPIBetaFeatures struct {
	SpruceWaterfallEnabled *bool `json:"spruce_waterfall_enabled,omitempty"`
}

// NewModelAPIBetaFeatures instantiates a new ModelAPIBetaFeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIBetaFeatures() *ModelAPIBetaFeatures {
	this := ModelAPIBetaFeatures{}
	return &this
}

// NewModelAPIBetaFeaturesWithDefaults instantiates a new ModelAPIBetaFeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIBetaFeaturesWithDefaults() *ModelAPIBetaFeatures {
	this := ModelAPIBetaFeatures{}
	return &this
}

// GetSpruceWaterfallEnabled returns the SpruceWaterfallEnabled field value if set, zero value otherwise.
func (o *ModelAPIBetaFeatures) GetSpruceWaterfallEnabled() bool {
	if o == nil || IsNil(o.SpruceWaterfallEnabled) {
		var ret bool
		return ret
	}
	return *o.SpruceWaterfallEnabled
}

// GetSpruceWaterfallEnabledOk returns a tuple with the SpruceWaterfallEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIBetaFeatures) GetSpruceWaterfallEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SpruceWaterfallEnabled) {
		return nil, false
	}
	return o.SpruceWaterfallEnabled, true
}

// HasSpruceWaterfallEnabled returns a boolean if a field has been set.
func (o *ModelAPIBetaFeatures) HasSpruceWaterfallEnabled() bool {
	if o != nil && !IsNil(o.SpruceWaterfallEnabled) {
		return true
	}

	return false
}

// SetSpruceWaterfallEnabled gets a reference to the given bool and assigns it to the SpruceWaterfallEnabled field.
func (o *ModelAPIBetaFeatures) SetSpruceWaterfallEnabled(v bool) {
	o.SpruceWaterfallEnabled = &v
}

func (o ModelAPIBetaFeatures) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIBetaFeatures) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpruceWaterfallEnabled) {
		toSerialize["spruce_waterfall_enabled"] = o.SpruceWaterfallEnabled
	}
	return toSerialize, nil
}

type NullableModelAPIBetaFeatures struct {
	value *ModelAPIBetaFeatures
	isSet bool
}

func (v NullableModelAPIBetaFeatures) Get() *ModelAPIBetaFeatures {
	return v.value
}

func (v *NullableModelAPIBetaFeatures) Set(val *ModelAPIBetaFeatures) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIBetaFeatures) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIBetaFeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIBetaFeatures(val *ModelAPIBetaFeatures) *NullableModelAPIBetaFeatures {
	return &NullableModelAPIBetaFeatures{value: val, isSet: true}
}

func (v NullableModelAPIBetaFeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIBetaFeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


