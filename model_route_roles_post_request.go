/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RouteRolesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RouteRolesPostRequest{}

// RouteRolesPostRequest struct for RouteRolesPostRequest
type RouteRolesPostRequest struct {
	// if true, will also create a shell user document for the user. By default, specifying a user that does not exist will error
	CreateUser *bool `json:"create_user,omitempty"`
	// The list of roles to remove for the user
	RemoveRoles []string `json:"remove_roles,omitempty"`
	// the list of roles to add for the user
	Roles []string `json:"roles,omitempty"`
}

// NewRouteRolesPostRequest instantiates a new RouteRolesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRouteRolesPostRequest() *RouteRolesPostRequest {
	this := RouteRolesPostRequest{}
	return &this
}

// NewRouteRolesPostRequestWithDefaults instantiates a new RouteRolesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteRolesPostRequestWithDefaults() *RouteRolesPostRequest {
	this := RouteRolesPostRequest{}
	return &this
}

// GetCreateUser returns the CreateUser field value if set, zero value otherwise.
func (o *RouteRolesPostRequest) GetCreateUser() bool {
	if o == nil || IsNil(o.CreateUser) {
		var ret bool
		return ret
	}
	return *o.CreateUser
}

// GetCreateUserOk returns a tuple with the CreateUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteRolesPostRequest) GetCreateUserOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateUser) {
		return nil, false
	}
	return o.CreateUser, true
}

// HasCreateUser returns a boolean if a field has been set.
func (o *RouteRolesPostRequest) HasCreateUser() bool {
	if o != nil && !IsNil(o.CreateUser) {
		return true
	}

	return false
}

// SetCreateUser gets a reference to the given bool and assigns it to the CreateUser field.
func (o *RouteRolesPostRequest) SetCreateUser(v bool) {
	o.CreateUser = &v
}

// GetRemoveRoles returns the RemoveRoles field value if set, zero value otherwise.
func (o *RouteRolesPostRequest) GetRemoveRoles() []string {
	if o == nil || IsNil(o.RemoveRoles) {
		var ret []string
		return ret
	}
	return o.RemoveRoles
}

// GetRemoveRolesOk returns a tuple with the RemoveRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteRolesPostRequest) GetRemoveRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.RemoveRoles) {
		return nil, false
	}
	return o.RemoveRoles, true
}

// HasRemoveRoles returns a boolean if a field has been set.
func (o *RouteRolesPostRequest) HasRemoveRoles() bool {
	if o != nil && !IsNil(o.RemoveRoles) {
		return true
	}

	return false
}

// SetRemoveRoles gets a reference to the given []string and assigns it to the RemoveRoles field.
func (o *RouteRolesPostRequest) SetRemoveRoles(v []string) {
	o.RemoveRoles = v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *RouteRolesPostRequest) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteRolesPostRequest) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *RouteRolesPostRequest) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *RouteRolesPostRequest) SetRoles(v []string) {
	o.Roles = v
}

func (o RouteRolesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RouteRolesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateUser) {
		toSerialize["create_user"] = o.CreateUser
	}
	if !IsNil(o.RemoveRoles) {
		toSerialize["remove_roles"] = o.RemoveRoles
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return toSerialize, nil
}

type NullableRouteRolesPostRequest struct {
	value *RouteRolesPostRequest
	isSet bool
}

func (v NullableRouteRolesPostRequest) Get() *RouteRolesPostRequest {
	return v.value
}

func (v *NullableRouteRolesPostRequest) Set(val *RouteRolesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteRolesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteRolesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteRolesPostRequest(val *RouteRolesPostRequest) *NullableRouteRolesPostRequest {
	return &NullableRouteRolesPostRequest{value: val, isSet: true}
}

func (v NullableRouteRolesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteRolesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


