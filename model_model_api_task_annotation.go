/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPITaskAnnotation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPITaskAnnotation{}

// ModelAPITaskAnnotation struct for ModelAPITaskAnnotation
type ModelAPITaskAnnotation struct {
	CreatedIssues []ModelAPIIssueLink `json:"created_issues,omitempty"`
	Id *string `json:"id,omitempty"`
	// Links to tickets definitely related
	Issues []ModelAPIIssueLink `json:"issues,omitempty"`
	// Structured data about the task. Since this is user-given json data, the structure can differ between annotations
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// List of links associated with a task, to be displayed in the task metadata sidebar, currently limited to 1
	MetadataLinks []ModelAPIMetadataLink `json:"metadata_links,omitempty"`
	// Comment about the task failure
	Note *ModelAPINote `json:"note,omitempty"`
	// Links to tickets possibly related
	SuspectedIssues []ModelAPIIssueLink `json:"suspected_issues,omitempty"`
	// The number of the execution of the task that the annotation is for
	TaskExecution *int32 `json:"task_execution,omitempty"`
	// Identifier of the task that this annotation is for
	TaskId *string `json:"task_id,omitempty"`
}

// NewModelAPITaskAnnotation instantiates a new ModelAPITaskAnnotation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPITaskAnnotation() *ModelAPITaskAnnotation {
	this := ModelAPITaskAnnotation{}
	return &this
}

// NewModelAPITaskAnnotationWithDefaults instantiates a new ModelAPITaskAnnotation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPITaskAnnotationWithDefaults() *ModelAPITaskAnnotation {
	this := ModelAPITaskAnnotation{}
	return &this
}

// GetCreatedIssues returns the CreatedIssues field value if set, zero value otherwise.
func (o *ModelAPITaskAnnotation) GetCreatedIssues() []ModelAPIIssueLink {
	if o == nil || IsNil(o.CreatedIssues) {
		var ret []ModelAPIIssueLink
		return ret
	}
	return o.CreatedIssues
}

// GetCreatedIssuesOk returns a tuple with the CreatedIssues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskAnnotation) GetCreatedIssuesOk() ([]ModelAPIIssueLink, bool) {
	if o == nil || IsNil(o.CreatedIssues) {
		return nil, false
	}
	return o.CreatedIssues, true
}

// HasCreatedIssues returns a boolean if a field has been set.
func (o *ModelAPITaskAnnotation) HasCreatedIssues() bool {
	if o != nil && !IsNil(o.CreatedIssues) {
		return true
	}

	return false
}

// SetCreatedIssues gets a reference to the given []ModelAPIIssueLink and assigns it to the CreatedIssues field.
func (o *ModelAPITaskAnnotation) SetCreatedIssues(v []ModelAPIIssueLink) {
	o.CreatedIssues = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelAPITaskAnnotation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskAnnotation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelAPITaskAnnotation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelAPITaskAnnotation) SetId(v string) {
	o.Id = &v
}

// GetIssues returns the Issues field value if set, zero value otherwise.
func (o *ModelAPITaskAnnotation) GetIssues() []ModelAPIIssueLink {
	if o == nil || IsNil(o.Issues) {
		var ret []ModelAPIIssueLink
		return ret
	}
	return o.Issues
}

// GetIssuesOk returns a tuple with the Issues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskAnnotation) GetIssuesOk() ([]ModelAPIIssueLink, bool) {
	if o == nil || IsNil(o.Issues) {
		return nil, false
	}
	return o.Issues, true
}

// HasIssues returns a boolean if a field has been set.
func (o *ModelAPITaskAnnotation) HasIssues() bool {
	if o != nil && !IsNil(o.Issues) {
		return true
	}

	return false
}

// SetIssues gets a reference to the given []ModelAPIIssueLink and assigns it to the Issues field.
func (o *ModelAPITaskAnnotation) SetIssues(v []ModelAPIIssueLink) {
	o.Issues = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ModelAPITaskAnnotation) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskAnnotation) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ModelAPITaskAnnotation) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *ModelAPITaskAnnotation) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetMetadataLinks returns the MetadataLinks field value if set, zero value otherwise.
func (o *ModelAPITaskAnnotation) GetMetadataLinks() []ModelAPIMetadataLink {
	if o == nil || IsNil(o.MetadataLinks) {
		var ret []ModelAPIMetadataLink
		return ret
	}
	return o.MetadataLinks
}

// GetMetadataLinksOk returns a tuple with the MetadataLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskAnnotation) GetMetadataLinksOk() ([]ModelAPIMetadataLink, bool) {
	if o == nil || IsNil(o.MetadataLinks) {
		return nil, false
	}
	return o.MetadataLinks, true
}

// HasMetadataLinks returns a boolean if a field has been set.
func (o *ModelAPITaskAnnotation) HasMetadataLinks() bool {
	if o != nil && !IsNil(o.MetadataLinks) {
		return true
	}

	return false
}

// SetMetadataLinks gets a reference to the given []ModelAPIMetadataLink and assigns it to the MetadataLinks field.
func (o *ModelAPITaskAnnotation) SetMetadataLinks(v []ModelAPIMetadataLink) {
	o.MetadataLinks = v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *ModelAPITaskAnnotation) GetNote() ModelAPINote {
	if o == nil || IsNil(o.Note) {
		var ret ModelAPINote
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskAnnotation) GetNoteOk() (*ModelAPINote, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *ModelAPITaskAnnotation) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given ModelAPINote and assigns it to the Note field.
func (o *ModelAPITaskAnnotation) SetNote(v ModelAPINote) {
	o.Note = &v
}

// GetSuspectedIssues returns the SuspectedIssues field value if set, zero value otherwise.
func (o *ModelAPITaskAnnotation) GetSuspectedIssues() []ModelAPIIssueLink {
	if o == nil || IsNil(o.SuspectedIssues) {
		var ret []ModelAPIIssueLink
		return ret
	}
	return o.SuspectedIssues
}

// GetSuspectedIssuesOk returns a tuple with the SuspectedIssues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskAnnotation) GetSuspectedIssuesOk() ([]ModelAPIIssueLink, bool) {
	if o == nil || IsNil(o.SuspectedIssues) {
		return nil, false
	}
	return o.SuspectedIssues, true
}

// HasSuspectedIssues returns a boolean if a field has been set.
func (o *ModelAPITaskAnnotation) HasSuspectedIssues() bool {
	if o != nil && !IsNil(o.SuspectedIssues) {
		return true
	}

	return false
}

// SetSuspectedIssues gets a reference to the given []ModelAPIIssueLink and assigns it to the SuspectedIssues field.
func (o *ModelAPITaskAnnotation) SetSuspectedIssues(v []ModelAPIIssueLink) {
	o.SuspectedIssues = v
}

// GetTaskExecution returns the TaskExecution field value if set, zero value otherwise.
func (o *ModelAPITaskAnnotation) GetTaskExecution() int32 {
	if o == nil || IsNil(o.TaskExecution) {
		var ret int32
		return ret
	}
	return *o.TaskExecution
}

// GetTaskExecutionOk returns a tuple with the TaskExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskAnnotation) GetTaskExecutionOk() (*int32, bool) {
	if o == nil || IsNil(o.TaskExecution) {
		return nil, false
	}
	return o.TaskExecution, true
}

// HasTaskExecution returns a boolean if a field has been set.
func (o *ModelAPITaskAnnotation) HasTaskExecution() bool {
	if o != nil && !IsNil(o.TaskExecution) {
		return true
	}

	return false
}

// SetTaskExecution gets a reference to the given int32 and assigns it to the TaskExecution field.
func (o *ModelAPITaskAnnotation) SetTaskExecution(v int32) {
	o.TaskExecution = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *ModelAPITaskAnnotation) GetTaskId() string {
	if o == nil || IsNil(o.TaskId) {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPITaskAnnotation) GetTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *ModelAPITaskAnnotation) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *ModelAPITaskAnnotation) SetTaskId(v string) {
	o.TaskId = &v
}

func (o ModelAPITaskAnnotation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPITaskAnnotation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedIssues) {
		toSerialize["created_issues"] = o.CreatedIssues
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Issues) {
		toSerialize["issues"] = o.Issues
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.MetadataLinks) {
		toSerialize["metadata_links"] = o.MetadataLinks
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}
	if !IsNil(o.SuspectedIssues) {
		toSerialize["suspected_issues"] = o.SuspectedIssues
	}
	if !IsNil(o.TaskExecution) {
		toSerialize["task_execution"] = o.TaskExecution
	}
	if !IsNil(o.TaskId) {
		toSerialize["task_id"] = o.TaskId
	}
	return toSerialize, nil
}

type NullableModelAPITaskAnnotation struct {
	value *ModelAPITaskAnnotation
	isSet bool
}

func (v NullableModelAPITaskAnnotation) Get() *ModelAPITaskAnnotation {
	return v.value
}

func (v *NullableModelAPITaskAnnotation) Set(val *ModelAPITaskAnnotation) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPITaskAnnotation) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPITaskAnnotation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPITaskAnnotation(val *ModelAPITaskAnnotation) *NullableModelAPITaskAnnotation {
	return &NullableModelAPITaskAnnotation{value: val, isSet: true}
}

func (v NullableModelAPITaskAnnotation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPITaskAnnotation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


