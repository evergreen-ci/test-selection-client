/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RouteHostStopOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RouteHostStopOptions{}

// RouteHostStopOptions struct for RouteHostStopOptions
type RouteHostStopOptions struct {
	// If this host is an unexpirable host with a sleep schedule, setting this to true will keep the host off (and ignore the sleep schedule) until it's started back up manually.
	ShouldKeepOff *bool `json:"should_keep_off,omitempty"`
	// The type of subscription to send when the host is stopped (\"slack\" or \"email\")
	SubscriptionType *string `json:"subscription_type,omitempty"`
}

// NewRouteHostStopOptions instantiates a new RouteHostStopOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRouteHostStopOptions() *RouteHostStopOptions {
	this := RouteHostStopOptions{}
	return &this
}

// NewRouteHostStopOptionsWithDefaults instantiates a new RouteHostStopOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteHostStopOptionsWithDefaults() *RouteHostStopOptions {
	this := RouteHostStopOptions{}
	return &this
}

// GetShouldKeepOff returns the ShouldKeepOff field value if set, zero value otherwise.
func (o *RouteHostStopOptions) GetShouldKeepOff() bool {
	if o == nil || IsNil(o.ShouldKeepOff) {
		var ret bool
		return ret
	}
	return *o.ShouldKeepOff
}

// GetShouldKeepOffOk returns a tuple with the ShouldKeepOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteHostStopOptions) GetShouldKeepOffOk() (*bool, bool) {
	if o == nil || IsNil(o.ShouldKeepOff) {
		return nil, false
	}
	return o.ShouldKeepOff, true
}

// HasShouldKeepOff returns a boolean if a field has been set.
func (o *RouteHostStopOptions) HasShouldKeepOff() bool {
	if o != nil && !IsNil(o.ShouldKeepOff) {
		return true
	}

	return false
}

// SetShouldKeepOff gets a reference to the given bool and assigns it to the ShouldKeepOff field.
func (o *RouteHostStopOptions) SetShouldKeepOff(v bool) {
	o.ShouldKeepOff = &v
}

// GetSubscriptionType returns the SubscriptionType field value if set, zero value otherwise.
func (o *RouteHostStopOptions) GetSubscriptionType() string {
	if o == nil || IsNil(o.SubscriptionType) {
		var ret string
		return ret
	}
	return *o.SubscriptionType
}

// GetSubscriptionTypeOk returns a tuple with the SubscriptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteHostStopOptions) GetSubscriptionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionType) {
		return nil, false
	}
	return o.SubscriptionType, true
}

// HasSubscriptionType returns a boolean if a field has been set.
func (o *RouteHostStopOptions) HasSubscriptionType() bool {
	if o != nil && !IsNil(o.SubscriptionType) {
		return true
	}

	return false
}

// SetSubscriptionType gets a reference to the given string and assigns it to the SubscriptionType field.
func (o *RouteHostStopOptions) SetSubscriptionType(v string) {
	o.SubscriptionType = &v
}

func (o RouteHostStopOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RouteHostStopOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShouldKeepOff) {
		toSerialize["should_keep_off"] = o.ShouldKeepOff
	}
	if !IsNil(o.SubscriptionType) {
		toSerialize["subscription_type"] = o.SubscriptionType
	}
	return toSerialize, nil
}

type NullableRouteHostStopOptions struct {
	value *RouteHostStopOptions
	isSet bool
}

func (v NullableRouteHostStopOptions) Get() *RouteHostStopOptions {
	return v.value
}

func (v *NullableRouteHostStopOptions) Set(val *RouteHostStopOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteHostStopOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteHostStopOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteHostStopOptions(val *RouteHostStopOptions) *NullableRouteHostStopOptions {
	return &NullableRouteHostStopOptions{value: val, isSet: true}
}

func (v NullableRouteHostStopOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteHostStopOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


