/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIModulePatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIModulePatch{}

// ModelAPIModulePatch struct for ModelAPIModulePatch
type ModelAPIModulePatch struct {
	BranchName *string `json:"branch_name,omitempty"`
	CommitMessages []string `json:"commit_messages,omitempty"`
	FileDiffs []ModelFileDiff `json:"file_diffs,omitempty"`
	HtmlLink *string `json:"html_link,omitempty"`
	RawLink *string `json:"raw_link,omitempty"`
}

// NewModelAPIModulePatch instantiates a new ModelAPIModulePatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIModulePatch() *ModelAPIModulePatch {
	this := ModelAPIModulePatch{}
	return &this
}

// NewModelAPIModulePatchWithDefaults instantiates a new ModelAPIModulePatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIModulePatchWithDefaults() *ModelAPIModulePatch {
	this := ModelAPIModulePatch{}
	return &this
}

// GetBranchName returns the BranchName field value if set, zero value otherwise.
func (o *ModelAPIModulePatch) GetBranchName() string {
	if o == nil || IsNil(o.BranchName) {
		var ret string
		return ret
	}
	return *o.BranchName
}

// GetBranchNameOk returns a tuple with the BranchName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIModulePatch) GetBranchNameOk() (*string, bool) {
	if o == nil || IsNil(o.BranchName) {
		return nil, false
	}
	return o.BranchName, true
}

// HasBranchName returns a boolean if a field has been set.
func (o *ModelAPIModulePatch) HasBranchName() bool {
	if o != nil && !IsNil(o.BranchName) {
		return true
	}

	return false
}

// SetBranchName gets a reference to the given string and assigns it to the BranchName field.
func (o *ModelAPIModulePatch) SetBranchName(v string) {
	o.BranchName = &v
}

// GetCommitMessages returns the CommitMessages field value if set, zero value otherwise.
func (o *ModelAPIModulePatch) GetCommitMessages() []string {
	if o == nil || IsNil(o.CommitMessages) {
		var ret []string
		return ret
	}
	return o.CommitMessages
}

// GetCommitMessagesOk returns a tuple with the CommitMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIModulePatch) GetCommitMessagesOk() ([]string, bool) {
	if o == nil || IsNil(o.CommitMessages) {
		return nil, false
	}
	return o.CommitMessages, true
}

// HasCommitMessages returns a boolean if a field has been set.
func (o *ModelAPIModulePatch) HasCommitMessages() bool {
	if o != nil && !IsNil(o.CommitMessages) {
		return true
	}

	return false
}

// SetCommitMessages gets a reference to the given []string and assigns it to the CommitMessages field.
func (o *ModelAPIModulePatch) SetCommitMessages(v []string) {
	o.CommitMessages = v
}

// GetFileDiffs returns the FileDiffs field value if set, zero value otherwise.
func (o *ModelAPIModulePatch) GetFileDiffs() []ModelFileDiff {
	if o == nil || IsNil(o.FileDiffs) {
		var ret []ModelFileDiff
		return ret
	}
	return o.FileDiffs
}

// GetFileDiffsOk returns a tuple with the FileDiffs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIModulePatch) GetFileDiffsOk() ([]ModelFileDiff, bool) {
	if o == nil || IsNil(o.FileDiffs) {
		return nil, false
	}
	return o.FileDiffs, true
}

// HasFileDiffs returns a boolean if a field has been set.
func (o *ModelAPIModulePatch) HasFileDiffs() bool {
	if o != nil && !IsNil(o.FileDiffs) {
		return true
	}

	return false
}

// SetFileDiffs gets a reference to the given []ModelFileDiff and assigns it to the FileDiffs field.
func (o *ModelAPIModulePatch) SetFileDiffs(v []ModelFileDiff) {
	o.FileDiffs = v
}

// GetHtmlLink returns the HtmlLink field value if set, zero value otherwise.
func (o *ModelAPIModulePatch) GetHtmlLink() string {
	if o == nil || IsNil(o.HtmlLink) {
		var ret string
		return ret
	}
	return *o.HtmlLink
}

// GetHtmlLinkOk returns a tuple with the HtmlLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIModulePatch) GetHtmlLinkOk() (*string, bool) {
	if o == nil || IsNil(o.HtmlLink) {
		return nil, false
	}
	return o.HtmlLink, true
}

// HasHtmlLink returns a boolean if a field has been set.
func (o *ModelAPIModulePatch) HasHtmlLink() bool {
	if o != nil && !IsNil(o.HtmlLink) {
		return true
	}

	return false
}

// SetHtmlLink gets a reference to the given string and assigns it to the HtmlLink field.
func (o *ModelAPIModulePatch) SetHtmlLink(v string) {
	o.HtmlLink = &v
}

// GetRawLink returns the RawLink field value if set, zero value otherwise.
func (o *ModelAPIModulePatch) GetRawLink() string {
	if o == nil || IsNil(o.RawLink) {
		var ret string
		return ret
	}
	return *o.RawLink
}

// GetRawLinkOk returns a tuple with the RawLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIModulePatch) GetRawLinkOk() (*string, bool) {
	if o == nil || IsNil(o.RawLink) {
		return nil, false
	}
	return o.RawLink, true
}

// HasRawLink returns a boolean if a field has been set.
func (o *ModelAPIModulePatch) HasRawLink() bool {
	if o != nil && !IsNil(o.RawLink) {
		return true
	}

	return false
}

// SetRawLink gets a reference to the given string and assigns it to the RawLink field.
func (o *ModelAPIModulePatch) SetRawLink(v string) {
	o.RawLink = &v
}

func (o ModelAPIModulePatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIModulePatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BranchName) {
		toSerialize["branch_name"] = o.BranchName
	}
	if !IsNil(o.CommitMessages) {
		toSerialize["commit_messages"] = o.CommitMessages
	}
	if !IsNil(o.FileDiffs) {
		toSerialize["file_diffs"] = o.FileDiffs
	}
	if !IsNil(o.HtmlLink) {
		toSerialize["html_link"] = o.HtmlLink
	}
	if !IsNil(o.RawLink) {
		toSerialize["raw_link"] = o.RawLink
	}
	return toSerialize, nil
}

type NullableModelAPIModulePatch struct {
	value *ModelAPIModulePatch
	isSet bool
}

func (v NullableModelAPIModulePatch) Get() *ModelAPIModulePatch {
	return v.value
}

func (v *NullableModelAPIModulePatch) Set(val *ModelAPIModulePatch) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIModulePatch) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIModulePatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIModulePatch(val *ModelAPIModulePatch) *NullableModelAPIModulePatch {
	return &NullableModelAPIModulePatch{value: val, isSet: true}
}

func (v NullableModelAPIModulePatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIModulePatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


