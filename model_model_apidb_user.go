/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIDBUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIDBUser{}

// ModelAPIDBUser struct for ModelAPIDBUser
type ModelAPIDBUser struct {
	BetaFeatures *ModelAPIBetaFeatures `json:"beta_features,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	EmailAddress *string `json:"email_address,omitempty"`
	// will be set to true if the user represents a service user
	OnlyApi *bool `json:"only_api,omitempty"`
	ParsleyFilters []ModelAPIParsleyFilter `json:"parsley_filters,omitempty"`
	ParsleySettings *ModelAPIParsleySettings `json:"parsley_settings,omitempty"`
	Roles []string `json:"roles,omitempty"`
	Settings *ModelAPIUserSettings `json:"settings,omitempty"`
	UserId *string `json:"user_id,omitempty"`
}

// NewModelAPIDBUser instantiates a new ModelAPIDBUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIDBUser() *ModelAPIDBUser {
	this := ModelAPIDBUser{}
	return &this
}

// NewModelAPIDBUserWithDefaults instantiates a new ModelAPIDBUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIDBUserWithDefaults() *ModelAPIDBUser {
	this := ModelAPIDBUser{}
	return &this
}

// GetBetaFeatures returns the BetaFeatures field value if set, zero value otherwise.
func (o *ModelAPIDBUser) GetBetaFeatures() ModelAPIBetaFeatures {
	if o == nil || IsNil(o.BetaFeatures) {
		var ret ModelAPIBetaFeatures
		return ret
	}
	return *o.BetaFeatures
}

// GetBetaFeaturesOk returns a tuple with the BetaFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIDBUser) GetBetaFeaturesOk() (*ModelAPIBetaFeatures, bool) {
	if o == nil || IsNil(o.BetaFeatures) {
		return nil, false
	}
	return o.BetaFeatures, true
}

// HasBetaFeatures returns a boolean if a field has been set.
func (o *ModelAPIDBUser) HasBetaFeatures() bool {
	if o != nil && !IsNil(o.BetaFeatures) {
		return true
	}

	return false
}

// SetBetaFeatures gets a reference to the given ModelAPIBetaFeatures and assigns it to the BetaFeatures field.
func (o *ModelAPIDBUser) SetBetaFeatures(v ModelAPIBetaFeatures) {
	o.BetaFeatures = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ModelAPIDBUser) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIDBUser) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ModelAPIDBUser) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ModelAPIDBUser) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *ModelAPIDBUser) GetEmailAddress() string {
	if o == nil || IsNil(o.EmailAddress) {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIDBUser) GetEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddress) {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *ModelAPIDBUser) HasEmailAddress() bool {
	if o != nil && !IsNil(o.EmailAddress) {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *ModelAPIDBUser) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetOnlyApi returns the OnlyApi field value if set, zero value otherwise.
func (o *ModelAPIDBUser) GetOnlyApi() bool {
	if o == nil || IsNil(o.OnlyApi) {
		var ret bool
		return ret
	}
	return *o.OnlyApi
}

// GetOnlyApiOk returns a tuple with the OnlyApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIDBUser) GetOnlyApiOk() (*bool, bool) {
	if o == nil || IsNil(o.OnlyApi) {
		return nil, false
	}
	return o.OnlyApi, true
}

// HasOnlyApi returns a boolean if a field has been set.
func (o *ModelAPIDBUser) HasOnlyApi() bool {
	if o != nil && !IsNil(o.OnlyApi) {
		return true
	}

	return false
}

// SetOnlyApi gets a reference to the given bool and assigns it to the OnlyApi field.
func (o *ModelAPIDBUser) SetOnlyApi(v bool) {
	o.OnlyApi = &v
}

// GetParsleyFilters returns the ParsleyFilters field value if set, zero value otherwise.
func (o *ModelAPIDBUser) GetParsleyFilters() []ModelAPIParsleyFilter {
	if o == nil || IsNil(o.ParsleyFilters) {
		var ret []ModelAPIParsleyFilter
		return ret
	}
	return o.ParsleyFilters
}

// GetParsleyFiltersOk returns a tuple with the ParsleyFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIDBUser) GetParsleyFiltersOk() ([]ModelAPIParsleyFilter, bool) {
	if o == nil || IsNil(o.ParsleyFilters) {
		return nil, false
	}
	return o.ParsleyFilters, true
}

// HasParsleyFilters returns a boolean if a field has been set.
func (o *ModelAPIDBUser) HasParsleyFilters() bool {
	if o != nil && !IsNil(o.ParsleyFilters) {
		return true
	}

	return false
}

// SetParsleyFilters gets a reference to the given []ModelAPIParsleyFilter and assigns it to the ParsleyFilters field.
func (o *ModelAPIDBUser) SetParsleyFilters(v []ModelAPIParsleyFilter) {
	o.ParsleyFilters = v
}

// GetParsleySettings returns the ParsleySettings field value if set, zero value otherwise.
func (o *ModelAPIDBUser) GetParsleySettings() ModelAPIParsleySettings {
	if o == nil || IsNil(o.ParsleySettings) {
		var ret ModelAPIParsleySettings
		return ret
	}
	return *o.ParsleySettings
}

// GetParsleySettingsOk returns a tuple with the ParsleySettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIDBUser) GetParsleySettingsOk() (*ModelAPIParsleySettings, bool) {
	if o == nil || IsNil(o.ParsleySettings) {
		return nil, false
	}
	return o.ParsleySettings, true
}

// HasParsleySettings returns a boolean if a field has been set.
func (o *ModelAPIDBUser) HasParsleySettings() bool {
	if o != nil && !IsNil(o.ParsleySettings) {
		return true
	}

	return false
}

// SetParsleySettings gets a reference to the given ModelAPIParsleySettings and assigns it to the ParsleySettings field.
func (o *ModelAPIDBUser) SetParsleySettings(v ModelAPIParsleySettings) {
	o.ParsleySettings = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ModelAPIDBUser) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIDBUser) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *ModelAPIDBUser) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *ModelAPIDBUser) SetRoles(v []string) {
	o.Roles = v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *ModelAPIDBUser) GetSettings() ModelAPIUserSettings {
	if o == nil || IsNil(o.Settings) {
		var ret ModelAPIUserSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIDBUser) GetSettingsOk() (*ModelAPIUserSettings, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *ModelAPIDBUser) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given ModelAPIUserSettings and assigns it to the Settings field.
func (o *ModelAPIDBUser) SetSettings(v ModelAPIUserSettings) {
	o.Settings = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ModelAPIDBUser) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIDBUser) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ModelAPIDBUser) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ModelAPIDBUser) SetUserId(v string) {
	o.UserId = &v
}

func (o ModelAPIDBUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIDBUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BetaFeatures) {
		toSerialize["beta_features"] = o.BetaFeatures
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.EmailAddress) {
		toSerialize["email_address"] = o.EmailAddress
	}
	if !IsNil(o.OnlyApi) {
		toSerialize["only_api"] = o.OnlyApi
	}
	if !IsNil(o.ParsleyFilters) {
		toSerialize["parsley_filters"] = o.ParsleyFilters
	}
	if !IsNil(o.ParsleySettings) {
		toSerialize["parsley_settings"] = o.ParsleySettings
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableModelAPIDBUser struct {
	value *ModelAPIDBUser
	isSet bool
}

func (v NullableModelAPIDBUser) Get() *ModelAPIDBUser {
	return v.value
}

func (v *NullableModelAPIDBUser) Set(val *ModelAPIDBUser) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIDBUser) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIDBUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIDBUser(val *ModelAPIDBUser) *NullableModelAPIDBUser {
	return &NullableModelAPIDBUser{value: val, isSet: true}
}

func (v NullableModelAPIDBUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIDBUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


