/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIBanner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIBanner{}

// ModelAPIBanner struct for ModelAPIBanner
type ModelAPIBanner struct {
	Banner *string `json:"banner,omitempty"`
	Theme *string `json:"theme,omitempty"`
}

// NewModelAPIBanner instantiates a new ModelAPIBanner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIBanner() *ModelAPIBanner {
	this := ModelAPIBanner{}
	return &this
}

// NewModelAPIBannerWithDefaults instantiates a new ModelAPIBanner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIBannerWithDefaults() *ModelAPIBanner {
	this := ModelAPIBanner{}
	return &this
}

// GetBanner returns the Banner field value if set, zero value otherwise.
func (o *ModelAPIBanner) GetBanner() string {
	if o == nil || IsNil(o.Banner) {
		var ret string
		return ret
	}
	return *o.Banner
}

// GetBannerOk returns a tuple with the Banner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIBanner) GetBannerOk() (*string, bool) {
	if o == nil || IsNil(o.Banner) {
		return nil, false
	}
	return o.Banner, true
}

// HasBanner returns a boolean if a field has been set.
func (o *ModelAPIBanner) HasBanner() bool {
	if o != nil && !IsNil(o.Banner) {
		return true
	}

	return false
}

// SetBanner gets a reference to the given string and assigns it to the Banner field.
func (o *ModelAPIBanner) SetBanner(v string) {
	o.Banner = &v
}

// GetTheme returns the Theme field value if set, zero value otherwise.
func (o *ModelAPIBanner) GetTheme() string {
	if o == nil || IsNil(o.Theme) {
		var ret string
		return ret
	}
	return *o.Theme
}

// GetThemeOk returns a tuple with the Theme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIBanner) GetThemeOk() (*string, bool) {
	if o == nil || IsNil(o.Theme) {
		return nil, false
	}
	return o.Theme, true
}

// HasTheme returns a boolean if a field has been set.
func (o *ModelAPIBanner) HasTheme() bool {
	if o != nil && !IsNil(o.Theme) {
		return true
	}

	return false
}

// SetTheme gets a reference to the given string and assigns it to the Theme field.
func (o *ModelAPIBanner) SetTheme(v string) {
	o.Theme = &v
}

func (o ModelAPIBanner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIBanner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Banner) {
		toSerialize["banner"] = o.Banner
	}
	if !IsNil(o.Theme) {
		toSerialize["theme"] = o.Theme
	}
	return toSerialize, nil
}

type NullableModelAPIBanner struct {
	value *ModelAPIBanner
	isSet bool
}

func (v NullableModelAPIBanner) Get() *ModelAPIBanner {
	return v.value
}

func (v *NullableModelAPIBanner) Set(val *ModelAPIBanner) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIBanner) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIBanner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIBanner(val *ModelAPIBanner) *NullableModelAPIBanner {
	return &NullableModelAPIBanner{value: val, isSet: true}
}

func (v NullableModelAPIBanner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIBanner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


