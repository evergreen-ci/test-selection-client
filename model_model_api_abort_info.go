/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIAbortInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIAbortInfo{}

// ModelAPIAbortInfo struct for ModelAPIAbortInfo
type ModelAPIAbortInfo struct {
	NewVersion *string `json:"new_version,omitempty"`
	PrClosed *bool `json:"pr_closed,omitempty"`
	TaskId *string `json:"task_id,omitempty"`
	User *string `json:"user,omitempty"`
}

// NewModelAPIAbortInfo instantiates a new ModelAPIAbortInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIAbortInfo() *ModelAPIAbortInfo {
	this := ModelAPIAbortInfo{}
	return &this
}

// NewModelAPIAbortInfoWithDefaults instantiates a new ModelAPIAbortInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIAbortInfoWithDefaults() *ModelAPIAbortInfo {
	this := ModelAPIAbortInfo{}
	return &this
}

// GetNewVersion returns the NewVersion field value if set, zero value otherwise.
func (o *ModelAPIAbortInfo) GetNewVersion() string {
	if o == nil || IsNil(o.NewVersion) {
		var ret string
		return ret
	}
	return *o.NewVersion
}

// GetNewVersionOk returns a tuple with the NewVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIAbortInfo) GetNewVersionOk() (*string, bool) {
	if o == nil || IsNil(o.NewVersion) {
		return nil, false
	}
	return o.NewVersion, true
}

// HasNewVersion returns a boolean if a field has been set.
func (o *ModelAPIAbortInfo) HasNewVersion() bool {
	if o != nil && !IsNil(o.NewVersion) {
		return true
	}

	return false
}

// SetNewVersion gets a reference to the given string and assigns it to the NewVersion field.
func (o *ModelAPIAbortInfo) SetNewVersion(v string) {
	o.NewVersion = &v
}

// GetPrClosed returns the PrClosed field value if set, zero value otherwise.
func (o *ModelAPIAbortInfo) GetPrClosed() bool {
	if o == nil || IsNil(o.PrClosed) {
		var ret bool
		return ret
	}
	return *o.PrClosed
}

// GetPrClosedOk returns a tuple with the PrClosed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIAbortInfo) GetPrClosedOk() (*bool, bool) {
	if o == nil || IsNil(o.PrClosed) {
		return nil, false
	}
	return o.PrClosed, true
}

// HasPrClosed returns a boolean if a field has been set.
func (o *ModelAPIAbortInfo) HasPrClosed() bool {
	if o != nil && !IsNil(o.PrClosed) {
		return true
	}

	return false
}

// SetPrClosed gets a reference to the given bool and assigns it to the PrClosed field.
func (o *ModelAPIAbortInfo) SetPrClosed(v bool) {
	o.PrClosed = &v
}

// GetTaskId returns the TaskId field value if set, zero value otherwise.
func (o *ModelAPIAbortInfo) GetTaskId() string {
	if o == nil || IsNil(o.TaskId) {
		var ret string
		return ret
	}
	return *o.TaskId
}

// GetTaskIdOk returns a tuple with the TaskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIAbortInfo) GetTaskIdOk() (*string, bool) {
	if o == nil || IsNil(o.TaskId) {
		return nil, false
	}
	return o.TaskId, true
}

// HasTaskId returns a boolean if a field has been set.
func (o *ModelAPIAbortInfo) HasTaskId() bool {
	if o != nil && !IsNil(o.TaskId) {
		return true
	}

	return false
}

// SetTaskId gets a reference to the given string and assigns it to the TaskId field.
func (o *ModelAPIAbortInfo) SetTaskId(v string) {
	o.TaskId = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ModelAPIAbortInfo) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIAbortInfo) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ModelAPIAbortInfo) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *ModelAPIAbortInfo) SetUser(v string) {
	o.User = &v
}

func (o ModelAPIAbortInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIAbortInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewVersion) {
		toSerialize["new_version"] = o.NewVersion
	}
	if !IsNil(o.PrClosed) {
		toSerialize["pr_closed"] = o.PrClosed
	}
	if !IsNil(o.TaskId) {
		toSerialize["task_id"] = o.TaskId
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableModelAPIAbortInfo struct {
	value *ModelAPIAbortInfo
	isSet bool
}

func (v NullableModelAPIAbortInfo) Get() *ModelAPIAbortInfo {
	return v.value
}

func (v *NullableModelAPIAbortInfo) Set(val *ModelAPIAbortInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIAbortInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIAbortInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIAbortInfo(val *ModelAPIAbortInfo) *NullableModelAPIAbortInfo {
	return &NullableModelAPIAbortInfo{value: val, isSet: true}
}

func (v NullableModelAPIAbortInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIAbortInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


