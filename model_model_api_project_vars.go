/*
Evergreen REST v2 API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ModelAPIProjectVars type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAPIProjectVars{}

// ModelAPIProjectVars struct for ModelAPIProjectVars
type ModelAPIProjectVars struct {
	// Admin-only variable names.
	AdminOnlyVars *map[string]bool `json:"admin_only_vars,omitempty"`
	// Private variable names.
	PrivateVars *map[string]bool `json:"private_vars,omitempty"`
	// Regular project variable names and their values.
	Vars *map[string]string `json:"vars,omitempty"`
	// Names of project variables to delete.
	VarsToDelete []string `json:"vars_to_delete,omitempty"`
}

// NewModelAPIProjectVars instantiates a new ModelAPIProjectVars object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAPIProjectVars() *ModelAPIProjectVars {
	this := ModelAPIProjectVars{}
	return &this
}

// NewModelAPIProjectVarsWithDefaults instantiates a new ModelAPIProjectVars object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAPIProjectVarsWithDefaults() *ModelAPIProjectVars {
	this := ModelAPIProjectVars{}
	return &this
}

// GetAdminOnlyVars returns the AdminOnlyVars field value if set, zero value otherwise.
func (o *ModelAPIProjectVars) GetAdminOnlyVars() map[string]bool {
	if o == nil || IsNil(o.AdminOnlyVars) {
		var ret map[string]bool
		return ret
	}
	return *o.AdminOnlyVars
}

// GetAdminOnlyVarsOk returns a tuple with the AdminOnlyVars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIProjectVars) GetAdminOnlyVarsOk() (*map[string]bool, bool) {
	if o == nil || IsNil(o.AdminOnlyVars) {
		return nil, false
	}
	return o.AdminOnlyVars, true
}

// HasAdminOnlyVars returns a boolean if a field has been set.
func (o *ModelAPIProjectVars) HasAdminOnlyVars() bool {
	if o != nil && !IsNil(o.AdminOnlyVars) {
		return true
	}

	return false
}

// SetAdminOnlyVars gets a reference to the given map[string]bool and assigns it to the AdminOnlyVars field.
func (o *ModelAPIProjectVars) SetAdminOnlyVars(v map[string]bool) {
	o.AdminOnlyVars = &v
}

// GetPrivateVars returns the PrivateVars field value if set, zero value otherwise.
func (o *ModelAPIProjectVars) GetPrivateVars() map[string]bool {
	if o == nil || IsNil(o.PrivateVars) {
		var ret map[string]bool
		return ret
	}
	return *o.PrivateVars
}

// GetPrivateVarsOk returns a tuple with the PrivateVars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIProjectVars) GetPrivateVarsOk() (*map[string]bool, bool) {
	if o == nil || IsNil(o.PrivateVars) {
		return nil, false
	}
	return o.PrivateVars, true
}

// HasPrivateVars returns a boolean if a field has been set.
func (o *ModelAPIProjectVars) HasPrivateVars() bool {
	if o != nil && !IsNil(o.PrivateVars) {
		return true
	}

	return false
}

// SetPrivateVars gets a reference to the given map[string]bool and assigns it to the PrivateVars field.
func (o *ModelAPIProjectVars) SetPrivateVars(v map[string]bool) {
	o.PrivateVars = &v
}

// GetVars returns the Vars field value if set, zero value otherwise.
func (o *ModelAPIProjectVars) GetVars() map[string]string {
	if o == nil || IsNil(o.Vars) {
		var ret map[string]string
		return ret
	}
	return *o.Vars
}

// GetVarsOk returns a tuple with the Vars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIProjectVars) GetVarsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Vars) {
		return nil, false
	}
	return o.Vars, true
}

// HasVars returns a boolean if a field has been set.
func (o *ModelAPIProjectVars) HasVars() bool {
	if o != nil && !IsNil(o.Vars) {
		return true
	}

	return false
}

// SetVars gets a reference to the given map[string]string and assigns it to the Vars field.
func (o *ModelAPIProjectVars) SetVars(v map[string]string) {
	o.Vars = &v
}

// GetVarsToDelete returns the VarsToDelete field value if set, zero value otherwise.
func (o *ModelAPIProjectVars) GetVarsToDelete() []string {
	if o == nil || IsNil(o.VarsToDelete) {
		var ret []string
		return ret
	}
	return o.VarsToDelete
}

// GetVarsToDeleteOk returns a tuple with the VarsToDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAPIProjectVars) GetVarsToDeleteOk() ([]string, bool) {
	if o == nil || IsNil(o.VarsToDelete) {
		return nil, false
	}
	return o.VarsToDelete, true
}

// HasVarsToDelete returns a boolean if a field has been set.
func (o *ModelAPIProjectVars) HasVarsToDelete() bool {
	if o != nil && !IsNil(o.VarsToDelete) {
		return true
	}

	return false
}

// SetVarsToDelete gets a reference to the given []string and assigns it to the VarsToDelete field.
func (o *ModelAPIProjectVars) SetVarsToDelete(v []string) {
	o.VarsToDelete = v
}

func (o ModelAPIProjectVars) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAPIProjectVars) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminOnlyVars) {
		toSerialize["admin_only_vars"] = o.AdminOnlyVars
	}
	if !IsNil(o.PrivateVars) {
		toSerialize["private_vars"] = o.PrivateVars
	}
	if !IsNil(o.Vars) {
		toSerialize["vars"] = o.Vars
	}
	if !IsNil(o.VarsToDelete) {
		toSerialize["vars_to_delete"] = o.VarsToDelete
	}
	return toSerialize, nil
}

type NullableModelAPIProjectVars struct {
	value *ModelAPIProjectVars
	isSet bool
}

func (v NullableModelAPIProjectVars) Get() *ModelAPIProjectVars {
	return v.value
}

func (v *NullableModelAPIProjectVars) Set(val *ModelAPIProjectVars) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAPIProjectVars) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAPIProjectVars) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAPIProjectVars(val *ModelAPIProjectVars) *NullableModelAPIProjectVars {
	return &NullableModelAPIProjectVars{value: val, isSet: true}
}

func (v NullableModelAPIProjectVars) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAPIProjectVars) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


